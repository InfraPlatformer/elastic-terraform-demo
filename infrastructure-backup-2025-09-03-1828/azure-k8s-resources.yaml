apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-09-03T17:11:08Z"
    generateName: elasticsearch-azure-6b49cc647f-
    labels:
      app: elasticsearch-azure
      pod-template-hash: 6b49cc647f
    name: elasticsearch-azure-6b49cc647f-2pztg
    namespace: elasticsearch
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: elasticsearch-azure-6b49cc647f
      uid: 0085d173-106a-4950-8163-83c50337a826
    resourceVersion: "2703"
    uid: 22f3d113-ff29-4d19-ba66-81e89f7fe269
  spec:
    containers:
    - env:
      - name: discovery.type
        value: single-node
      - name: xpack.security.enabled
        value: "false"
      - name: ES_JAVA_OPTS
        value: -Xms1g -Xmx1g
      image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
      imagePullPolicy: IfNotPresent
      name: elasticsearch
      ports:
      - containerPort: 9200
        protocol: TCP
      - containerPort: 9300
        protocol: TCP
      resources:
        limits:
          cpu: "1"
          memory: 2Gi
        requests:
          cpu: 500m
          memory: 1Gi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7nfb8
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: aks-nodepool1-28075912-vmss000001
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: kube-api-access-7nfb8
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:11:54Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:11:08Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:11:54Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:11:54Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:11:08Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://c7f40d1c2043a955bd37150c6702180e9a140a235c61060c7fb97037a14ceb7a
      image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
      imageID: docker.elastic.co/elasticsearch/elasticsearch@sha256:4cd9ce4ccb04618617114da1df8240473bbd004329c1bc0252cebeec089b629e
      lastState: {}
      name: elasticsearch
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-03T17:11:53Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7nfb8
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.224.0.5
    hostIPs:
    - ip: 10.224.0.5
    phase: Running
    podIP: 10.244.1.235
    podIPs:
    - ip: 10.244.1.235
    qosClass: Burstable
    startTime: "2025-09-03T17:11:08Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-09-03T17:11:09Z"
    generateName: kibana-azure-d8cff6d88-
    labels:
      app: kibana-azure
      pod-template-hash: d8cff6d88
    name: kibana-azure-d8cff6d88-dnblv
    namespace: elasticsearch
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: kibana-azure-d8cff6d88
      uid: 2a6d91d6-0d6f-4785-a2a9-3641bffe6a11
    resourceVersion: "2661"
    uid: bc843a7a-736d-4167-800c-98fa2b53cf64
  spec:
    containers:
    - env:
      - name: ELASTICSEARCH_HOSTS
        value: http://elasticsearch-azure-service:9200
      - name: xpack.security.enabled
        value: "false"
      - name: xpack.fleet.enabled
        value: "false"
      - name: xpack.ingestManager.enabled
        value: "false"
      - name: telemetry.enabled
        value: "false"
      image: docker.elastic.co/kibana/kibana:8.11.0
      imagePullPolicy: IfNotPresent
      name: kibana
      ports:
      - containerPort: 5601
        protocol: TCP
      resources:
        limits:
          cpu: 500m
          memory: 1Gi
        requests:
          cpu: 250m
          memory: 512Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-lshv6
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: aks-nodepool1-28075912-vmss000000
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: kube-api-access-lshv6
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:11:45Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:11:09Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:11:45Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:11:45Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:11:09Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://9bf44bdbb1cdaf9b251f48a26d9ebe866e2a38d6f6776d2e55230db09e5e44d7
      image: docker.elastic.co/kibana/kibana:8.11.0
      imageID: docker.elastic.co/kibana/kibana@sha256:76773735fa086882909add84132a59d1765686d0fc170b35990acab814cf4a72
      lastState: {}
      name: kibana
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-03T17:11:44Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-lshv6
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.224.0.4
    hostIPs:
    - ip: 10.224.0.4
    phase: Running
    podIP: 10.244.0.56
    podIPs:
    - ip: 10.244.0.56
    qosClass: Burstable
    startTime: "2025-09-03T17:11:09Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      WSID: ZWRlMzc2MjctNDFhOC00ZjdjLTg1YTAtMzkzNjQ4ODIyM2E5
      agentVersion: azure-mdsd-1.35.7
      dockerProviderVersion: 18.0.1-0
      kubernetes.azure.com/no-http-proxy-vars: "true"
      schema-versions: v1
    creationTimestamp: "2025-09-03T17:09:14Z"
    generateName: ama-logs-
    labels:
      component: ama-logs-agent
      controller-revision-hash: 79f6c4dd75
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "1"
      tier: node
    name: ama-logs-f946r
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: ama-logs
      uid: 7a4b0be4-65c7-443a-85b3-69178ea8fc50
    resourceVersion: "1878"
    uid: 31fd32dd-816a-4709-9af8-6032de96a253
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-nodepool1-28075912-vmss000001
    containers:
    - args:
      - --secret-namespace=kube-system
      - --secret-name=aad-msi-auth-token
      - --token-server-listening-port=8888
      - --health-server-listening-port=9999
      - --restart-pod-waiting-minutes-on-broken-connection=240
      command:
      - /addon-token-adapter
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io
      - name: AZMON_COLLECT_ENV
        value: "false"
      image: mcr.microsoft.com/aks/msi/addon-token-adapter:master.250604.1
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 9999
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 60
        successThreshold: 1
        timeoutSeconds: 1
      name: addon-token-adapter
      resources:
        limits:
          cpu: 100m
          memory: 100Mi
        requests:
          cpu: 20m
          memory: 50Mi
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
          - NET_RAW
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qm2ld
        readOnly: true
    - env:
      - name: KUBERNETES_SERVICE_HOST
        value: elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io
      - name: NODE_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      - name: CONTAINER_MEMORY_LIMIT_IN_BYTES
        valueFrom:
          resourceFieldRef:
            containerName: ama-logs
            divisor: "0"
            resource: limits.memory
      - name: HOSTNAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: FBIT_SERVICE_FLUSH_INTERVAL
        value: "15"
      - name: FBIT_TAIL_BUFFER_CHUNK_SIZE
        value: "1"
      - name: FBIT_TAIL_BUFFER_MAX_SIZE
        value: "1"
      - name: AKS_CLUSTER_NAME
        value: elasticsearch-cluster-azure
      - name: AKS_RESOURCE_ID
        value: /subscriptions/f0d02754-d8ca-4e7d-b010-ebac7cd463da/resourceGroups/multi-cloud-elastic-rg/providers/Microsoft.ContainerService/managedClusters/elasticsearch-cluster-azure
      - name: AKS_NODE_RESOURCE_GROUP
        value: MC_multi-cloud-elastic-rg_elasticsearch-cluster-azure_westus2
      - name: AKS_REGION
        value: westus2
      - name: CONTROLLER_TYPE
        value: DaemonSet
      - name: USER_ASSIGNED_IDENTITY_CLIENT_ID
      - name: AZMON_CONTAINERLOGS_ONEAGENT_REGIONS
        value: koreacentral,norwayeast,eastus2
      - name: APPMONITORING_AUTOINSTRUMENTATION_ENABLED
        value: "false"
      - name: APPMONITORING_OPENTELEMETRYLOGS_ENABLED
        value: "false"
      - name: APPMONITORING_OPENTELEMETRYLOGS_PORT
        value: "28331"
      - name: PROMETHEUS_METRICS_SCRAPING_DISABLED
        value: "false"
      - name: USING_AAD_MSI_AUTH
        value: "true"
      - name: SYSLOG_HOST_PORT
        value: "28330"
      - name: AZMON_RETINA_FLOW_LOGS_ENABLED
        value: "false"
      - name: AZMON_RESOURCE_OPTIMIZATION_ENABLED
        value: "false"
      - name: AZMON_TELEGRAF_LIVENESSPROBE_ENABLED
        value: "false"
      - name: CLUSTER_CLOUD_ENVIRONMENT
        value: azurepubliccloud
      image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod:3.1.28
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /bin/bash
          - -c
          - /opt/livenessprobe.sh
        failureThreshold: 3
        initialDelaySeconds: 60
        periodSeconds: 60
        successThreshold: 1
        timeoutSeconds: 15
      name: ama-logs
      ports:
      - containerPort: 25225
        protocol: TCP
      - containerPort: 25224
        protocol: UDP
      - containerPort: 28330
        hostPort: 28330
        name: syslog
        protocol: TCP
      resources:
        limits:
          cpu: "1"
          memory: 1Gi
        requests:
          cpu: 75m
          memory: 325Mi
      securityContext:
        capabilities:
          add:
          - DAC_OVERRIDE
          drop:
          - ALL
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /hostfs
        mountPropagation: HostToContainer
        name: host-root
        readOnly: true
      - mountPath: /var/log
        name: host-log
      - mountPath: /var/run/mdsd-ci
        name: mdsd-sock
      - mountPath: /var/run/mdsd-PrometheusSidecar
        name: mdsd-prometheus-sock
      - mountPath: /var/lib/docker/containers
        name: containerlog-path
        readOnly: true
      - mountPath: /mnt/docker
        name: containerlog-path-2
        readOnly: true
      - mountPath: /mnt/containers
        name: containerlog-path-3
        readOnly: true
      - mountPath: /etc/kubernetes/host
        name: azure-json-path
      - mountPath: /etc/ama-logs-secret
        name: ama-logs-secret
        readOnly: true
      - mountPath: /etc/omsagent-secret
        name: ama-logs-secret
        readOnly: true
      - mountPath: /etc/config/settings
        name: settings-vol-config
        readOnly: true
      - mountPath: /etc/config/settings/adx
        name: ama-logs-adx-secret
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qm2ld
        readOnly: true
    - env:
      - name: KUBERNETES_SERVICE_HOST
        value: elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io
      - name: NODE_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      - name: CONTAINER_MEMORY_LIMIT_IN_BYTES
        valueFrom:
          resourceFieldRef:
            containerName: ama-logs-prometheus
            divisor: "0"
            resource: limits.memory
      - name: HOSTNAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: AKS_CLUSTER_NAME
        value: elasticsearch-cluster-azure
      - name: AKS_RESOURCE_ID
        value: /subscriptions/f0d02754-d8ca-4e7d-b010-ebac7cd463da/resourceGroups/multi-cloud-elastic-rg/providers/Microsoft.ContainerService/managedClusters/elasticsearch-cluster-azure
      - name: AKS_NODE_RESOURCE_GROUP
        value: MC_multi-cloud-elastic-rg_elasticsearch-cluster-azure_westus2
      - name: AKS_REGION
        value: westus2
      - name: CONTROLLER_TYPE
        value: DaemonSet
      - name: CONTAINER_TYPE
        value: PrometheusSidecar
      - name: USER_ASSIGNED_IDENTITY_CLIENT_ID
      - name: USING_AAD_MSI_AUTH
        value: "true"
      - name: SYSLOG_HOST_PORT
        value: "28330"
      - name: AZMON_TELEGRAF_LIVENESSPROBE_ENABLED
        value: "false"
      - name: CLUSTER_CLOUD_ENVIRONMENT
        value: azurepubliccloud
      image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod:3.1.28
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /bin/bash
          - -c
          - /opt/livenessprobe.sh
        failureThreshold: 3
        initialDelaySeconds: 60
        periodSeconds: 60
        successThreshold: 1
        timeoutSeconds: 15
      name: ama-logs-prometheus
      resources:
        limits:
          cpu: 500m
          memory: 1Gi
        requests:
          cpu: 75m
          memory: 225Mi
      securityContext:
        capabilities:
          add:
          - DAC_OVERRIDE
          drop:
          - ALL
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/kubernetes/host
        name: azure-json-path
      - mountPath: /etc/ama-logs-secret
        name: ama-logs-secret
        readOnly: true
      - mountPath: /etc/omsagent-secret
        name: ama-logs-secret
        readOnly: true
      - mountPath: /etc/config/settings
        name: settings-vol-config
        readOnly: true
      - mountPath: /etc/config/osm-settings
        name: osm-settings-vol-config
        readOnly: true
      - mountPath: /var/run/mdsd-PrometheusSidecar
        name: mdsd-prometheus-sock
      - mountPath: /var/run/mdsd-ci
        name: mdsd-sock
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qm2ld
        readOnly: true
    dnsConfig:
      options:
      - name: ndots
        value: "3"
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: aks-nodepool1-28075912-vmss000001
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: ama-logs
    serviceAccountName: ama-logs
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    - effect: PreferNoSchedule
      operator: Exists
    volumes:
    - hostPath:
        path: /
        type: ""
      name: host-root
    - emptyDir: {}
      name: mdsd-prometheus-sock
    - hostPath:
        path: /etc/hostname
        type: ""
      name: container-hostname
    - hostPath:
        path: /var/log
        type: ""
      name: host-log
    - hostPath:
        path: /var/run/mdsd-ci
        type: ""
      name: mdsd-sock
    - hostPath:
        path: /var/lib/docker/containers
        type: ""
      name: containerlog-path
    - hostPath:
        path: /mnt/docker
        type: ""
      name: containerlog-path-2
    - hostPath:
        path: /mnt/containers
        type: ""
      name: containerlog-path-3
    - hostPath:
        path: /etc/kubernetes
        type: ""
      name: azure-json-path
    - name: ama-logs-secret
      secret:
        defaultMode: 420
        secretName: ama-logs-secret
    - configMap:
        defaultMode: 420
        name: container-azm-ms-agentconfig
        optional: true
      name: settings-vol-config
    - name: ama-logs-adx-secret
      secret:
        defaultMode: 420
        optional: true
        secretName: ama-logs-adx-secret
    - configMap:
        defaultMode: 420
        name: container-azm-ms-osmconfig
        optional: true
      name: osm-settings-vol-config
    - name: kube-api-access-qm2ld
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:09:21Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:09:14Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:09:21Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:09:21Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:09:14Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://62627ec47f0214a243c42ceaa33e6a9e71c0135941655661f3e0a5719804d744
      image: mcr.microsoft.com/aks/msi/addon-token-adapter:master.250604.1
      imageID: mcr.microsoft.com/aks/msi/addon-token-adapter@sha256:a9560e48285975ee2e9f8d1ced439c928ecab5946fa8781c61ecfc513f2107b2
      lastState: {}
      name: addon-token-adapter
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-03T17:09:19Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qm2ld
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://ed7d27fd95b3a1dd0b49d13fcdc66bcd6d20e2455c303957126b48e573a153ab
      image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod:3.1.28
      imageID: sha256:2ffbfb63ab96eef1c8ae97b16cd554158fdf3f598113a15db4792f0984515be0
      lastState: {}
      name: ama-logs
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-03T17:09:21Z"
      volumeMounts:
      - mountPath: /hostfs
        name: host-root
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/log
        name: host-log
      - mountPath: /var/run/mdsd-ci
        name: mdsd-sock
      - mountPath: /var/run/mdsd-PrometheusSidecar
        name: mdsd-prometheus-sock
      - mountPath: /var/lib/docker/containers
        name: containerlog-path
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /mnt/docker
        name: containerlog-path-2
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /mnt/containers
        name: containerlog-path-3
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /etc/kubernetes/host
        name: azure-json-path
      - mountPath: /etc/ama-logs-secret
        name: ama-logs-secret
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /etc/omsagent-secret
        name: ama-logs-secret
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /etc/config/settings
        name: settings-vol-config
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /etc/config/settings/adx
        name: ama-logs-adx-secret
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qm2ld
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://adb993053e7efefa776c7dad6fe851dde1b4ee219bef52f960b23d884280fe94
      image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod:3.1.28
      imageID: sha256:2ffbfb63ab96eef1c8ae97b16cd554158fdf3f598113a15db4792f0984515be0
      lastState: {}
      name: ama-logs-prometheus
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-03T17:09:21Z"
      volumeMounts:
      - mountPath: /etc/kubernetes/host
        name: azure-json-path
      - mountPath: /etc/ama-logs-secret
        name: ama-logs-secret
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /etc/omsagent-secret
        name: ama-logs-secret
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /etc/config/settings
        name: settings-vol-config
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /etc/config/osm-settings
        name: osm-settings-vol-config
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/mdsd-PrometheusSidecar
        name: mdsd-prometheus-sock
      - mountPath: /var/run/mdsd-ci
        name: mdsd-sock
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qm2ld
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.224.0.5
    hostIPs:
    - ip: 10.224.0.5
    phase: Running
    podIP: 10.244.1.115
    podIPs:
    - ip: 10.244.1.115
    qosClass: Burstable
    startTime: "2025-09-03T17:09:14Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      WSID: ZWRlMzc2MjctNDFhOC00ZjdjLTg1YTAtMzkzNjQ4ODIyM2E5
      agentVersion: azure-mdsd-1.35.7
      cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      dockerProviderVersion: 18.0.1-0
      kubernetes.azure.com/no-http-proxy-vars: "true"
      schema-versions: v1
    creationTimestamp: "2025-09-03T17:09:14Z"
    generateName: ama-logs-rs-58665b6498-
    labels:
      kubernetes.azure.com/managedby: aks
      pod-template-hash: 58665b6498
      rsName: ama-logs-rs
    name: ama-logs-rs-58665b6498-m49x5
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: ama-logs-rs-58665b6498
      uid: 3e441aa7-edeb-479d-a3ba-f47bd3824ab8
    resourceVersion: "1876"
    uid: b7d0af84-18ca-428a-b03a-b40efafaef20
  spec:
    affinity:
      nodeAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - preference:
            matchExpressions:
            - key: kubernetes.azure.com/mode
              operator: In
              values:
              - system
          weight: 100
        - preference:
            matchExpressions:
            - key: storageprofile
              operator: NotIn
              values:
              - managed
          weight: 1
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: kubernetes.io/os
              operator: In
              values:
              - linux
            - key: kubernetes.azure.com/cluster
              operator: Exists
            - key: type
              operator: NotIn
              values:
              - virtual-kubelet
    containers:
    - args:
      - --secret-namespace=kube-system
      - --secret-name=aad-msi-auth-token
      - --token-server-listening-port=8888
      - --health-server-listening-port=9999
      - --restart-pod-waiting-minutes-on-broken-connection=240
      command:
      - /addon-token-adapter
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io
      - name: AZMON_COLLECT_ENV
        value: "false"
      image: mcr.microsoft.com/aks/msi/addon-token-adapter:master.250604.1
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 9999
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 60
        successThreshold: 1
        timeoutSeconds: 1
      name: addon-token-adapter
      resources:
        limits:
          cpu: 500m
          memory: 500Mi
        requests:
          cpu: 100m
          memory: 100Mi
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
          - NET_RAW
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-zvs65
        readOnly: true
    - env:
      - name: KUBERNETES_SERVICE_HOST
        value: elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io
      - name: NODE_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      - name: AKS_CLUSTER_NAME
        value: elasticsearch-cluster-azure
      - name: AKS_RESOURCE_ID
        value: /subscriptions/f0d02754-d8ca-4e7d-b010-ebac7cd463da/resourceGroups/multi-cloud-elastic-rg/providers/Microsoft.ContainerService/managedClusters/elasticsearch-cluster-azure
      - name: AKS_NODE_RESOURCE_GROUP
        value: MC_multi-cloud-elastic-rg_elasticsearch-cluster-azure_westus2
      - name: AKS_REGION
        value: westus2
      - name: CONTROLLER_TYPE
        value: ReplicaSet
      - name: USER_ASSIGNED_IDENTITY_CLIENT_ID
      - name: NUM_OF_FLUENTD_WORKERS
        valueFrom:
          resourceFieldRef:
            containerName: ama-logs
            divisor: "0"
            resource: limits.cpu
      - name: CONTAINER_MEMORY_LIMIT_IN_BYTES
        valueFrom:
          resourceFieldRef:
            containerName: ama-logs
            divisor: "0"
            resource: limits.memory
      - name: HOSTNAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: SIDECAR_SCRAPING_ENABLED
        value: "true"
      - name: USING_AAD_MSI_AUTH
        value: "true"
      - name: APPMONITORING_AUTOINSTRUMENTATION_ENABLED
        value: "false"
      - name: APPMONITORING_OPENTELEMETRYLOGS_ENABLED
        value: "false"
      - name: APPMONITORING_OPENTELEMETRYLOGS_PORT
        value: "28331"
      - name: PROMETHEUS_METRICS_SCRAPING_DISABLED
        value: "false"
      - name: AZMON_TELEGRAF_LIVENESSPROBE_ENABLED
        value: "false"
      - name: AZMON_WINDOWS_FLUENT_BIT_ENABLED
        value: "false"
      - name: CLUSTER_CLOUD_ENVIRONMENT
        value: azurepubliccloud
      image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod:3.1.28
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /bin/bash
          - -c
          - /opt/livenessprobe.sh
        failureThreshold: 3
        initialDelaySeconds: 60
        periodSeconds: 60
        successThreshold: 1
        timeoutSeconds: 15
      name: ama-logs
      ports:
      - containerPort: 25225
        protocol: TCP
      - containerPort: 25224
        protocol: UDP
      - containerPort: 25227
        name: in-rs-tcp
        protocol: TCP
      resources:
        limits:
          cpu: "1"
          memory: 1536Mi
        requests:
          cpu: 150m
          memory: 250Mi
      securityContext:
        capabilities:
          add:
          - DAC_OVERRIDE
          drop:
          - ALL
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/log
        name: host-log
      - mountPath: /etc/kubernetes/host
        name: azure-json-path
      - mountPath: /etc/ama-logs-secret
        name: ama-logs-secret
        readOnly: true
      - mountPath: /etc/omsagent-secret
        name: ama-logs-secret
        readOnly: true
      - mountPath: /etc/config
        name: ama-logs-rs-config
      - mountPath: /etc/config/settings
        name: settings-vol-config
        readOnly: true
      - mountPath: /etc/config/settings/adx
        name: ama-logs-adx-secret
        readOnly: true
      - mountPath: /etc/config/osm-settings
        name: osm-settings-vol-config
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-zvs65
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: aks-nodepool1-28075912-vmss000001
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: ama-logs
    serviceAccountName: ama-logs
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - hostPath:
        path: /etc/hostname
        type: ""
      name: container-hostname
    - hostPath:
        path: /var/log
        type: ""
      name: host-log
    - hostPath:
        path: /etc/kubernetes
        type: ""
      name: azure-json-path
    - name: ama-logs-secret
      secret:
        defaultMode: 420
        secretName: ama-logs-secret
    - configMap:
        defaultMode: 420
        name: ama-logs-rs-config
      name: ama-logs-rs-config
    - configMap:
        defaultMode: 420
        name: container-azm-ms-agentconfig
        optional: true
      name: settings-vol-config
    - name: ama-logs-adx-secret
      secret:
        defaultMode: 420
        optional: true
        secretName: ama-logs-adx-secret
    - configMap:
        defaultMode: 420
        name: container-azm-ms-osmconfig
        optional: true
      name: osm-settings-vol-config
    - name: kube-api-access-zvs65
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:09:21Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:09:14Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:09:21Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:09:21Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:09:14Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://7b153ebb9d28427a833f8e18e46f3094d38f3319ff4812ffd15916f9cd682066
      image: mcr.microsoft.com/aks/msi/addon-token-adapter:master.250604.1
      imageID: mcr.microsoft.com/aks/msi/addon-token-adapter@sha256:a9560e48285975ee2e9f8d1ced439c928ecab5946fa8781c61ecfc513f2107b2
      lastState: {}
      name: addon-token-adapter
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-03T17:09:19Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-zvs65
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://664483acf5c95795d2c5a18f11438ef71b39f377c134fd808be29b5438850ea9
      image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod:3.1.28
      imageID: sha256:2ffbfb63ab96eef1c8ae97b16cd554158fdf3f598113a15db4792f0984515be0
      lastState: {}
      name: ama-logs
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-03T17:09:21Z"
      volumeMounts:
      - mountPath: /var/log
        name: host-log
      - mountPath: /etc/kubernetes/host
        name: azure-json-path
      - mountPath: /etc/ama-logs-secret
        name: ama-logs-secret
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /etc/omsagent-secret
        name: ama-logs-secret
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /etc/config
        name: ama-logs-rs-config
      - mountPath: /etc/config/settings
        name: settings-vol-config
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /etc/config/settings/adx
        name: ama-logs-adx-secret
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /etc/config/osm-settings
        name: osm-settings-vol-config
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-zvs65
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.224.0.5
    hostIPs:
    - ip: 10.224.0.5
    phase: Running
    podIP: 10.244.1.185
    podIPs:
    - ip: 10.244.1.185
    qosClass: Burstable
    startTime: "2025-09-03T17:09:14Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      WSID: ZWRlMzc2MjctNDFhOC00ZjdjLTg1YTAtMzkzNjQ4ODIyM2E5
      agentVersion: azure-mdsd-1.35.7
      dockerProviderVersion: 18.0.1-0
      kubernetes.azure.com/no-http-proxy-vars: "true"
      schema-versions: v1
    creationTimestamp: "2025-09-03T17:09:14Z"
    generateName: ama-logs-
    labels:
      component: ama-logs-agent
      controller-revision-hash: 79f6c4dd75
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "1"
      tier: node
    name: ama-logs-x7mvl
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: ama-logs
      uid: 7a4b0be4-65c7-443a-85b3-69178ea8fc50
    resourceVersion: "1851"
    uid: f7d7b961-2860-4f15-b532-edf395d1bb2b
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-nodepool1-28075912-vmss000000
    containers:
    - args:
      - --secret-namespace=kube-system
      - --secret-name=aad-msi-auth-token
      - --token-server-listening-port=8888
      - --health-server-listening-port=9999
      - --restart-pod-waiting-minutes-on-broken-connection=240
      command:
      - /addon-token-adapter
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io
      - name: AZMON_COLLECT_ENV
        value: "false"
      image: mcr.microsoft.com/aks/msi/addon-token-adapter:master.250604.1
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 9999
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 60
        successThreshold: 1
        timeoutSeconds: 1
      name: addon-token-adapter
      resources:
        limits:
          cpu: 100m
          memory: 100Mi
        requests:
          cpu: 20m
          memory: 50Mi
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
          - NET_RAW
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-b5wc5
        readOnly: true
    - env:
      - name: KUBERNETES_SERVICE_HOST
        value: elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io
      - name: NODE_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      - name: CONTAINER_MEMORY_LIMIT_IN_BYTES
        valueFrom:
          resourceFieldRef:
            containerName: ama-logs
            divisor: "0"
            resource: limits.memory
      - name: HOSTNAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: FBIT_SERVICE_FLUSH_INTERVAL
        value: "15"
      - name: FBIT_TAIL_BUFFER_CHUNK_SIZE
        value: "1"
      - name: FBIT_TAIL_BUFFER_MAX_SIZE
        value: "1"
      - name: AKS_CLUSTER_NAME
        value: elasticsearch-cluster-azure
      - name: AKS_RESOURCE_ID
        value: /subscriptions/f0d02754-d8ca-4e7d-b010-ebac7cd463da/resourceGroups/multi-cloud-elastic-rg/providers/Microsoft.ContainerService/managedClusters/elasticsearch-cluster-azure
      - name: AKS_NODE_RESOURCE_GROUP
        value: MC_multi-cloud-elastic-rg_elasticsearch-cluster-azure_westus2
      - name: AKS_REGION
        value: westus2
      - name: CONTROLLER_TYPE
        value: DaemonSet
      - name: USER_ASSIGNED_IDENTITY_CLIENT_ID
      - name: AZMON_CONTAINERLOGS_ONEAGENT_REGIONS
        value: koreacentral,norwayeast,eastus2
      - name: APPMONITORING_AUTOINSTRUMENTATION_ENABLED
        value: "false"
      - name: APPMONITORING_OPENTELEMETRYLOGS_ENABLED
        value: "false"
      - name: APPMONITORING_OPENTELEMETRYLOGS_PORT
        value: "28331"
      - name: PROMETHEUS_METRICS_SCRAPING_DISABLED
        value: "false"
      - name: USING_AAD_MSI_AUTH
        value: "true"
      - name: SYSLOG_HOST_PORT
        value: "28330"
      - name: AZMON_RETINA_FLOW_LOGS_ENABLED
        value: "false"
      - name: AZMON_RESOURCE_OPTIMIZATION_ENABLED
        value: "false"
      - name: AZMON_TELEGRAF_LIVENESSPROBE_ENABLED
        value: "false"
      - name: CLUSTER_CLOUD_ENVIRONMENT
        value: azurepubliccloud
      image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod:3.1.28
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /bin/bash
          - -c
          - /opt/livenessprobe.sh
        failureThreshold: 3
        initialDelaySeconds: 60
        periodSeconds: 60
        successThreshold: 1
        timeoutSeconds: 15
      name: ama-logs
      ports:
      - containerPort: 25225
        protocol: TCP
      - containerPort: 25224
        protocol: UDP
      - containerPort: 28330
        hostPort: 28330
        name: syslog
        protocol: TCP
      resources:
        limits:
          cpu: "1"
          memory: 1Gi
        requests:
          cpu: 75m
          memory: 325Mi
      securityContext:
        capabilities:
          add:
          - DAC_OVERRIDE
          drop:
          - ALL
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /hostfs
        mountPropagation: HostToContainer
        name: host-root
        readOnly: true
      - mountPath: /var/log
        name: host-log
      - mountPath: /var/run/mdsd-ci
        name: mdsd-sock
      - mountPath: /var/run/mdsd-PrometheusSidecar
        name: mdsd-prometheus-sock
      - mountPath: /var/lib/docker/containers
        name: containerlog-path
        readOnly: true
      - mountPath: /mnt/docker
        name: containerlog-path-2
        readOnly: true
      - mountPath: /mnt/containers
        name: containerlog-path-3
        readOnly: true
      - mountPath: /etc/kubernetes/host
        name: azure-json-path
      - mountPath: /etc/ama-logs-secret
        name: ama-logs-secret
        readOnly: true
      - mountPath: /etc/omsagent-secret
        name: ama-logs-secret
        readOnly: true
      - mountPath: /etc/config/settings
        name: settings-vol-config
        readOnly: true
      - mountPath: /etc/config/settings/adx
        name: ama-logs-adx-secret
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-b5wc5
        readOnly: true
    - env:
      - name: KUBERNETES_SERVICE_HOST
        value: elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io
      - name: NODE_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      - name: CONTAINER_MEMORY_LIMIT_IN_BYTES
        valueFrom:
          resourceFieldRef:
            containerName: ama-logs-prometheus
            divisor: "0"
            resource: limits.memory
      - name: HOSTNAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: AKS_CLUSTER_NAME
        value: elasticsearch-cluster-azure
      - name: AKS_RESOURCE_ID
        value: /subscriptions/f0d02754-d8ca-4e7d-b010-ebac7cd463da/resourceGroups/multi-cloud-elastic-rg/providers/Microsoft.ContainerService/managedClusters/elasticsearch-cluster-azure
      - name: AKS_NODE_RESOURCE_GROUP
        value: MC_multi-cloud-elastic-rg_elasticsearch-cluster-azure_westus2
      - name: AKS_REGION
        value: westus2
      - name: CONTROLLER_TYPE
        value: DaemonSet
      - name: CONTAINER_TYPE
        value: PrometheusSidecar
      - name: USER_ASSIGNED_IDENTITY_CLIENT_ID
      - name: USING_AAD_MSI_AUTH
        value: "true"
      - name: SYSLOG_HOST_PORT
        value: "28330"
      - name: AZMON_TELEGRAF_LIVENESSPROBE_ENABLED
        value: "false"
      - name: CLUSTER_CLOUD_ENVIRONMENT
        value: azurepubliccloud
      image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod:3.1.28
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /bin/bash
          - -c
          - /opt/livenessprobe.sh
        failureThreshold: 3
        initialDelaySeconds: 60
        periodSeconds: 60
        successThreshold: 1
        timeoutSeconds: 15
      name: ama-logs-prometheus
      resources:
        limits:
          cpu: 500m
          memory: 1Gi
        requests:
          cpu: 75m
          memory: 225Mi
      securityContext:
        capabilities:
          add:
          - DAC_OVERRIDE
          drop:
          - ALL
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/kubernetes/host
        name: azure-json-path
      - mountPath: /etc/ama-logs-secret
        name: ama-logs-secret
        readOnly: true
      - mountPath: /etc/omsagent-secret
        name: ama-logs-secret
        readOnly: true
      - mountPath: /etc/config/settings
        name: settings-vol-config
        readOnly: true
      - mountPath: /etc/config/osm-settings
        name: osm-settings-vol-config
        readOnly: true
      - mountPath: /var/run/mdsd-PrometheusSidecar
        name: mdsd-prometheus-sock
      - mountPath: /var/run/mdsd-ci
        name: mdsd-sock
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-b5wc5
        readOnly: true
    dnsConfig:
      options:
      - name: ndots
        value: "3"
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: aks-nodepool1-28075912-vmss000000
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: ama-logs
    serviceAccountName: ama-logs
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    - effect: PreferNoSchedule
      operator: Exists
    volumes:
    - hostPath:
        path: /
        type: ""
      name: host-root
    - emptyDir: {}
      name: mdsd-prometheus-sock
    - hostPath:
        path: /etc/hostname
        type: ""
      name: container-hostname
    - hostPath:
        path: /var/log
        type: ""
      name: host-log
    - hostPath:
        path: /var/run/mdsd-ci
        type: ""
      name: mdsd-sock
    - hostPath:
        path: /var/lib/docker/containers
        type: ""
      name: containerlog-path
    - hostPath:
        path: /mnt/docker
        type: ""
      name: containerlog-path-2
    - hostPath:
        path: /mnt/containers
        type: ""
      name: containerlog-path-3
    - hostPath:
        path: /etc/kubernetes
        type: ""
      name: azure-json-path
    - name: ama-logs-secret
      secret:
        defaultMode: 420
        secretName: ama-logs-secret
    - configMap:
        defaultMode: 420
        name: container-azm-ms-agentconfig
        optional: true
      name: settings-vol-config
    - name: ama-logs-adx-secret
      secret:
        defaultMode: 420
        optional: true
        secretName: ama-logs-adx-secret
    - configMap:
        defaultMode: 420
        name: container-azm-ms-osmconfig
        optional: true
      name: osm-settings-vol-config
    - name: kube-api-access-b5wc5
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:09:19Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:09:14Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:09:19Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:09:19Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:09:14Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://1efe517b6658373133a408b238edc9394052e2b08c9c5dd9c7ba86b826e6a6b7
      image: mcr.microsoft.com/aks/msi/addon-token-adapter:master.250604.1
      imageID: mcr.microsoft.com/aks/msi/addon-token-adapter@sha256:a9560e48285975ee2e9f8d1ced439c928ecab5946fa8781c61ecfc513f2107b2
      lastState: {}
      name: addon-token-adapter
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-03T17:09:17Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-b5wc5
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://4fdb8fa1ff7c608af9bf5007e780a3acdb1da94fc010b8c9a0ac0b991cbb343b
      image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod:3.1.28
      imageID: sha256:2ffbfb63ab96eef1c8ae97b16cd554158fdf3f598113a15db4792f0984515be0
      lastState: {}
      name: ama-logs
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-03T17:09:18Z"
      volumeMounts:
      - mountPath: /hostfs
        name: host-root
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/log
        name: host-log
      - mountPath: /var/run/mdsd-ci
        name: mdsd-sock
      - mountPath: /var/run/mdsd-PrometheusSidecar
        name: mdsd-prometheus-sock
      - mountPath: /var/lib/docker/containers
        name: containerlog-path
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /mnt/docker
        name: containerlog-path-2
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /mnt/containers
        name: containerlog-path-3
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /etc/kubernetes/host
        name: azure-json-path
      - mountPath: /etc/ama-logs-secret
        name: ama-logs-secret
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /etc/omsagent-secret
        name: ama-logs-secret
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /etc/config/settings
        name: settings-vol-config
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /etc/config/settings/adx
        name: ama-logs-adx-secret
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-b5wc5
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://669fba426d98cb0e7b28ea6c2354a17ab01e72c7109fa2aa9948329904b64be7
      image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod:3.1.28
      imageID: sha256:2ffbfb63ab96eef1c8ae97b16cd554158fdf3f598113a15db4792f0984515be0
      lastState: {}
      name: ama-logs-prometheus
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-03T17:09:18Z"
      volumeMounts:
      - mountPath: /etc/kubernetes/host
        name: azure-json-path
      - mountPath: /etc/ama-logs-secret
        name: ama-logs-secret
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /etc/omsagent-secret
        name: ama-logs-secret
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /etc/config/settings
        name: settings-vol-config
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /etc/config/osm-settings
        name: osm-settings-vol-config
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/mdsd-PrometheusSidecar
        name: mdsd-prometheus-sock
      - mountPath: /var/run/mdsd-ci
        name: mdsd-sock
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-b5wc5
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.224.0.4
    hostIPs:
    - ip: 10.224.0.4
    phase: Running
    podIP: 10.244.0.209
    podIPs:
    - ip: 10.244.0.209
    qosClass: Burstable
    startTime: "2025-09-03T17:09:14Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cluster-autoscaler.kubernetes.io/daemonset-pod: "true"
      kubernetes.azure.com/azure-cns-configmap-checksum: cd814b4ab38a0543dfe5b6c7d821775d7eb499823b3050b8da7a78b516c0b6ad
      prometheus.io/port: "10092"
    creationTimestamp: "2025-09-03T17:07:50Z"
    generateName: azure-cns-
    labels:
      app.kubernetes.io/managed-by: Eno
      controller-revision-hash: 574f444bcb
      k8s-app: azure-cns
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "1"
    name: azure-cns-chfrh
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: azure-cns
      uid: 72763280-03af-49cc-9477-048b9d44fa5c
    resourceVersion: "1262"
    uid: 5a36b823-3a3d-4a82-9f22-a03b72132e81
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-nodepool1-28075912-vmss000000
    containers:
    - args:
      - -c
      - tcp://$(CNSIpAddress):$(CNSPort)
      - -t
      - $(CNSLogTarget)
      - -o
      - $(CNSLogDir)
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io
      - name: CNSIpAddress
        value: 127.0.0.1
      - name: CNSPort
        value: "10090"
      - name: CNSLogTarget
        value: stdoutfile
      - name: CNSLogDir
        value: /var/log
      - name: CNS_CONFIGURATION_PATH
        value: /etc/azure-cns/cns_config.json
      - name: NODENAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: POD_CIDRs
        value: 10.244.0.0/16
      - name: SERVICE_CIDRs
        value: 10.0.0.0/16
      - name: INFRA_VNET_CIDRs
        value: 10.224.0.0/12
      image: mcr.microsoft.com/containernetworking/azure-cns:v1.6.32
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: metrics
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: cns-container
      ports:
      - containerPort: 10090
        hostPort: 10090
        name: api
        protocol: TCP
      - containerPort: 10092
        hostPort: 10092
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 1
        httpGet:
          path: /readyz
          port: metrics
          scheme: HTTP
        periodSeconds: 1
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: 40m
          memory: 250Mi
        requests:
          cpu: 40m
          memory: 250Mi
      startupProbe:
        failureThreshold: 30
        httpGet:
          path: /healthz
          port: metrics
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/log
        name: log
      - mountPath: /var/lib/azure-network
        name: cns-state
      - mountPath: /etc/azure-cns
        name: cns-config
      - mountPath: /opt/cni/bin
        name: cni-bin
      - mountPath: /var/run/azure-vnet
        name: azure-vnet
      - mountPath: /var/lock/azure-vnet
        name: cni-lock
      - mountPath: /var/run/azure-vnet.json
        name: legacy-cni-state
      - mountPath: /etc/cni/net.d
        name: cni-conflist
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-m4dpj
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - args:
      - deploy
      - --skip-verify
      - azure-vnet
      - -o
      - /opt/cni/bin/azure-vnet
      - azure-vnet-telemetry
      - -o
      - /opt/cni/bin/azure-vnet-telemetry
      command:
      - /dropgz
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io
      image: mcr.microsoft.com/containernetworking/azure-cni:v1.6.32
      imagePullPolicy: IfNotPresent
      name: cni-installer
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /opt/cni/bin
        name: cni-bin
      - mountPath: /etc/cni/net.d
        name: cni-conflist
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-m4dpj
        readOnly: true
    nodeName: aks-nodepool1-28075912-vmss000000
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: azure-cns
    serviceAccountName: azure-cns
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    volumes:
    - hostPath:
        path: /var/log/azure-cns
        type: DirectoryOrCreate
      name: log
    - hostPath:
        path: /var/lib/azure-network
        type: DirectoryOrCreate
      name: cns-state
    - hostPath:
        path: /opt/cni/bin
        type: Directory
      name: cni-bin
    - hostPath:
        path: /var/run/azure-vnet
        type: DirectoryOrCreate
      name: azure-vnet
    - hostPath:
        path: /var/lock/azure-vnet
        type: DirectoryOrCreate
      name: cni-lock
    - hostPath:
        path: /var/run/azure-vnet.json
        type: FileOrCreate
      name: legacy-cni-state
    - hostPath:
        path: /etc/cni/net.d
        type: Directory
      name: cni-conflist
    - configMap:
        defaultMode: 420
        name: cns-config
      name: cns-config
    - name: kube-api-access-m4dpj
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:07:58Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:08:00Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:08:15Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:08:15Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:07:50Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://be3c459ae966c63620dce5e2c9a9246361e5cc19d4aeedd2e75ef603ea15ef9d
      image: mcr.microsoft.com/containernetworking/azure-cns:v1.6.32
      imageID: mcr.microsoft.com/containernetworking/azure-cns@sha256:563c0834d403b6292dc9b45ace3e9ea1feca0dd21afcacd971ee231c7cbe151d
      lastState: {}
      name: cns-container
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-03T17:08:04Z"
      volumeMounts:
      - mountPath: /var/log
        name: log
      - mountPath: /var/lib/azure-network
        name: cns-state
      - mountPath: /etc/azure-cns
        name: cns-config
      - mountPath: /opt/cni/bin
        name: cni-bin
      - mountPath: /var/run/azure-vnet
        name: azure-vnet
      - mountPath: /var/lock/azure-vnet
        name: cni-lock
      - mountPath: /var/run/azure-vnet.json
        name: legacy-cni-state
      - mountPath: /etc/cni/net.d
        name: cni-conflist
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-m4dpj
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.224.0.4
    hostIPs:
    - ip: 10.224.0.4
    initContainerStatuses:
    - containerID: containerd://8ec9eeaba1a9ffeb3144b6a573cacee9c6b5eb8e1d2e6a0786268a70e5a55745
      image: mcr.microsoft.com/containernetworking/azure-cni:v1.6.32
      imageID: mcr.microsoft.com/containernetworking/azure-cni@sha256:8805a24fe6747f30fd275f9e2032f45612816a86251f7af6ce29852d8a8879b0
      lastState: {}
      name: cni-installer
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://8ec9eeaba1a9ffeb3144b6a573cacee9c6b5eb8e1d2e6a0786268a70e5a55745
          exitCode: 0
          finishedAt: "2025-09-03T17:07:58Z"
          reason: Completed
          startedAt: "2025-09-03T17:07:57Z"
      volumeMounts:
      - mountPath: /opt/cni/bin
        name: cni-bin
      - mountPath: /etc/cni/net.d
        name: cni-conflist
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-m4dpj
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.224.0.4
    podIPs:
    - ip: 10.224.0.4
    qosClass: Burstable
    startTime: "2025-09-03T17:07:51Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cluster-autoscaler.kubernetes.io/daemonset-pod: "true"
      kubernetes.azure.com/azure-cns-configmap-checksum: cd814b4ab38a0543dfe5b6c7d821775d7eb499823b3050b8da7a78b516c0b6ad
      prometheus.io/port: "10092"
    creationTimestamp: "2025-09-03T17:08:10Z"
    generateName: azure-cns-
    labels:
      app.kubernetes.io/managed-by: Eno
      controller-revision-hash: 574f444bcb
      k8s-app: azure-cns
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "1"
    name: azure-cns-fhxlk
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: azure-cns
      uid: 72763280-03af-49cc-9477-048b9d44fa5c
    resourceVersion: "1628"
    uid: ebd60c50-d007-4c0d-938b-3ed7cc23164f
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-nodepool1-28075912-vmss000001
    containers:
    - args:
      - -c
      - tcp://$(CNSIpAddress):$(CNSPort)
      - -t
      - $(CNSLogTarget)
      - -o
      - $(CNSLogDir)
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io
      - name: CNSIpAddress
        value: 127.0.0.1
      - name: CNSPort
        value: "10090"
      - name: CNSLogTarget
        value: stdoutfile
      - name: CNSLogDir
        value: /var/log
      - name: CNS_CONFIGURATION_PATH
        value: /etc/azure-cns/cns_config.json
      - name: NODENAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: POD_CIDRs
        value: 10.244.0.0/16
      - name: SERVICE_CIDRs
        value: 10.0.0.0/16
      - name: INFRA_VNET_CIDRs
        value: 10.224.0.0/12
      image: mcr.microsoft.com/containernetworking/azure-cns:v1.6.32
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: metrics
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: cns-container
      ports:
      - containerPort: 10090
        hostPort: 10090
        name: api
        protocol: TCP
      - containerPort: 10092
        hostPort: 10092
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 1
        httpGet:
          path: /readyz
          port: metrics
          scheme: HTTP
        periodSeconds: 1
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: 40m
          memory: 250Mi
        requests:
          cpu: 40m
          memory: 250Mi
      startupProbe:
        failureThreshold: 30
        httpGet:
          path: /healthz
          port: metrics
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/log
        name: log
      - mountPath: /var/lib/azure-network
        name: cns-state
      - mountPath: /etc/azure-cns
        name: cns-config
      - mountPath: /opt/cni/bin
        name: cni-bin
      - mountPath: /var/run/azure-vnet
        name: azure-vnet
      - mountPath: /var/lock/azure-vnet
        name: cni-lock
      - mountPath: /var/run/azure-vnet.json
        name: legacy-cni-state
      - mountPath: /etc/cni/net.d
        name: cni-conflist
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dnz88
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - args:
      - deploy
      - --skip-verify
      - azure-vnet
      - -o
      - /opt/cni/bin/azure-vnet
      - azure-vnet-telemetry
      - -o
      - /opt/cni/bin/azure-vnet-telemetry
      command:
      - /dropgz
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io
      image: mcr.microsoft.com/containernetworking/azure-cni:v1.6.32
      imagePullPolicy: IfNotPresent
      name: cni-installer
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /opt/cni/bin
        name: cni-bin
      - mountPath: /etc/cni/net.d
        name: cni-conflist
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dnz88
        readOnly: true
    nodeName: aks-nodepool1-28075912-vmss000001
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: azure-cns
    serviceAccountName: azure-cns
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    volumes:
    - hostPath:
        path: /var/log/azure-cns
        type: DirectoryOrCreate
      name: log
    - hostPath:
        path: /var/lib/azure-network
        type: DirectoryOrCreate
      name: cns-state
    - hostPath:
        path: /opt/cni/bin
        type: Directory
      name: cni-bin
    - hostPath:
        path: /var/run/azure-vnet
        type: DirectoryOrCreate
      name: azure-vnet
    - hostPath:
        path: /var/lock/azure-vnet
        type: DirectoryOrCreate
      name: cni-lock
    - hostPath:
        path: /var/run/azure-vnet.json
        type: FileOrCreate
      name: legacy-cni-state
    - hostPath:
        path: /etc/cni/net.d
        type: Directory
      name: cni-conflist
    - configMap:
        defaultMode: 420
        name: cns-config
      name: cns-config
    - name: kube-api-access-dnz88
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:08:22Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:08:25Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:08:42Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:08:42Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:08:10Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://81f9c6f72c3d758b4339908a7c801de19bc25408927ae8172a037b1be93f2e53
      image: mcr.microsoft.com/containernetworking/azure-cns:v1.6.32
      imageID: mcr.microsoft.com/containernetworking/azure-cns@sha256:563c0834d403b6292dc9b45ace3e9ea1feca0dd21afcacd971ee231c7cbe151d
      lastState: {}
      name: cns-container
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-03T17:08:30Z"
      volumeMounts:
      - mountPath: /var/log
        name: log
      - mountPath: /var/lib/azure-network
        name: cns-state
      - mountPath: /etc/azure-cns
        name: cns-config
      - mountPath: /opt/cni/bin
        name: cni-bin
      - mountPath: /var/run/azure-vnet
        name: azure-vnet
      - mountPath: /var/lock/azure-vnet
        name: cni-lock
      - mountPath: /var/run/azure-vnet.json
        name: legacy-cni-state
      - mountPath: /etc/cni/net.d
        name: cni-conflist
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dnz88
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.224.0.5
    hostIPs:
    - ip: 10.224.0.5
    initContainerStatuses:
    - containerID: containerd://3b0f8bd947898a9271bf2434e66937c9244c21de351fc1b9b239feb509fd7b3a
      image: mcr.microsoft.com/containernetworking/azure-cni:v1.6.32
      imageID: mcr.microsoft.com/containernetworking/azure-cni@sha256:8805a24fe6747f30fd275f9e2032f45612816a86251f7af6ce29852d8a8879b0
      lastState: {}
      name: cni-installer
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://3b0f8bd947898a9271bf2434e66937c9244c21de351fc1b9b239feb509fd7b3a
          exitCode: 0
          finishedAt: "2025-09-03T17:08:23Z"
          reason: Completed
          startedAt: "2025-09-03T17:08:22Z"
      volumeMounts:
      - mountPath: /opt/cni/bin
        name: cni-bin
      - mountPath: /etc/cni/net.d
        name: cni-conflist
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dnz88
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.224.0.5
    podIPs:
    - ip: 10.224.0.5
    qosClass: Burstable
    startTime: "2025-09-03T17:08:10Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-09-03T17:07:51Z"
    generateName: azure-ip-masq-agent-
    labels:
      app.kubernetes.io/managed-by: Eno
      controller-revision-hash: 6b8b74f744
      k8s-app: azure-ip-masq-agent
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "1"
      tier: node
    name: azure-ip-masq-agent-jl5ng
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: azure-ip-masq-agent
      uid: f511df7c-292d-4d0c-8928-8870a7858a41
    resourceVersion: "1046"
    uid: 6bd2fec2-247a-4e27-9ae0-cce96af49895
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-nodepool1-28075912-vmss000000
    automountServiceAccountToken: false
    containers:
    - args:
      - --v=2
      - --resync-interval=60
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io
      image: mcr.microsoft.com/oss/v2/azure/ip-masq-agent-v2:v0.1.15-2
      imagePullPolicy: IfNotPresent
      name: azure-ip-masq-agent
      resources:
        limits:
          cpu: 500m
          memory: 250Mi
        requests:
          cpu: 100m
          memory: 50Mi
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
          - NET_RAW
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/config
        name: azure-ip-masq-agent-config-volume
      - mountPath: /run/xtables.lock
        name: iptableslock
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: aks-nodepool1-28075912-vmss000000
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    volumes:
    - name: azure-ip-masq-agent-config-volume
      projected:
        defaultMode: 420
        sources:
        - configMap:
            items:
            - key: ip-masq-agent
              mode: 444
              path: ip-masq-agent
            name: azure-ip-masq-agent-config
            optional: true
        - configMap:
            items:
            - key: ip-masq-agent-reconciled
              mode: 444
              path: ip-masq-agent-reconciled
            name: azure-ip-masq-agent-config-reconciled
            optional: true
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: iptableslock
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:07:55Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:07:51Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:07:55Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:07:55Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:07:51Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://d02d26b94d2e16820f6b95bc09dbda5bb90323419bdad9513ac399d843f64702
      image: mcr.microsoft.com/oss/v2/azure/ip-masq-agent-v2:v0.1.15-2
      imageID: sha256:1d471a89c4ac4ba26b5d303b9d0c97f82a0d44d48b7b2e7d9512361df1b64a08
      lastState: {}
      name: azure-ip-masq-agent
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-03T17:07:54Z"
      volumeMounts:
      - mountPath: /etc/config
        name: azure-ip-masq-agent-config-volume
      - mountPath: /run/xtables.lock
        name: iptableslock
    hostIP: 10.224.0.4
    hostIPs:
    - ip: 10.224.0.4
    phase: Running
    podIP: 10.224.0.4
    podIPs:
    - ip: 10.224.0.4
    qosClass: Burstable
    startTime: "2025-09-03T17:07:51Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-09-03T17:08:09Z"
    generateName: azure-ip-masq-agent-
    labels:
      app.kubernetes.io/managed-by: Eno
      controller-revision-hash: 6b8b74f744
      k8s-app: azure-ip-masq-agent
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "1"
      tier: node
    name: azure-ip-masq-agent-qrd5s
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: azure-ip-masq-agent
      uid: f511df7c-292d-4d0c-8928-8870a7858a41
    resourceVersion: "1324"
    uid: 54577483-858f-4a7a-a9db-a751dc06e34a
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-nodepool1-28075912-vmss000001
    automountServiceAccountToken: false
    containers:
    - args:
      - --v=2
      - --resync-interval=60
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io
      image: mcr.microsoft.com/oss/v2/azure/ip-masq-agent-v2:v0.1.15-2
      imagePullPolicy: IfNotPresent
      name: azure-ip-masq-agent
      resources:
        limits:
          cpu: 500m
          memory: 250Mi
        requests:
          cpu: 100m
          memory: 50Mi
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
          - NET_RAW
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/config
        name: azure-ip-masq-agent-config-volume
      - mountPath: /run/xtables.lock
        name: iptableslock
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: aks-nodepool1-28075912-vmss000001
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    volumes:
    - name: azure-ip-masq-agent-config-volume
      projected:
        defaultMode: 420
        sources:
        - configMap:
            items:
            - key: ip-masq-agent
              mode: 444
              path: ip-masq-agent
            name: azure-ip-masq-agent-config
            optional: true
        - configMap:
            items:
            - key: ip-masq-agent-reconciled
              mode: 444
              path: ip-masq-agent-reconciled
            name: azure-ip-masq-agent-config-reconciled
            optional: true
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: iptableslock
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:08:19Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:08:10Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:08:19Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:08:19Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:08:09Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://86ed771d6b8fda3170e523768eedb68b600e360fd618f0d97564c6c8d2481577
      image: mcr.microsoft.com/oss/v2/azure/ip-masq-agent-v2:v0.1.15-2
      imageID: sha256:1d471a89c4ac4ba26b5d303b9d0c97f82a0d44d48b7b2e7d9512361df1b64a08
      lastState: {}
      name: azure-ip-masq-agent
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-03T17:08:18Z"
      volumeMounts:
      - mountPath: /etc/config
        name: azure-ip-masq-agent-config-volume
      - mountPath: /run/xtables.lock
        name: iptableslock
    hostIP: 10.224.0.5
    hostIPs:
    - ip: 10.224.0.5
    phase: Running
    podIP: 10.224.0.5
    podIPs:
    - ip: 10.224.0.5
    qosClass: Burstable
    startTime: "2025-09-03T17:08:10Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cluster-autoscaler.kubernetes.io/daemonset-pod: "true"
    creationTimestamp: "2025-09-03T17:07:50Z"
    generateName: cloud-node-manager-
    labels:
      controller-revision-hash: 795fc77596
      k8s-app: cloud-node-manager
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "1"
    name: cloud-node-manager-cq2s4
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: cloud-node-manager
      uid: 80fd53d4-275a-424b-a862-6edadcd085f5
    resourceVersion: "1050"
    uid: 18380510-d6d2-4f2c-a23a-abec782f9280
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-nodepool1-28075912-vmss000000
    containers:
    - command:
      - cloud-node-manager
      - --node-name=$(NODE_NAME)
      - --enable-deprecated-beta-topology-labels=true
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: mcr.microsoft.com/oss/kubernetes/azure-cloud-node-manager:v1.32.5
      imagePullPolicy: IfNotPresent
      name: cloud-node-manager
      resources:
        limits:
          memory: 512Mi
        requests:
          cpu: 50m
          memory: 50Mi
      securityContext:
        capabilities:
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-cmq8f
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: aks-nodepool1-28075912-vmss000000
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: cloud-node-manager
    serviceAccountName: cloud-node-manager
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    volumes:
    - name: kube-api-access-cmq8f
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:07:55Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:07:51Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:07:55Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:07:55Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:07:50Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://818d3b071ceaa8ad2af1fada36f95a9c005641056382051772c688fd84fcba5a
      image: mcr.microsoft.com/oss/kubernetes/azure-cloud-node-manager:v1.32.5
      imageID: sha256:a758ab09722664919b1e92928f2fe0320f989fde43284e9a60dbc8bd06a1275f
      lastState: {}
      name: cloud-node-manager
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-03T17:07:55Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-cmq8f
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.224.0.4
    hostIPs:
    - ip: 10.224.0.4
    phase: Running
    podIP: 10.224.0.4
    podIPs:
    - ip: 10.224.0.4
    qosClass: Burstable
    startTime: "2025-09-03T17:07:51Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cluster-autoscaler.kubernetes.io/daemonset-pod: "true"
    creationTimestamp: "2025-09-03T17:08:10Z"
    generateName: cloud-node-manager-
    labels:
      controller-revision-hash: 795fc77596
      k8s-app: cloud-node-manager
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "1"
    name: cloud-node-manager-psjzv
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: cloud-node-manager
      uid: 80fd53d4-275a-424b-a862-6edadcd085f5
    resourceVersion: "1338"
    uid: 081ffdf1-ea94-4ed3-9ed6-24b14660fedc
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-nodepool1-28075912-vmss000001
    containers:
    - command:
      - cloud-node-manager
      - --node-name=$(NODE_NAME)
      - --enable-deprecated-beta-topology-labels=true
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: mcr.microsoft.com/oss/kubernetes/azure-cloud-node-manager:v1.32.5
      imagePullPolicy: IfNotPresent
      name: cloud-node-manager
      resources:
        limits:
          memory: 512Mi
        requests:
          cpu: 50m
          memory: 50Mi
      securityContext:
        capabilities:
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-5c259
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: aks-nodepool1-28075912-vmss000001
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: cloud-node-manager
    serviceAccountName: cloud-node-manager
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    volumes:
    - name: kube-api-access-5c259
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:08:20Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:08:10Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:08:20Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:08:20Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:08:10Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://58401261951c616828350b50a38757f30f713eac4e87951daa69d233370db91b
      image: mcr.microsoft.com/oss/kubernetes/azure-cloud-node-manager:v1.32.5
      imageID: sha256:a758ab09722664919b1e92928f2fe0320f989fde43284e9a60dbc8bd06a1275f
      lastState: {}
      name: cloud-node-manager
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-03T17:08:19Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-5c259
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.224.0.5
    hostIPs:
    - ip: 10.224.0.5
    phase: Running
    podIP: 10.224.0.5
    podIPs:
    - ip: 10.224.0.5
    qosClass: Burstable
    startTime: "2025-09-03T17:08:10Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      prometheus.io/port: "9153"
    creationTimestamp: "2025-09-03T17:07:06Z"
    generateName: coredns-6f776c8fb5-
    labels:
      k8s-app: kube-dns
      kubernetes.azure.com/managedby: aks
      kubernetes.io/cluster-service: "true"
      pod-template-hash: 6f776c8fb5
      version: v20
    name: coredns-6f776c8fb5-cw8dv
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: coredns-6f776c8fb5
      uid: febb2e27-6d46-4cd0-b520-5c36ee2b8cac
    resourceVersion: "1514"
    uid: 98242689-826d-4053-a3b3-529f1ed5de27
  spec:
    affinity:
      nodeAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - preference:
            matchExpressions:
            - key: kubernetes.azure.com/mode
              operator: In
              values:
              - system
          weight: 100
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: kubernetes.azure.com/cluster
              operator: Exists
            - key: type
              operator: NotIn
              values:
              - virtual-kubelet
            - key: kubernetes.io/os
              operator: In
              values:
              - linux
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - kube-dns
            topologyKey: topology.kubernetes.io/zone
          weight: 10
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - kube-dns
            topologyKey: kubernetes.io/hostname
          weight: 5
    containers:
    - args:
      - -conf
      - /etc/coredns/Corefile
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io
      - name: GOMAXPROCS
        valueFrom:
          resourceFieldRef:
            divisor: "0"
            resource: limits.cpu
      image: mcr.microsoft.com/oss/v2/kubernetes/coredns:v1.11.3-8
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /health
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: coredns
      ports:
      - containerPort: 53
        name: dns
        protocol: UDP
      - containerPort: 53
        name: dns-tcp
        protocol: TCP
      - containerPort: 9153
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /ready
          port: 8181
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: "3"
          memory: 500Mi
        requests:
          cpu: 100m
          memory: 70Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add:
          - NET_BIND_SERVICE
          drop:
          - ALL
        procMount: Default
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/coredns
        name: config-volume
        readOnly: true
      - mountPath: /etc/coredns/custom
        name: custom-config-volume
        readOnly: true
      - mountPath: /tmp
        name: tmp
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-2pk2v
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    nodeName: aks-nodepool1-28075912-vmss000000
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: coredns
    serviceAccountName: coredns
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 30
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 30
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: Corefile
          path: Corefile
        name: coredns
      name: config-volume
    - configMap:
        defaultMode: 420
        name: coredns-custom
        optional: true
      name: custom-config-volume
    - emptyDir: {}
      name: tmp
    - name: kube-api-access-2pk2v
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:08:20Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:08:17Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:08:32Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:08:32Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:08:17Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://4c265572ae48e499e934fd1da3117a8744d25a3290246aa49efb38a92749753a
      image: mcr.microsoft.com/oss/v2/kubernetes/coredns:v1.11.3-8
      imageID: sha256:512a01dffb8dbe4b7a46ee89d130b3183ffbb4ceceb67ccdd49f69830d7460b8
      lastState: {}
      name: coredns
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-03T17:08:19Z"
      volumeMounts:
      - mountPath: /etc/coredns
        name: config-volume
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /etc/coredns/custom
        name: custom-config-volume
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /tmp
        name: tmp
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-2pk2v
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.224.0.4
    hostIPs:
    - ip: 10.224.0.4
    phase: Running
    podIP: 10.244.0.62
    podIPs:
    - ip: 10.244.0.62
    qosClass: Burstable
    startTime: "2025-09-03T17:08:17Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      prometheus.io/port: "9153"
    creationTimestamp: "2025-09-03T17:08:24Z"
    generateName: coredns-6f776c8fb5-
    labels:
      k8s-app: kube-dns
      kubernetes.azure.com/managedby: aks
      kubernetes.io/cluster-service: "true"
      pod-template-hash: 6f776c8fb5
      version: v20
    name: coredns-6f776c8fb5-rpnwg
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: coredns-6f776c8fb5
      uid: febb2e27-6d46-4cd0-b520-5c36ee2b8cac
    resourceVersion: "1575"
    uid: 1df494d0-3d17-4490-94a4-85bc3b3db4ba
  spec:
    affinity:
      nodeAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - preference:
            matchExpressions:
            - key: kubernetes.azure.com/mode
              operator: In
              values:
              - system
          weight: 100
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: kubernetes.azure.com/cluster
              operator: Exists
            - key: type
              operator: NotIn
              values:
              - virtual-kubelet
            - key: kubernetes.io/os
              operator: In
              values:
              - linux
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - kube-dns
            topologyKey: topology.kubernetes.io/zone
          weight: 10
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - kube-dns
            topologyKey: kubernetes.io/hostname
          weight: 5
    containers:
    - args:
      - -conf
      - /etc/coredns/Corefile
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io
      - name: GOMAXPROCS
        valueFrom:
          resourceFieldRef:
            divisor: "0"
            resource: limits.cpu
      image: mcr.microsoft.com/oss/v2/kubernetes/coredns:v1.11.3-8
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /health
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: coredns
      ports:
      - containerPort: 53
        name: dns
        protocol: UDP
      - containerPort: 53
        name: dns-tcp
        protocol: TCP
      - containerPort: 9153
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /ready
          port: 8181
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: "3"
          memory: 500Mi
        requests:
          cpu: 100m
          memory: 70Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add:
          - NET_BIND_SERVICE
          drop:
          - ALL
        procMount: Default
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/coredns
        name: config-volume
        readOnly: true
      - mountPath: /etc/coredns/custom
        name: custom-config-volume
        readOnly: true
      - mountPath: /tmp
        name: tmp
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-blvtv
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    nodeName: aks-nodepool1-28075912-vmss000000
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: coredns
    serviceAccountName: coredns
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 30
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 30
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: Corefile
          path: Corefile
        name: coredns
      name: config-volume
    - configMap:
        defaultMode: 420
        name: coredns-custom
        optional: true
      name: custom-config-volume
    - emptyDir: {}
      name: tmp
    - name: kube-api-access-blvtv
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:08:26Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:08:24Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:08:37Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:08:37Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:08:24Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://3dc4d5a9e209cd824282f9a2450032ac64c2b03d2a3ca32598206c78472ddd4b
      image: mcr.microsoft.com/oss/v2/kubernetes/coredns:v1.11.3-8
      imageID: sha256:512a01dffb8dbe4b7a46ee89d130b3183ffbb4ceceb67ccdd49f69830d7460b8
      lastState: {}
      name: coredns
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-03T17:08:26Z"
      volumeMounts:
      - mountPath: /etc/coredns
        name: config-volume
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /etc/coredns/custom
        name: custom-config-volume
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /tmp
        name: tmp
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-blvtv
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.224.0.4
    hostIPs:
    - ip: 10.224.0.4
    phase: Running
    podIP: 10.244.0.70
    podIPs:
    - ip: 10.244.0.70
    qosClass: Burstable
    startTime: "2025-09-03T17:08:24Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
    creationTimestamp: "2025-09-03T17:07:06Z"
    generateName: coredns-autoscaler-864c4496bf-
    labels:
      k8s-app: coredns-autoscaler
      kubernetes.azure.com/managedby: aks
      pod-template-hash: 864c4496bf
    name: coredns-autoscaler-864c4496bf-hsw9n
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: coredns-autoscaler-864c4496bf
      uid: a6e7f77e-2a71-4d73-aaea-705795782c7f
    resourceVersion: "1436"
    uid: 3a3ec59f-146b-4b3f-aace-6f5de450227f
  spec:
    affinity:
      nodeAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - preference:
            matchExpressions:
            - key: kubernetes.azure.com/mode
              operator: In
              values:
              - system
          weight: 100
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: kubernetes.azure.com/cluster
              operator: Exists
            - key: type
              operator: NotIn
              values:
              - virtual-kubelet
            - key: kubernetes.io/os
              operator: In
              values:
              - linux
    containers:
    - command:
      - /cluster-proportional-autoscaler
      - --namespace=kube-system
      - --configmap=coredns-autoscaler
      - --target=deployment/coredns
      - --default-params={"ladder":{"coresToReplicas":[[1,2],[512,3],[1024,4],[2048,5]],"nodesToReplicas":[[1,2],[8,3],[16,4],[32,5]]}}
      - --logtostderr=true
      - --v=2
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io
      image: mcr.microsoft.com/oss/v2/kubernetes/autoscaler/cluster-proportional-autoscaler:v1.9.0-2
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /last-poll
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: autoscaler
      resources:
        limits:
          cpu: 200m
          memory: 500Mi
        requests:
          cpu: 20m
          memory: 10Mi
      securityContext:
        capabilities:
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-j5m66
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    nodeName: aks-nodepool1-28075912-vmss000000
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: coredns-autoscaler
    serviceAccountName: coredns-autoscaler
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 30
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 30
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: kube-api-access-j5m66
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:08:24Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:08:17Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:08:24Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:08:24Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:08:17Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://09df4b4231f73c226d9bafac3d256ef7e4f3dcb7dcf30d87b2460a517918b2cd
      image: mcr.microsoft.com/oss/v2/kubernetes/autoscaler/cluster-proportional-autoscaler:v1.9.0-2
      imageID: mcr.microsoft.com/oss/v2/kubernetes/autoscaler/cluster-proportional-autoscaler@sha256:ef1ce8a6da7d09d93ec6ed51bfefe2e5f5c7b023a18174d6dfbc0699a4a74afc
      lastState: {}
      name: autoscaler
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-03T17:08:24Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-j5m66
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.224.0.4
    hostIPs:
    - ip: 10.224.0.4
    phase: Running
    podIP: 10.244.0.66
    podIPs:
    - ip: 10.244.0.66
    qosClass: Burstable
    startTime: "2025-09-03T17:08:17Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-09-03T17:07:51Z"
    generateName: csi-azuredisk-node-
    labels:
      app: csi-azuredisk-node
      controller-revision-hash: d46f677bf
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "1"
    name: csi-azuredisk-node-bbp8f
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: csi-azuredisk-node
      uid: f43f1776-1717-48b2-ac37-225711f7447f
    resourceVersion: "1076"
    uid: b5f35200-7c2b-48ee-b97b-81d2f5c13eb4
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-nodepool1-28075912-vmss000000
    containers:
    - args:
      - --csi-address=/csi/csi.sock
      - --probe-timeout=10s
      - --health-port=29603
      - --v=2
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io
      image: mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.15.0
      imagePullPolicy: IfNotPresent
      name: liveness-probe
      resources:
        limits:
          memory: 100Mi
        requests:
          cpu: 10m
          memory: 20Mi
      securityContext:
        capabilities:
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-27w4l
        readOnly: true
    - args:
      - --csi-address=$(ADDRESS)
      - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
      - --v=2
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io
      - name: ADDRESS
        value: /csi/csi.sock
      - name: DRIVER_REG_SOCK_PATH
        value: /var/lib/kubelet/plugins/disk.csi.azure.com/csi.sock
      image: mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.13.0
      imagePullPolicy: IfNotPresent
      name: node-driver-registrar
      resources:
        limits:
          memory: 100Mi
        requests:
          cpu: 10m
          memory: 20Mi
      securityContext:
        capabilities:
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /registration
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-27w4l
        readOnly: true
    - args:
      - --v=5
      - --endpoint=$(CSI_ENDPOINT)
      - --nodeid=$(KUBE_NODE_NAME)
      - --enable-perf-optimization=true
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io
      - name: AZURE_CREDENTIAL_FILE
        value: /etc/kubernetes/azure.json
      - name: CSI_ENDPOINT
        value: unix:///csi/csi.sock
      - name: KUBE_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.32.9
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /healthz
          port: healthz
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 30
      name: azuredisk
      ports:
      - containerPort: 29603
        hostPort: 29603
        name: healthz
        protocol: TCP
      resources:
        limits:
          memory: 5600Mi
        requests:
          cpu: 10m
          memory: 20Mi
      securityContext:
        capabilities:
          drop:
          - ALL
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /var/lib/kubelet/
        mountPropagation: Bidirectional
        name: mountpoint-dir
      - mountPath: /etc/kubernetes/
        name: azure-cred
      - mountPath: /dev
        name: device-dir
      - mountPath: /sys/bus/scsi/devices
        name: sys-devices-dir
      - mountPath: /sys/class/scsi_host/
        name: scsi-host-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-27w4l
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    hostNetwork: true
    nodeName: aks-nodepool1-28075912-vmss000000
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: csi-azuredisk-node-sa
    serviceAccountName: csi-azuredisk-node-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/kubelet/plugins/disk.csi.azure.com
        type: DirectoryOrCreate
      name: socket-dir
    - hostPath:
        path: /var/lib/kubelet/
        type: DirectoryOrCreate
      name: mountpoint-dir
    - hostPath:
        path: /var/lib/kubelet/plugins_registry/
        type: DirectoryOrCreate
      name: registration-dir
    - hostPath:
        path: /etc/kubernetes/
        type: DirectoryOrCreate
      name: azure-cred
    - hostPath:
        path: /dev
        type: Directory
      name: device-dir
    - hostPath:
        path: /sys/bus/scsi/devices
        type: Directory
      name: sys-devices-dir
    - hostPath:
        path: /sys/class/scsi_host/
        type: Directory
      name: scsi-host-dir
    - name: kube-api-access-27w4l
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:07:57Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:07:51Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:07:57Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:07:57Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:07:51Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://f3e1a46a489ce0fbc5f9b993b64592e017409e22c863912af7a1c89e77a998d8
      image: mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.32.9
      imageID: sha256:338b4b424363a0ac5f9d8feb398bd55591d3312b57d10d5164fd4edf0605df33
      lastState: {}
      name: azuredisk
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-03T17:07:56Z"
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /var/lib/kubelet/
        name: mountpoint-dir
      - mountPath: /etc/kubernetes/
        name: azure-cred
      - mountPath: /dev
        name: device-dir
      - mountPath: /sys/bus/scsi/devices
        name: sys-devices-dir
      - mountPath: /sys/class/scsi_host/
        name: scsi-host-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-27w4l
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://56f56d2a8aeb35013f30ce4bdd6d382f80a586172036b188a3dc473f85b40766
      image: mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.15.0
      imageID: sha256:36d7b51905972e9344587e53702442dc092bbc43daf6d6e7967bf8f35f49896f
      lastState: {}
      name: liveness-probe
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-03T17:07:55Z"
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-27w4l
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://ddda7e8d9e0ae5bb424db30074e06f4c21d6eafe8863fa7f75b54f5c13be145d
      image: mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.13.0
      imageID: sha256:03a0bf5a23a8a437f8719e4accf8e28782135f110e8be90b2189d5c819140417
      lastState: {}
      name: node-driver-registrar
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-03T17:07:56Z"
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /registration
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-27w4l
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.224.0.4
    hostIPs:
    - ip: 10.224.0.4
    phase: Running
    podIP: 10.224.0.4
    podIPs:
    - ip: 10.224.0.4
    qosClass: Burstable
    startTime: "2025-09-03T17:07:51Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-09-03T17:08:10Z"
    generateName: csi-azuredisk-node-
    labels:
      app: csi-azuredisk-node
      controller-revision-hash: d46f677bf
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "1"
    name: csi-azuredisk-node-t7gd2
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: csi-azuredisk-node
      uid: f43f1776-1717-48b2-ac37-225711f7447f
    resourceVersion: "1377"
    uid: 46af9a84-a020-44c3-928e-7783bac500ab
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-nodepool1-28075912-vmss000001
    containers:
    - args:
      - --csi-address=/csi/csi.sock
      - --probe-timeout=10s
      - --health-port=29603
      - --v=2
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io
      image: mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.15.0
      imagePullPolicy: IfNotPresent
      name: liveness-probe
      resources:
        limits:
          memory: 100Mi
        requests:
          cpu: 10m
          memory: 20Mi
      securityContext:
        capabilities:
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-p4shr
        readOnly: true
    - args:
      - --csi-address=$(ADDRESS)
      - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
      - --v=2
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io
      - name: ADDRESS
        value: /csi/csi.sock
      - name: DRIVER_REG_SOCK_PATH
        value: /var/lib/kubelet/plugins/disk.csi.azure.com/csi.sock
      image: mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.13.0
      imagePullPolicy: IfNotPresent
      name: node-driver-registrar
      resources:
        limits:
          memory: 100Mi
        requests:
          cpu: 10m
          memory: 20Mi
      securityContext:
        capabilities:
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /registration
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-p4shr
        readOnly: true
    - args:
      - --v=5
      - --endpoint=$(CSI_ENDPOINT)
      - --nodeid=$(KUBE_NODE_NAME)
      - --enable-perf-optimization=true
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io
      - name: AZURE_CREDENTIAL_FILE
        value: /etc/kubernetes/azure.json
      - name: CSI_ENDPOINT
        value: unix:///csi/csi.sock
      - name: KUBE_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.32.9
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /healthz
          port: healthz
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 30
      name: azuredisk
      ports:
      - containerPort: 29603
        hostPort: 29603
        name: healthz
        protocol: TCP
      resources:
        limits:
          memory: 5600Mi
        requests:
          cpu: 10m
          memory: 20Mi
      securityContext:
        capabilities:
          drop:
          - ALL
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /var/lib/kubelet/
        mountPropagation: Bidirectional
        name: mountpoint-dir
      - mountPath: /etc/kubernetes/
        name: azure-cred
      - mountPath: /dev
        name: device-dir
      - mountPath: /sys/bus/scsi/devices
        name: sys-devices-dir
      - mountPath: /sys/class/scsi_host/
        name: scsi-host-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-p4shr
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    hostNetwork: true
    nodeName: aks-nodepool1-28075912-vmss000001
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: csi-azuredisk-node-sa
    serviceAccountName: csi-azuredisk-node-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/kubelet/plugins/disk.csi.azure.com
        type: DirectoryOrCreate
      name: socket-dir
    - hostPath:
        path: /var/lib/kubelet/
        type: DirectoryOrCreate
      name: mountpoint-dir
    - hostPath:
        path: /var/lib/kubelet/plugins_registry/
        type: DirectoryOrCreate
      name: registration-dir
    - hostPath:
        path: /etc/kubernetes/
        type: DirectoryOrCreate
      name: azure-cred
    - hostPath:
        path: /dev
        type: Directory
      name: device-dir
    - hostPath:
        path: /sys/bus/scsi/devices
        type: Directory
      name: sys-devices-dir
    - hostPath:
        path: /sys/class/scsi_host/
        type: Directory
      name: scsi-host-dir
    - name: kube-api-access-p4shr
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:08:22Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:08:10Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:08:22Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:08:22Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:08:10Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://ad98e3d30aca55f89f4303f49a9061905004e2a38f1c82a166d22c6c7456791d
      image: mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.32.9
      imageID: sha256:338b4b424363a0ac5f9d8feb398bd55591d3312b57d10d5164fd4edf0605df33
      lastState: {}
      name: azuredisk
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-03T17:08:22Z"
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /var/lib/kubelet/
        name: mountpoint-dir
      - mountPath: /etc/kubernetes/
        name: azure-cred
      - mountPath: /dev
        name: device-dir
      - mountPath: /sys/bus/scsi/devices
        name: sys-devices-dir
      - mountPath: /sys/class/scsi_host/
        name: scsi-host-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-p4shr
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://ee37e785b81b110f575f3a56f6b47cee6f1f81f1be6d0e2d712e121f4c6da65b
      image: mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.15.0
      imageID: sha256:36d7b51905972e9344587e53702442dc092bbc43daf6d6e7967bf8f35f49896f
      lastState: {}
      name: liveness-probe
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-03T17:08:19Z"
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-p4shr
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://1e954ffbc5b32d395c86489fb55af5f5d8eafe6474c42818ce23e2b9067b36bf
      image: mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.13.0
      imageID: sha256:03a0bf5a23a8a437f8719e4accf8e28782135f110e8be90b2189d5c819140417
      lastState: {}
      name: node-driver-registrar
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-03T17:08:21Z"
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /registration
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-p4shr
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.224.0.5
    hostIPs:
    - ip: 10.224.0.5
    phase: Running
    podIP: 10.224.0.5
    podIPs:
    - ip: 10.224.0.5
    qosClass: Burstable
    startTime: "2025-09-03T17:08:10Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-09-03T17:08:09Z"
    generateName: csi-azurefile-node-
    labels:
      app: csi-azurefile-node
      controller-revision-hash: 75b655f99b
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "1"
    name: csi-azurefile-node-nsmj4
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: csi-azurefile-node
      uid: 2c209e55-7514-48ee-b9a5-d4ec95c3aba1
    resourceVersion: "1374"
    uid: f499be9b-0906-4550-9111-dd365f10c83d
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-nodepool1-28075912-vmss000001
    containers:
    - args:
      - --csi-address=/csi/csi.sock
      - --probe-timeout=10s
      - --health-port=29613
      - --v=2
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io
      image: mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.15.0
      imagePullPolicy: IfNotPresent
      name: liveness-probe
      resources:
        limits:
          memory: 100Mi
        requests:
          cpu: 10m
          memory: 20Mi
      securityContext:
        capabilities:
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7rhdj
        readOnly: true
    - args:
      - --csi-address=$(ADDRESS)
      - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
      - --v=2
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io
      - name: ADDRESS
        value: /csi/csi.sock
      - name: DRIVER_REG_SOCK_PATH
        value: /var/lib/kubelet/plugins/file.csi.azure.com/csi.sock
      image: mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.13.0
      imagePullPolicy: IfNotPresent
      name: node-driver-registrar
      resources:
        limits:
          memory: 100Mi
        requests:
          cpu: 10m
          memory: 20Mi
      securityContext:
        capabilities:
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /registration
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7rhdj
        readOnly: true
    - args:
      - --v=5
      - --endpoint=$(CSI_ENDPOINT)
      - --nodeid=$(KUBE_NODE_NAME)
      - --enable-get-volume-stats=true
      - --mount-permissions=0777
      - --metrics-address=0.0.0.0:29615
      - --enable-kata-cc-mount=true
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io
      - name: AZURE_CREDENTIAL_FILE
        value: /etc/kubernetes/azure.json
      - name: CSI_ENDPOINT
        value: unix:///csi/csi.sock
      - name: KUBE_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.32.5
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /healthz
          port: healthz
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 30
      name: azurefile
      ports:
      - containerPort: 29613
        hostPort: 29613
        name: healthz
        protocol: TCP
      - containerPort: 29615
        hostPort: 29615
        name: metrics
        protocol: TCP
      resources:
        limits:
          memory: 400Mi
        requests:
          cpu: 10m
          memory: 20Mi
      securityContext:
        capabilities:
          drop:
          - ALL
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /var/lib/kubelet/
        mountPropagation: Bidirectional
        name: mountpoint-dir
      - mountPath: /etc/kubernetes/
        name: azure-cred
      - mountPath: /dev
        name: device-dir
      - mountPath: /run/kata-containers/shared/direct-volumes
        name: kata-direct-volumes
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7rhdj
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    hostNetwork: true
    nodeName: aks-nodepool1-28075912-vmss000001
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: csi-azurefile-node-sa
    serviceAccountName: csi-azurefile-node-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/kubelet/plugins/file.csi.azure.com
        type: DirectoryOrCreate
      name: socket-dir
    - hostPath:
        path: /var/lib/kubelet/
        type: DirectoryOrCreate
      name: mountpoint-dir
    - hostPath:
        path: /var/lib/kubelet/plugins_registry/
        type: DirectoryOrCreate
      name: registration-dir
    - hostPath:
        path: /etc/kubernetes/
        type: DirectoryOrCreate
      name: azure-cred
    - hostPath:
        path: /dev
        type: Directory
      name: device-dir
    - hostPath:
        path: /run/kata-containers/shared/direct-volumes/
        type: DirectoryOrCreate
      name: kata-direct-volumes
    - name: kube-api-access-7rhdj
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:08:22Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:08:10Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:08:22Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:08:22Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:08:09Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://c9a48ed51e3424c1a95abd596baf8e0fd459911ad7addbd3b1567758f2d56a25
      image: mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.32.5
      imageID: sha256:7e2c0e10386a147d9eec8133037f90fb6945ce8c9e81fe716c568ae7565b3280
      lastState: {}
      name: azurefile
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-03T17:08:22Z"
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /var/lib/kubelet/
        name: mountpoint-dir
      - mountPath: /etc/kubernetes/
        name: azure-cred
      - mountPath: /dev
        name: device-dir
      - mountPath: /run/kata-containers/shared/direct-volumes
        name: kata-direct-volumes
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7rhdj
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://4832dbf61a03a573e2d914efe72b71557271c3bac88fd475a898da9b6c006145
      image: mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.15.0
      imageID: sha256:36d7b51905972e9344587e53702442dc092bbc43daf6d6e7967bf8f35f49896f
      lastState: {}
      name: liveness-probe
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-03T17:08:19Z"
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7rhdj
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://9cc37514abf8984a7a6910253225980bf18631f868b7e3f1269b9485fc32a010
      image: mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.13.0
      imageID: sha256:03a0bf5a23a8a437f8719e4accf8e28782135f110e8be90b2189d5c819140417
      lastState: {}
      name: node-driver-registrar
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-03T17:08:21Z"
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /registration
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7rhdj
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.224.0.5
    hostIPs:
    - ip: 10.224.0.5
    phase: Running
    podIP: 10.224.0.5
    podIPs:
    - ip: 10.224.0.5
    qosClass: Burstable
    startTime: "2025-09-03T17:08:10Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-09-03T17:07:51Z"
    generateName: csi-azurefile-node-
    labels:
      app: csi-azurefile-node
      controller-revision-hash: 75b655f99b
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "1"
    name: csi-azurefile-node-zhmhn
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: csi-azurefile-node
      uid: 2c209e55-7514-48ee-b9a5-d4ec95c3aba1
    resourceVersion: "1079"
    uid: df58b9bd-7fa6-42ac-9024-1d48ddc22673
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-nodepool1-28075912-vmss000000
    containers:
    - args:
      - --csi-address=/csi/csi.sock
      - --probe-timeout=10s
      - --health-port=29613
      - --v=2
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io
      image: mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.15.0
      imagePullPolicy: IfNotPresent
      name: liveness-probe
      resources:
        limits:
          memory: 100Mi
        requests:
          cpu: 10m
          memory: 20Mi
      securityContext:
        capabilities:
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-274fb
        readOnly: true
    - args:
      - --csi-address=$(ADDRESS)
      - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
      - --v=2
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io
      - name: ADDRESS
        value: /csi/csi.sock
      - name: DRIVER_REG_SOCK_PATH
        value: /var/lib/kubelet/plugins/file.csi.azure.com/csi.sock
      image: mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.13.0
      imagePullPolicy: IfNotPresent
      name: node-driver-registrar
      resources:
        limits:
          memory: 100Mi
        requests:
          cpu: 10m
          memory: 20Mi
      securityContext:
        capabilities:
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /registration
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-274fb
        readOnly: true
    - args:
      - --v=5
      - --endpoint=$(CSI_ENDPOINT)
      - --nodeid=$(KUBE_NODE_NAME)
      - --enable-get-volume-stats=true
      - --mount-permissions=0777
      - --metrics-address=0.0.0.0:29615
      - --enable-kata-cc-mount=true
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io
      - name: AZURE_CREDENTIAL_FILE
        value: /etc/kubernetes/azure.json
      - name: CSI_ENDPOINT
        value: unix:///csi/csi.sock
      - name: KUBE_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.32.5
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /healthz
          port: healthz
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 30
      name: azurefile
      ports:
      - containerPort: 29613
        hostPort: 29613
        name: healthz
        protocol: TCP
      - containerPort: 29615
        hostPort: 29615
        name: metrics
        protocol: TCP
      resources:
        limits:
          memory: 400Mi
        requests:
          cpu: 10m
          memory: 20Mi
      securityContext:
        capabilities:
          drop:
          - ALL
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /var/lib/kubelet/
        mountPropagation: Bidirectional
        name: mountpoint-dir
      - mountPath: /etc/kubernetes/
        name: azure-cred
      - mountPath: /dev
        name: device-dir
      - mountPath: /run/kata-containers/shared/direct-volumes
        name: kata-direct-volumes
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-274fb
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    hostNetwork: true
    nodeName: aks-nodepool1-28075912-vmss000000
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: csi-azurefile-node-sa
    serviceAccountName: csi-azurefile-node-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/kubelet/plugins/file.csi.azure.com
        type: DirectoryOrCreate
      name: socket-dir
    - hostPath:
        path: /var/lib/kubelet/
        type: DirectoryOrCreate
      name: mountpoint-dir
    - hostPath:
        path: /var/lib/kubelet/plugins_registry/
        type: DirectoryOrCreate
      name: registration-dir
    - hostPath:
        path: /etc/kubernetes/
        type: DirectoryOrCreate
      name: azure-cred
    - hostPath:
        path: /dev
        type: Directory
      name: device-dir
    - hostPath:
        path: /run/kata-containers/shared/direct-volumes/
        type: DirectoryOrCreate
      name: kata-direct-volumes
    - name: kube-api-access-274fb
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:07:57Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:07:51Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:07:57Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:07:57Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:07:51Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://9fd079139b89a3fa00cc164cf75ca1b51db16102960eae9cc0786bc7c1f2cd83
      image: mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.32.5
      imageID: sha256:7e2c0e10386a147d9eec8133037f90fb6945ce8c9e81fe716c568ae7565b3280
      lastState: {}
      name: azurefile
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-03T17:07:56Z"
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /var/lib/kubelet/
        name: mountpoint-dir
      - mountPath: /etc/kubernetes/
        name: azure-cred
      - mountPath: /dev
        name: device-dir
      - mountPath: /run/kata-containers/shared/direct-volumes
        name: kata-direct-volumes
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-274fb
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://75040dff4fe67078f123a45623244b64f7ee418b0226e41583719c2a37bf84d9
      image: mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.15.0
      imageID: sha256:36d7b51905972e9344587e53702442dc092bbc43daf6d6e7967bf8f35f49896f
      lastState: {}
      name: liveness-probe
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-03T17:07:55Z"
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-274fb
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://656f5b90e1d3aa187a08aec57c5dc1d3e2fad12cd5a28faec97f6717c1a7e207
      image: mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.13.0
      imageID: sha256:03a0bf5a23a8a437f8719e4accf8e28782135f110e8be90b2189d5c819140417
      lastState: {}
      name: node-driver-registrar
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-03T17:07:56Z"
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /registration
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-274fb
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.224.0.4
    hostIPs:
    - ip: 10.224.0.4
    phase: Running
    podIP: 10.224.0.4
    podIPs:
    - ip: 10.224.0.4
    qosClass: Burstable
    startTime: "2025-09-03T17:07:51Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
    creationTimestamp: "2025-09-03T17:07:07Z"
    generateName: konnectivity-agent-autoscaler-6ddd978bfc-
    labels:
      app: konnectivity-agent-autoscaler
      kubernetes.azure.com/managedby: aks
      pod-template-hash: 6ddd978bfc
    name: konnectivity-agent-autoscaler-6ddd978bfc-p8zrs
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: konnectivity-agent-autoscaler-6ddd978bfc
      uid: 768f1986-ac73-4c50-a638-fe81eac75407
    resourceVersion: "1439"
    uid: 70b3e71d-3dd1-4412-a2dc-cb12ffae4514
  spec:
    affinity:
      nodeAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - preference:
            matchExpressions:
            - key: kubernetes.azure.com/mode
              operator: In
              values:
              - system
          weight: 100
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: kubernetes.azure.com/cluster
              operator: Exists
            - key: type
              operator: NotIn
              values:
              - virtual-kubelet
            - key: kubernetes.io/os
              operator: In
              values:
              - linux
    containers:
    - command:
      - /cluster-proportional-autoscaler
      - --namespace=kube-system
      - --configmap=konnectivity-agent-autoscaler
      - --target=deployment/konnectivity-agent
      - --logtostderr=true
      - --v=2
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io
      image: mcr.microsoft.com/oss/v2/kubernetes/autoscaler/cluster-proportional-autoscaler:v1.9.0-2
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /last-poll
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: autoscaler
      resources:
        limits:
          cpu: 350m
          memory: 512M
        requests:
          cpu: 20m
          memory: 10Mi
      securityContext:
        capabilities:
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qh44l
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    nodeName: aks-nodepool1-28075912-vmss000000
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: konnectivity-agent-autoscaler
    serviceAccountName: konnectivity-agent-autoscaler
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 30
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 30
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: kube-api-access-qh44l
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:08:24Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:08:17Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:08:24Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:08:24Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:08:17Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://4839d89ddc7b26d359ee52e6a80b513dcd36f288bc5efc7ac74701d105061514
      image: mcr.microsoft.com/oss/v2/kubernetes/autoscaler/cluster-proportional-autoscaler:v1.9.0-2
      imageID: mcr.microsoft.com/oss/v2/kubernetes/autoscaler/cluster-proportional-autoscaler@sha256:ef1ce8a6da7d09d93ec6ed51bfefe2e5f5c7b023a18174d6dfbc0699a4a74afc
      lastState: {}
      name: autoscaler
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-03T17:08:24Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qh44l
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.224.0.4
    hostIPs:
    - ip: 10.224.0.4
    phase: Running
    podIP: 10.244.0.77
    podIPs:
    - ip: 10.244.0.77
    qosClass: Burstable
    startTime: "2025-09-03T17:08:17Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/client-cert: 4bf8ed3295ba98bcc20f34566c2725f0628feb903df2d5ea81103a279dde0b16
    creationTimestamp: "2025-09-03T17:07:07Z"
    generateName: konnectivity-agent-fd4bfb657-
    labels:
      app: konnectivity-agent
      component: tunnel
      kubernetes.azure.com/managedby: aks
      pod-template-hash: fd4bfb657
    name: konnectivity-agent-fd4bfb657-2kvpt
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: konnectivity-agent-fd4bfb657
      uid: 3f94ef4b-4197-4448-bc31-d7f06cbcf6cd
    resourceVersion: "1386"
    uid: b937b97b-02c9-45c1-b801-9e4e7a43091e
  spec:
    affinity:
      nodeAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - preference:
            matchExpressions:
            - key: kubernetes.azure.com/mode
              operator: In
              values:
              - system
          weight: 100
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: kubernetes.azure.com/cluster
              operator: Exists
            - key: type
              operator: NotIn
              values:
              - virtual-kubelet
            - key: kubernetes.io/os
              operator: In
              values:
              - linux
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - konnectivity-agent
            topologyKey: topology.kubernetes.io/zone
          weight: 10
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - konnectivity-agent
            topologyKey: kubernetes.io/hostname
          weight: 5
    automountServiceAccountToken: false
    containers:
    - args:
      - --proxy-server-host=elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io
      - --proxy-server-port=443
      - --health-server-port=8082
      - --keepalive-time=30s
      - --agent-key=/certs/client.key
      - --agent-cert=/certs/client.crt
      - --ca-cert=/certs/ca.crt
      - --agent-identifiers=default-route=true
      - --alpn-proto=konnectivity
      - -v=2
      command:
      - /proxy-agent
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io
      image: mcr.microsoft.com/oss/kubernetes/apiserver-network-proxy/agent:v0.30.3-hotfix.20240819
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /ready
          port: 8082
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 60
        successThreshold: 1
        timeoutSeconds: 60
      name: konnectivity-agent
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /ready
          port: 8082
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: "1"
          memory: 1Gi
        requests:
          cpu: 20m
          memory: 20Mi
      securityContext:
        capabilities:
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /certs
        name: certs
    dnsPolicy: Default
    enableServiceLinks: true
    nodeName: aks-nodepool1-28075912-vmss000000
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: konnectivity-agent
    serviceAccountName: konnectivity-agent
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 30
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 30
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: certs
      secret:
        defaultMode: 420
        secretName: konnectivity-certs
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:08:23Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:08:17Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:08:23Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:08:23Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:08:17Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://3b3901a59d3196c9c04f96ce0edd6068732bb25f2320dc6c11bfedf2ba583f73
      image: mcr.microsoft.com/oss/kubernetes/apiserver-network-proxy/agent:v0.30.3-hotfix.20240819
      imageID: mcr.microsoft.com/oss/kubernetes/apiserver-network-proxy/agent@sha256:d58bcadc0a5c54a5be409f3473be0dd5639b111c8a9a7dd1827c8f77d76945e4
      lastState: {}
      name: konnectivity-agent
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-03T17:08:23Z"
      volumeMounts:
      - mountPath: /certs
        name: certs
    hostIP: 10.224.0.4
    hostIPs:
    - ip: 10.224.0.4
    phase: Running
    podIP: 10.244.0.50
    podIPs:
    - ip: 10.244.0.50
    qosClass: Burstable
    startTime: "2025-09-03T17:08:17Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/client-cert: 4bf8ed3295ba98bcc20f34566c2725f0628feb903df2d5ea81103a279dde0b16
    creationTimestamp: "2025-09-03T17:08:24Z"
    generateName: konnectivity-agent-fd4bfb657-
    labels:
      app: konnectivity-agent
      component: tunnel
      kubernetes.azure.com/managedby: aks
      pod-template-hash: fd4bfb657
    name: konnectivity-agent-fd4bfb657-45z5t
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: konnectivity-agent-fd4bfb657
      uid: 3f94ef4b-4197-4448-bc31-d7f06cbcf6cd
    resourceVersion: "1465"
    uid: 4ce99ed8-2a1e-4163-96d8-bd4c421ebc73
  spec:
    affinity:
      nodeAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - preference:
            matchExpressions:
            - key: kubernetes.azure.com/mode
              operator: In
              values:
              - system
          weight: 100
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: kubernetes.azure.com/cluster
              operator: Exists
            - key: type
              operator: NotIn
              values:
              - virtual-kubelet
            - key: kubernetes.io/os
              operator: In
              values:
              - linux
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - konnectivity-agent
            topologyKey: topology.kubernetes.io/zone
          weight: 10
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - konnectivity-agent
            topologyKey: kubernetes.io/hostname
          weight: 5
    automountServiceAccountToken: false
    containers:
    - args:
      - --proxy-server-host=elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io
      - --proxy-server-port=443
      - --health-server-port=8082
      - --keepalive-time=30s
      - --agent-key=/certs/client.key
      - --agent-cert=/certs/client.crt
      - --ca-cert=/certs/ca.crt
      - --agent-identifiers=default-route=true
      - --alpn-proto=konnectivity
      - -v=2
      command:
      - /proxy-agent
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io
      image: mcr.microsoft.com/oss/kubernetes/apiserver-network-proxy/agent:v0.30.3-hotfix.20240819
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /ready
          port: 8082
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 60
        successThreshold: 1
        timeoutSeconds: 60
      name: konnectivity-agent
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /ready
          port: 8082
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: "1"
          memory: 1Gi
        requests:
          cpu: 20m
          memory: 20Mi
      securityContext:
        capabilities:
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /certs
        name: certs
    dnsPolicy: Default
    enableServiceLinks: true
    nodeName: aks-nodepool1-28075912-vmss000000
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: konnectivity-agent
    serviceAccountName: konnectivity-agent
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 30
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 30
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: certs
      secret:
        defaultMode: 420
        secretName: konnectivity-certs
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:08:26Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:08:24Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:08:26Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:08:26Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:08:24Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://d3f9892b86c9d4db82917aa1e176743f4c1948709d6fe7ed030d7c0a2b4edfde
      image: mcr.microsoft.com/oss/kubernetes/apiserver-network-proxy/agent:v0.30.3-hotfix.20240819
      imageID: mcr.microsoft.com/oss/kubernetes/apiserver-network-proxy/agent@sha256:d58bcadc0a5c54a5be409f3473be0dd5639b111c8a9a7dd1827c8f77d76945e4
      lastState: {}
      name: konnectivity-agent
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-03T17:08:26Z"
      volumeMounts:
      - mountPath: /certs
        name: certs
    hostIP: 10.224.0.4
    hostIPs:
    - ip: 10.224.0.4
    phase: Running
    podIP: 10.244.0.105
    podIPs:
    - ip: 10.244.0.105
    qosClass: Burstable
    startTime: "2025-09-03T17:08:24Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-09-03T17:07:51Z"
    generateName: kube-proxy-
    labels:
      component: kube-proxy
      controller-revision-hash: 6bbb6747bc
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "1"
      tier: node
    name: kube-proxy-8gwcj
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: kube-proxy
      uid: 9344f7ec-483a-489c-89be-9f153bee81bd
    resourceVersion: "1080"
    uid: cc137b62-ae04-4c83-9400-fc62f8b28d1f
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-nodepool1-28075912-vmss000000
    containers:
    - command:
      - kube-proxy
      - --conntrack-max-per-core=0
      - --metrics-bind-address=0.0.0.0:10249
      - --cluster-cidr=10.244.0.0/16
      - --detect-local-mode=InterfaceNamePrefix
      - --pod-interface-name-prefix=azv
      - --v=3
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io
      image: mcr.microsoft.com/oss/kubernetes/kube-proxy:v1.32.6
      imagePullPolicy: IfNotPresent
      name: kube-proxy
      resources:
        requests:
          cpu: 100m
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /run/xtables.lock
        name: iptableslock
      - mountPath: /lib/modules
        name: modules
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gk44x
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - command:
      - /bin/sh
      - -c
      - |
        get_num_cpu() {
          # format is comma-separated list of CPU IDs or ranges of CPU IDs (examples: "0-3", "0,1,2", "0-3,4")
          # see https://www.kernel.org/doc/html/latest/admin-guide/cputopology.html
          sys_cpu_online=$(cat /sys/devices/system/cpu/online)
          result=0
          OLD_IFS="$IFS"; IFS=","
          for rng in "$sys_cpu_online"; do
            if echo "$rng" | grep -q -- "-"; then
              min=${rng%-*}; max=${rng#*-}
              if [ "$min" -le "$max" ]; then
                result=$((result + (max - min + 1)))
              fi
            else
              result=$((result + 1))
            fi
          done
          IFS="$OLD_IFS"
          echo $result
        }

        SYSCTL=/proc/sys/net/netfilter/nf_conntrack_max
        echo "Current net.netfilter.nf_conntrack_max: $(cat $SYSCTL)"
        DESIRED=$(grep -m 1 'net.netfilter.nf_conntrack_max' /etc/sysctl.d/999-sysctl-aks.conf | grep -oP '(?<=net.netfilter.nf_conntrack_max=).*')
        if [ -z "$DESIRED" ]; then
          NUM_CPU=$(get_num_cpu)
          DESIRED=$((32768*$NUM_CPU))
          if [ $DESIRED -lt 131072 ]; then
            DESIRED=131072
          fi

          echo "AKS custom config for net.netfilter.nf_conntrack_max not set."
          echo "Setting nf_conntrack_max to $DESIRED (32768 * $NUM_CPU cores, minimum 131072)."
          echo $DESIRED > $SYSCTL
        else
          echo "AKS custom config for net.netfilter.nf_conntrack_max set to $DESIRED."
          echo "Setting nf_conntrack_max to $DESIRED."
          echo $DESIRED > $SYSCTL
        fi
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io
      image: mcr.microsoft.com/oss/kubernetes/kube-proxy:v1.32.6
      imagePullPolicy: IfNotPresent
      name: kube-proxy-bootstrap
      resources:
        requests:
          cpu: 100m
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/sysctl.d
        name: sysctls
      - mountPath: /lib/modules
        name: modules
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gk44x
        readOnly: true
    nodeName: aks-nodepool1-28075912-vmss000000
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: kube-proxy
    serviceAccountName: kube-proxy
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    volumes:
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: iptableslock
    - hostPath:
        path: /etc/sysctl.d
        type: Directory
      name: sysctls
    - hostPath:
        path: /lib/modules
        type: Directory
      name: modules
    - name: kube-api-access-gk44x
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:07:55Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:07:56Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:07:57Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:07:57Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:07:51Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://a625f12b5bd12bc4c3219fcf093c2b14552af128f80fb7454eb099e8c451f15f
      image: mcr.microsoft.com/oss/kubernetes/kube-proxy:v1.32.6
      imageID: sha256:a6d546c54804a29bcd378da84635178da4ca6b133e86e030e87582eb91ad99c3
      lastState: {}
      name: kube-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-03T17:07:56Z"
      volumeMounts:
      - mountPath: /run/xtables.lock
        name: iptableslock
      - mountPath: /lib/modules
        name: modules
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gk44x
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.224.0.4
    hostIPs:
    - ip: 10.224.0.4
    initContainerStatuses:
    - containerID: containerd://37d8ff8adb7fbea7988fc917360de6c900dad7750100976cd93ce214cd4e1812
      image: mcr.microsoft.com/oss/kubernetes/kube-proxy:v1.32.6
      imageID: sha256:a6d546c54804a29bcd378da84635178da4ca6b133e86e030e87582eb91ad99c3
      lastState: {}
      name: kube-proxy-bootstrap
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://37d8ff8adb7fbea7988fc917360de6c900dad7750100976cd93ce214cd4e1812
          exitCode: 0
          finishedAt: "2025-09-03T17:07:55Z"
          reason: Completed
          startedAt: "2025-09-03T17:07:54Z"
      volumeMounts:
      - mountPath: /etc/sysctl.d
        name: sysctls
      - mountPath: /lib/modules
        name: modules
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gk44x
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.224.0.4
    podIPs:
    - ip: 10.224.0.4
    qosClass: Burstable
    startTime: "2025-09-03T17:07:51Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-09-03T17:08:10Z"
    generateName: kube-proxy-
    labels:
      component: kube-proxy
      controller-revision-hash: 6bbb6747bc
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "1"
      tier: node
    name: kube-proxy-pbtbz
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: kube-proxy
      uid: 9344f7ec-483a-489c-89be-9f153bee81bd
    resourceVersion: "1371"
    uid: 78e03773-0e11-4010-bdaf-e4ab0c25e091
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-nodepool1-28075912-vmss000001
    containers:
    - command:
      - kube-proxy
      - --conntrack-max-per-core=0
      - --metrics-bind-address=0.0.0.0:10249
      - --cluster-cidr=10.244.0.0/16
      - --detect-local-mode=InterfaceNamePrefix
      - --pod-interface-name-prefix=azv
      - --v=3
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io
      image: mcr.microsoft.com/oss/kubernetes/kube-proxy:v1.32.6
      imagePullPolicy: IfNotPresent
      name: kube-proxy
      resources:
        requests:
          cpu: 100m
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /run/xtables.lock
        name: iptableslock
      - mountPath: /lib/modules
        name: modules
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-fjqn2
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - command:
      - /bin/sh
      - -c
      - |
        get_num_cpu() {
          # format is comma-separated list of CPU IDs or ranges of CPU IDs (examples: "0-3", "0,1,2", "0-3,4")
          # see https://www.kernel.org/doc/html/latest/admin-guide/cputopology.html
          sys_cpu_online=$(cat /sys/devices/system/cpu/online)
          result=0
          OLD_IFS="$IFS"; IFS=","
          for rng in "$sys_cpu_online"; do
            if echo "$rng" | grep -q -- "-"; then
              min=${rng%-*}; max=${rng#*-}
              if [ "$min" -le "$max" ]; then
                result=$((result + (max - min + 1)))
              fi
            else
              result=$((result + 1))
            fi
          done
          IFS="$OLD_IFS"
          echo $result
        }

        SYSCTL=/proc/sys/net/netfilter/nf_conntrack_max
        echo "Current net.netfilter.nf_conntrack_max: $(cat $SYSCTL)"
        DESIRED=$(grep -m 1 'net.netfilter.nf_conntrack_max' /etc/sysctl.d/999-sysctl-aks.conf | grep -oP '(?<=net.netfilter.nf_conntrack_max=).*')
        if [ -z "$DESIRED" ]; then
          NUM_CPU=$(get_num_cpu)
          DESIRED=$((32768*$NUM_CPU))
          if [ $DESIRED -lt 131072 ]; then
            DESIRED=131072
          fi

          echo "AKS custom config for net.netfilter.nf_conntrack_max not set."
          echo "Setting nf_conntrack_max to $DESIRED (32768 * $NUM_CPU cores, minimum 131072)."
          echo $DESIRED > $SYSCTL
        else
          echo "AKS custom config for net.netfilter.nf_conntrack_max set to $DESIRED."
          echo "Setting nf_conntrack_max to $DESIRED."
          echo $DESIRED > $SYSCTL
        fi
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io
      image: mcr.microsoft.com/oss/kubernetes/kube-proxy:v1.32.6
      imagePullPolicy: IfNotPresent
      name: kube-proxy-bootstrap
      resources:
        requests:
          cpu: 100m
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/sysctl.d
        name: sysctls
      - mountPath: /lib/modules
        name: modules
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-fjqn2
        readOnly: true
    nodeName: aks-nodepool1-28075912-vmss000001
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: kube-proxy
    serviceAccountName: kube-proxy
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    volumes:
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: iptableslock
    - hostPath:
        path: /etc/sysctl.d
        type: Directory
      name: sysctls
    - hostPath:
        path: /lib/modules
        type: Directory
      name: modules
    - name: kube-api-access-fjqn2
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:08:19Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:08:21Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:08:22Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:08:22Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:08:10Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://07535d47d83869318a7e0358f9620a5e9b722846425e3fe645919eb99efd7ddb
      image: mcr.microsoft.com/oss/kubernetes/kube-proxy:v1.32.6
      imageID: sha256:a6d546c54804a29bcd378da84635178da4ca6b133e86e030e87582eb91ad99c3
      lastState: {}
      name: kube-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-03T17:08:22Z"
      volumeMounts:
      - mountPath: /run/xtables.lock
        name: iptableslock
      - mountPath: /lib/modules
        name: modules
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-fjqn2
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.224.0.5
    hostIPs:
    - ip: 10.224.0.5
    initContainerStatuses:
    - containerID: containerd://9401759d9b4d87ac0aac0cf7e2f181e1a36e8143dd9b5670791f7628396463f6
      image: mcr.microsoft.com/oss/kubernetes/kube-proxy:v1.32.6
      imageID: sha256:a6d546c54804a29bcd378da84635178da4ca6b133e86e030e87582eb91ad99c3
      lastState: {}
      name: kube-proxy-bootstrap
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://9401759d9b4d87ac0aac0cf7e2f181e1a36e8143dd9b5670791f7628396463f6
          exitCode: 0
          finishedAt: "2025-09-03T17:08:20Z"
          reason: Completed
          startedAt: "2025-09-03T17:08:18Z"
      volumeMounts:
      - mountPath: /etc/sysctl.d
        name: sysctls
      - mountPath: /lib/modules
        name: modules
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-fjqn2
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.224.0.5
    podIPs:
    - ip: 10.224.0.5
    qosClass: Burstable
    startTime: "2025-09-03T17:08:10Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-09-03T17:08:35Z"
    generateName: metrics-server-6c4cb48ddc-
    labels:
      k8s-app: metrics-server
      kubernetes.azure.com/managedby: aks
      pod-template-hash: 6c4cb48ddc
    name: metrics-server-6c4cb48ddc-qjld8
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: metrics-server-6c4cb48ddc
      uid: ad947d04-b4bc-4c5a-85e3-d2d4a9ffa73b
    resourceVersion: "1976"
    uid: 7cc8c324-aab5-4ec1-8097-a46aa16a377b
  spec:
    affinity:
      nodeAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - preference:
            matchExpressions:
            - key: kubernetes.azure.com/mode
              operator: In
              values:
              - system
          weight: 100
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: kubernetes.azure.com/cluster
              operator: Exists
            - key: type
              operator: NotIn
              values:
              - virtual-kubelet
            - key: kubernetes.io/os
              operator: In
              values:
              - linux
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - metrics-server
            topologyKey: topology.kubernetes.io/zone
          weight: 10
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - metrics-server
            topologyKey: kubernetes.io/hostname
          weight: 5
    containers:
    - command:
      - /pod_nanny
      - --config-dir=/etc/config
      - --cpu=150m
      - --extra-cpu=0.5m
      - --memory=100Mi
      - --extra-memory=4Mi
      - --poll-period=180000
      - --threshold=5
      - --deployment=metrics-server
      - --container=metrics-server
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io
      - name: MY_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: MY_POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      image: mcr.microsoft.com/oss/v2/kubernetes/autoscaler/addon-resizer:v1.8.23-4
      imagePullPolicy: IfNotPresent
      name: metrics-server-vpa
      resources:
        limits:
          cpu: 100m
          memory: 300Mi
        requests:
          cpu: 5m
          memory: 30Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 65532
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/config
        name: metrics-server-config-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mr5l9
        readOnly: true
    - command:
      - /metrics-server
      - --kubelet-insecure-tls
      - --kubelet-preferred-address-types=InternalIP
      - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
      - --cert-dir=/tmp
      - --secure-port=4443
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io
      image: mcr.microsoft.com/oss/v2/kubernetes/metrics-server:v0.7.2-7
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /livez
          port: ms-https
          scheme: HTTPS
        initialDelaySeconds: 20
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      name: metrics-server
      ports:
      - containerPort: 4443
        name: ms-https
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /readyz
          port: ms-https
          scheme: HTTPS
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      resources:
        limits:
          cpu: 151m
          memory: 108Mi
        requests:
          cpu: 151m
          memory: 108Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 65532
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp
        name: tmp-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mr5l9
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: aks-nodepool1-28075912-vmss000000
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: metrics-server
    serviceAccountName: metrics-server
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 30
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 30
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - emptyDir: {}
      name: tmp-dir
    - configMap:
        defaultMode: 420
        name: metrics-server-config
        optional: true
      name: metrics-server-config-volume
    - name: kube-api-access-mr5l9
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:08:39Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:08:35Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:09:41Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:09:41Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:08:35Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://540ad38bcc5ae0eb1ad84b4121dba0bb55a1a87f31071435a7549675b70eb906
      image: mcr.microsoft.com/oss/v2/kubernetes/metrics-server:v0.7.2-7
      imageID: mcr.microsoft.com/oss/v2/kubernetes/metrics-server@sha256:5cf1d4d9d163ee8c920f75bd5c0481d749bced8a9e50b1b84dad4349a30fac7e
      lastState: {}
      name: metrics-server
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-03T17:08:38Z"
      volumeMounts:
      - mountPath: /tmp
        name: tmp-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mr5l9
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://fea5d877a194313fa5e13a351d121b8e85d1e32d1cf0cf5e9be9b56612a2d340
      image: mcr.microsoft.com/oss/v2/kubernetes/autoscaler/addon-resizer:v1.8.23-4
      imageID: mcr.microsoft.com/oss/v2/kubernetes/autoscaler/addon-resizer@sha256:2345ddd66068118a386fe87294aabe184382602f1c4b7a660da750e09a66e82e
      lastState: {}
      name: metrics-server-vpa
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-03T17:08:38Z"
      volumeMounts:
      - mountPath: /etc/config
        name: metrics-server-config-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mr5l9
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.224.0.4
    hostIPs:
    - ip: 10.224.0.4
    phase: Running
    podIP: 10.244.0.188
    podIPs:
    - ip: 10.244.0.188
    qosClass: Burstable
    startTime: "2025-09-03T17:08:35Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-09-03T17:08:35Z"
    generateName: metrics-server-6c4cb48ddc-
    labels:
      k8s-app: metrics-server
      kubernetes.azure.com/managedby: aks
      pod-template-hash: 6c4cb48ddc
    name: metrics-server-6c4cb48ddc-tj55p
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: metrics-server-6c4cb48ddc
      uid: ad947d04-b4bc-4c5a-85e3-d2d4a9ffa73b
    resourceVersion: "1982"
    uid: 9511fb28-8b97-4334-909e-6a4897a135c2
  spec:
    affinity:
      nodeAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - preference:
            matchExpressions:
            - key: kubernetes.azure.com/mode
              operator: In
              values:
              - system
          weight: 100
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: kubernetes.azure.com/cluster
              operator: Exists
            - key: type
              operator: NotIn
              values:
              - virtual-kubelet
            - key: kubernetes.io/os
              operator: In
              values:
              - linux
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - metrics-server
            topologyKey: topology.kubernetes.io/zone
          weight: 10
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - metrics-server
            topologyKey: kubernetes.io/hostname
          weight: 5
    containers:
    - command:
      - /pod_nanny
      - --config-dir=/etc/config
      - --cpu=150m
      - --extra-cpu=0.5m
      - --memory=100Mi
      - --extra-memory=4Mi
      - --poll-period=180000
      - --threshold=5
      - --deployment=metrics-server
      - --container=metrics-server
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io
      - name: MY_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: MY_POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      image: mcr.microsoft.com/oss/v2/kubernetes/autoscaler/addon-resizer:v1.8.23-4
      imagePullPolicy: IfNotPresent
      name: metrics-server-vpa
      resources:
        limits:
          cpu: 100m
          memory: 300Mi
        requests:
          cpu: 5m
          memory: 30Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 65532
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/config
        name: metrics-server-config-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-slfrw
        readOnly: true
    - command:
      - /metrics-server
      - --kubelet-insecure-tls
      - --kubelet-preferred-address-types=InternalIP
      - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
      - --cert-dir=/tmp
      - --secure-port=4443
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io
      image: mcr.microsoft.com/oss/v2/kubernetes/metrics-server:v0.7.2-7
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /livez
          port: ms-https
          scheme: HTTPS
        initialDelaySeconds: 20
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      name: metrics-server
      ports:
      - containerPort: 4443
        name: ms-https
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /readyz
          port: ms-https
          scheme: HTTPS
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      resources:
        limits:
          cpu: 151m
          memory: 108Mi
        requests:
          cpu: 151m
          memory: 108Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 65532
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp
        name: tmp-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-slfrw
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: aks-nodepool1-28075912-vmss000000
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: metrics-server
    serviceAccountName: metrics-server
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 30
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 30
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - emptyDir: {}
      name: tmp-dir
    - configMap:
        defaultMode: 420
        name: metrics-server-config
        optional: true
      name: metrics-server-config-volume
    - name: kube-api-access-slfrw
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:08:39Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:08:35Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:09:41Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:09:41Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T17:08:35Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://3ab98b960159cfc57e8399e873c55debf151243e611ecc78a03ea71675ae1a8c
      image: mcr.microsoft.com/oss/v2/kubernetes/metrics-server:v0.7.2-7
      imageID: mcr.microsoft.com/oss/v2/kubernetes/metrics-server@sha256:5cf1d4d9d163ee8c920f75bd5c0481d749bced8a9e50b1b84dad4349a30fac7e
      lastState: {}
      name: metrics-server
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-03T17:08:39Z"
      volumeMounts:
      - mountPath: /tmp
        name: tmp-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-slfrw
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://64770b5810a14f0e05cec6732b8b76317dc011d8953e5a972d486636ae4ea86c
      image: mcr.microsoft.com/oss/v2/kubernetes/autoscaler/addon-resizer:v1.8.23-4
      imageID: mcr.microsoft.com/oss/v2/kubernetes/autoscaler/addon-resizer@sha256:2345ddd66068118a386fe87294aabe184382602f1c4b7a660da750e09a66e82e
      lastState: {}
      name: metrics-server-vpa
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-03T17:08:38Z"
      volumeMounts:
      - mountPath: /etc/config
        name: metrics-server-config-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-slfrw
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.224.0.4
    hostIPs:
    - ip: 10.224.0.4
    phase: Running
    podIP: 10.244.0.229
    podIPs:
    - ip: 10.244.0.229
    qosClass: Burstable
    startTime: "2025-09-03T17:08:35Z"
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2025-09-03T17:06:16Z"
    labels:
      component: apiserver
      provider: kubernetes
    name: kubernetes
    namespace: default
    resourceVersion: "211"
    uid: e83eec7e-6fe7-41c1-9f30-48d62e22a923
  spec:
    clusterIP: 10.0.0.1
    clusterIPs:
    - 10.0.0.1
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: https
      port: 443
      protocol: TCP
      targetPort: 443
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app":"elasticsearch-azure"},"name":"elasticsearch-azure-service","namespace":"elasticsearch"},"spec":{"ports":[{"port":9200,"protocol":"TCP","targetPort":9200}],"selector":{"app":"elasticsearch-azure"},"type":"LoadBalancer"}}
    creationTimestamp: "2025-09-03T17:11:09Z"
    finalizers:
    - service.kubernetes.io/load-balancer-cleanup
    labels:
      app: elasticsearch-azure
    name: elasticsearch-azure-service
    namespace: elasticsearch
    resourceVersion: "2565"
    uid: a96de239-a7c1-48f4-b7a2-585ae7987051
  spec:
    allocateLoadBalancerNodePorts: true
    clusterIP: 10.0.78.3
    clusterIPs:
    - 10.0.78.3
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - nodePort: 30332
      port: 9200
      protocol: TCP
      targetPort: 9200
    selector:
      app: elasticsearch-azure
    sessionAffinity: None
    type: LoadBalancer
  status:
    loadBalancer:
      ingress:
      - ip: 20.109.148.166
        ipMode: VIP
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app":"kibana-azure"},"name":"kibana-azure-service","namespace":"elasticsearch"},"spec":{"ports":[{"port":5601,"protocol":"TCP","targetPort":5601}],"selector":{"app":"kibana-azure"},"type":"LoadBalancer"}}
    creationTimestamp: "2025-09-03T17:11:10Z"
    finalizers:
    - service.kubernetes.io/load-balancer-cleanup
    labels:
      app: kibana-azure
    name: kibana-azure-service
    namespace: elasticsearch
    resourceVersion: "2614"
    uid: c7750e66-07af-42be-b9ff-d0f1179ab4e8
  spec:
    allocateLoadBalancerNodePorts: true
    clusterIP: 10.0.174.169
    clusterIPs:
    - 10.0.174.169
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - nodePort: 31490
      port: 5601
      protocol: TCP
      targetPort: 5601
    selector:
      app: kibana-azure
    sessionAffinity: None
    type: LoadBalancer
  status:
    loadBalancer:
      ingress:
      - ip: 20.252.78.28
        ipMode: VIP
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","k8s-app":"kube-dns","kubernetes.io/cluster-service":"true","kubernetes.io/name":"CoreDNS"},"name":"kube-dns","namespace":"kube-system"},"spec":{"clusterIP":"10.0.0.10","ports":[{"name":"dns","port":53,"protocol":"UDP"},{"name":"dns-tcp","port":53,"protocol":"TCP"}],"selector":{"k8s-app":"kube-dns"}}}
    creationTimestamp: "2025-09-03T17:07:06Z"
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: kube-dns
      kubernetes.io/cluster-service: "true"
      kubernetes.io/name: CoreDNS
    name: kube-dns
    namespace: kube-system
    resourceVersion: "576"
    uid: b74dacdf-bbbe-4b06-9bc1-d9e31f77c452
  spec:
    clusterIP: 10.0.0.10
    clusterIPs:
    - 10.0.0.10
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: dns
      port: 53
      protocol: UDP
      targetPort: 53
    - name: dns-tcp
      port: 53
      protocol: TCP
      targetPort: 53
    selector:
      k8s-app: kube-dns
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","kubernetes.io/cluster-service":"true","kubernetes.io/name":"Metrics-server"},"name":"metrics-server","namespace":"kube-system"},"spec":{"ports":[{"port":443,"protocol":"TCP","targetPort":"ms-https"}],"selector":{"k8s-app":"metrics-server"}}}
    creationTimestamp: "2025-09-03T17:07:07Z"
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      kubernetes.io/cluster-service: "true"
      kubernetes.io/name: Metrics-server
    name: metrics-server
    namespace: kube-system
    resourceVersion: "666"
    uid: 0b5248b0-3c2b-4e0e-b6a5-7bc26afd86b7
  spec:
    clusterIP: 10.0.230.182
    clusterIPs:
    - 10.0.230.182
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - port: 443
      protocol: TCP
      targetPort: ms-https
    selector:
      k8s-app: metrics-server
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
      meta.helm.sh/release-name: aks-managed-azure-monitor-logs
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2025-09-03T17:09:14Z"
    generation: 1
    labels:
      app.kubernetes.io/managed-by: Helm
      component: ama-logs-agent
      helm.toolkit.fluxcd.io/name: azure-monitor-logs-adapter-helmrelease
      helm.toolkit.fluxcd.io/namespace: 68b87514049939000198cc21
      kubernetes.azure.com/managedby: aks
      tier: node
    name: ama-logs
    namespace: kube-system
    resourceVersion: "1880"
    uid: 7a4b0be4-65c7-443a-85b3-69178ea8fc50
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        component: ama-logs-agent
        tier: node
    template:
      metadata:
        annotations:
          WSID: ZWRlMzc2MjctNDFhOC00ZjdjLTg1YTAtMzkzNjQ4ODIyM2E5
          agentVersion: azure-mdsd-1.35.7
          dockerProviderVersion: 18.0.1-0
          kubernetes.azure.com/no-http-proxy-vars: "true"
          schema-versions: v1
        creationTimestamp: null
        labels:
          component: ama-logs-agent
          kubernetes.azure.com/managedby: aks
          tier: node
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
        containers:
        - args:
          - --secret-namespace=kube-system
          - --secret-name=aad-msi-auth-token
          - --token-server-listening-port=8888
          - --health-server-listening-port=9999
          - --restart-pod-waiting-minutes-on-broken-connection=240
          command:
          - /addon-token-adapter
          env:
          - name: AZMON_COLLECT_ENV
            value: "false"
          image: mcr.microsoft.com/aks/msi/addon-token-adapter:master.250604.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 9999
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 1
          name: addon-token-adapter
          resources:
            limits:
              cpu: 100m
              memory: 100Mi
            requests:
              cpu: 20m
              memory: 50Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - env:
          - name: NODE_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: CONTAINER_MEMORY_LIMIT_IN_BYTES
            valueFrom:
              resourceFieldRef:
                containerName: ama-logs
                divisor: "0"
                resource: limits.memory
          - name: HOSTNAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: FBIT_SERVICE_FLUSH_INTERVAL
            value: "15"
          - name: FBIT_TAIL_BUFFER_CHUNK_SIZE
            value: "1"
          - name: FBIT_TAIL_BUFFER_MAX_SIZE
            value: "1"
          - name: AKS_CLUSTER_NAME
            value: elasticsearch-cluster-azure
          - name: AKS_RESOURCE_ID
            value: /subscriptions/f0d02754-d8ca-4e7d-b010-ebac7cd463da/resourceGroups/multi-cloud-elastic-rg/providers/Microsoft.ContainerService/managedClusters/elasticsearch-cluster-azure
          - name: AKS_NODE_RESOURCE_GROUP
            value: MC_multi-cloud-elastic-rg_elasticsearch-cluster-azure_westus2
          - name: AKS_REGION
            value: westus2
          - name: CONTROLLER_TYPE
            value: DaemonSet
          - name: USER_ASSIGNED_IDENTITY_CLIENT_ID
          - name: AZMON_CONTAINERLOGS_ONEAGENT_REGIONS
            value: koreacentral,norwayeast,eastus2
          - name: APPMONITORING_AUTOINSTRUMENTATION_ENABLED
            value: "false"
          - name: APPMONITORING_OPENTELEMETRYLOGS_ENABLED
            value: "false"
          - name: APPMONITORING_OPENTELEMETRYLOGS_PORT
            value: "28331"
          - name: PROMETHEUS_METRICS_SCRAPING_DISABLED
            value: "false"
          - name: USING_AAD_MSI_AUTH
            value: "true"
          - name: SYSLOG_HOST_PORT
            value: "28330"
          - name: AZMON_RETINA_FLOW_LOGS_ENABLED
            value: "false"
          - name: AZMON_RESOURCE_OPTIMIZATION_ENABLED
            value: "false"
          - name: AZMON_TELEGRAF_LIVENESSPROBE_ENABLED
            value: "false"
          - name: CLUSTER_CLOUD_ENVIRONMENT
            value: azurepubliccloud
          image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod:3.1.28
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /bin/bash
              - -c
              - /opt/livenessprobe.sh
            failureThreshold: 3
            initialDelaySeconds: 60
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 15
          name: ama-logs
          ports:
          - containerPort: 25225
            protocol: TCP
          - containerPort: 25224
            protocol: UDP
          - containerPort: 28330
            hostPort: 28330
            name: syslog
            protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 75m
              memory: 325Mi
          securityContext:
            capabilities:
              add:
              - DAC_OVERRIDE
              drop:
              - ALL
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /hostfs
            mountPropagation: HostToContainer
            name: host-root
            readOnly: true
          - mountPath: /var/log
            name: host-log
          - mountPath: /var/run/mdsd-ci
            name: mdsd-sock
          - mountPath: /var/run/mdsd-PrometheusSidecar
            name: mdsd-prometheus-sock
          - mountPath: /var/lib/docker/containers
            name: containerlog-path
            readOnly: true
          - mountPath: /mnt/docker
            name: containerlog-path-2
            readOnly: true
          - mountPath: /mnt/containers
            name: containerlog-path-3
            readOnly: true
          - mountPath: /etc/kubernetes/host
            name: azure-json-path
          - mountPath: /etc/ama-logs-secret
            name: ama-logs-secret
            readOnly: true
          - mountPath: /etc/omsagent-secret
            name: ama-logs-secret
            readOnly: true
          - mountPath: /etc/config/settings
            name: settings-vol-config
            readOnly: true
          - mountPath: /etc/config/settings/adx
            name: ama-logs-adx-secret
            readOnly: true
        - env:
          - name: NODE_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: CONTAINER_MEMORY_LIMIT_IN_BYTES
            valueFrom:
              resourceFieldRef:
                containerName: ama-logs-prometheus
                divisor: "0"
                resource: limits.memory
          - name: HOSTNAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: AKS_CLUSTER_NAME
            value: elasticsearch-cluster-azure
          - name: AKS_RESOURCE_ID
            value: /subscriptions/f0d02754-d8ca-4e7d-b010-ebac7cd463da/resourceGroups/multi-cloud-elastic-rg/providers/Microsoft.ContainerService/managedClusters/elasticsearch-cluster-azure
          - name: AKS_NODE_RESOURCE_GROUP
            value: MC_multi-cloud-elastic-rg_elasticsearch-cluster-azure_westus2
          - name: AKS_REGION
            value: westus2
          - name: CONTROLLER_TYPE
            value: DaemonSet
          - name: CONTAINER_TYPE
            value: PrometheusSidecar
          - name: USER_ASSIGNED_IDENTITY_CLIENT_ID
          - name: USING_AAD_MSI_AUTH
            value: "true"
          - name: SYSLOG_HOST_PORT
            value: "28330"
          - name: AZMON_TELEGRAF_LIVENESSPROBE_ENABLED
            value: "false"
          - name: CLUSTER_CLOUD_ENVIRONMENT
            value: azurepubliccloud
          image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod:3.1.28
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /bin/bash
              - -c
              - /opt/livenessprobe.sh
            failureThreshold: 3
            initialDelaySeconds: 60
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 15
          name: ama-logs-prometheus
          resources:
            limits:
              cpu: 500m
              memory: 1Gi
            requests:
              cpu: 75m
              memory: 225Mi
          securityContext:
            capabilities:
              add:
              - DAC_OVERRIDE
              drop:
              - ALL
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/kubernetes/host
            name: azure-json-path
          - mountPath: /etc/ama-logs-secret
            name: ama-logs-secret
            readOnly: true
          - mountPath: /etc/omsagent-secret
            name: ama-logs-secret
            readOnly: true
          - mountPath: /etc/config/settings
            name: settings-vol-config
            readOnly: true
          - mountPath: /etc/config/osm-settings
            name: osm-settings-vol-config
            readOnly: true
          - mountPath: /var/run/mdsd-PrometheusSidecar
            name: mdsd-prometheus-sock
          - mountPath: /var/run/mdsd-ci
            name: mdsd-sock
        dnsConfig:
          options:
          - name: ndots
            value: "3"
        dnsPolicy: ClusterFirst
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: ama-logs
        serviceAccountName: ama-logs
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - effect: PreferNoSchedule
          operator: Exists
        volumes:
        - hostPath:
            path: /
            type: ""
          name: host-root
        - emptyDir: {}
          name: mdsd-prometheus-sock
        - hostPath:
            path: /etc/hostname
            type: ""
          name: container-hostname
        - hostPath:
            path: /var/log
            type: ""
          name: host-log
        - hostPath:
            path: /var/run/mdsd-ci
            type: ""
          name: mdsd-sock
        - hostPath:
            path: /var/lib/docker/containers
            type: ""
          name: containerlog-path
        - hostPath:
            path: /mnt/docker
            type: ""
          name: containerlog-path-2
        - hostPath:
            path: /mnt/containers
            type: ""
          name: containerlog-path-3
        - hostPath:
            path: /etc/kubernetes
            type: ""
          name: azure-json-path
        - name: ama-logs-secret
          secret:
            defaultMode: 420
            secretName: ama-logs-secret
        - configMap:
            defaultMode: 420
            name: container-azm-ms-agentconfig
            optional: true
          name: settings-vol-config
        - name: ama-logs-adx-secret
          secret:
            defaultMode: 420
            optional: true
            secretName: ama-logs-adx-secret
        - configMap:
            defaultMode: 420
            name: container-azm-ms-osmconfig
            optional: true
          name: osm-settings-vol-config
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 50%
      type: RollingUpdate
  status:
    currentNumberScheduled: 2
    desiredNumberScheduled: 2
    numberAvailable: 2
    numberMisscheduled: 0
    numberReady: 2
    observedGeneration: 1
    updatedNumberScheduled: 2
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
      meta.helm.sh/release-name: aks-managed-azure-monitor-logs
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2025-09-03T17:09:14Z"
    generation: 1
    labels:
      app.kubernetes.io/managed-by: Helm
      component: ama-logs-agent-windows
      helm.toolkit.fluxcd.io/name: azure-monitor-logs-adapter-helmrelease
      helm.toolkit.fluxcd.io/namespace: 68b87514049939000198cc21
      kubernetes.azure.com/managedby: aks
      tier: node-win
    name: ama-logs-windows
    namespace: kube-system
    resourceVersion: "1794"
    uid: 76c2d295-3c8d-46ab-8fab-183c34d2c442
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        component: ama-logs-agent-windows
        tier: node-win
    template:
      metadata:
        annotations:
          WSID: ZWRlMzc2MjctNDFhOC00ZjdjLTg1YTAtMzkzNjQ4ODIyM2E5
          agentVersion: 46.17.2
          dockerProviderVersion: 18.0.1-0
          kubernetes.azure.com/no-http-proxy-vars: "true"
          schema-versions: v1
        creationTimestamp: null
        labels:
          component: ama-logs-agent-windows
          kubernetes.azure.com/managedby: aks
          tier: node-win
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - windows
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
        containers:
        - env:
          - name: FBIT_SERVICE_FLUSH_INTERVAL
            value: "15"
          - name: FBIT_TAIL_BUFFER_CHUNK_SIZE
            value: "1"
          - name: FBIT_TAIL_BUFFER_MAX_SIZE
            value: "1"
          - name: AKS_RESOURCE_ID
            value: /subscriptions/f0d02754-d8ca-4e7d-b010-ebac7cd463da/resourceGroups/multi-cloud-elastic-rg/providers/Microsoft.ContainerService/managedClusters/elasticsearch-cluster-azure
          - name: AKS_REGION
            value: westus2
          - name: CONTROLLER_TYPE
            value: DaemonSet
          - name: USER_ASSIGNED_IDENTITY_CLIENT_ID
          - name: HOSTNAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: NODE_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: PODNAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_MEMORY_LIMIT_IN_BYTES
            valueFrom:
              resourceFieldRef:
                containerName: ama-logs-windows
                divisor: "0"
                resource: limits.memory
          - name: SIDECAR_SCRAPING_ENABLED
            value: "true"
          - name: USING_AAD_MSI_AUTH
            value: "true"
          - name: APPMONITORING_AUTOINSTRUMENTATION_ENABLED
            value: "false"
          - name: APPMONITORING_OPENTELEMETRYLOGS_ENABLED
            value: "false"
          - name: APPMONITORING_OPENTELEMETRYLOGS_PORT
            value: "28331"
          - name: PROMETHEUS_METRICS_SCRAPING_DISABLED
            value: "false"
          - name: AZMON_TELEGRAF_LIVENESSPROBE_ENABLED
            value: "false"
          - name: AZMON_WINDOWS_FLUENT_BIT_ENABLED
            value: "false"
          - name: CLUSTER_CLOUD_ENVIRONMENT
            value: azurepubliccloud
          image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod:win-3.1.28
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - cmd
              - /c
              - C:\opt\amalogswindows\scripts\cmd\livenessprobe.exe
              - fluent-bit.exe
              - fluentdwinaks
              - C:\etc\amalogswindows\filesystemwatcher.txt
              - C:\etc\amalogswindows\renewcertificate.txt
              - MonAgentCore.exe
            failureThreshold: 3
            initialDelaySeconds: 180
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 15
          name: ama-logs-windows
          resources:
            limits:
              cpu: "2"
              memory: 2Gi
            requests:
              cpu: 100m
              memory: 150Mi
          securityContext:
            capabilities:
              add:
              - DAC_OVERRIDE
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: C:\ProgramData\docker\containers
            name: docker-windows-containers
            readOnly: true
          - mountPath: C:\var
            name: docker-windows-kuberenetes-container-logs
          - mountPath: C:\etc\config\settings
            name: settings-vol-config
            readOnly: true
          - mountPath: C:\etc\ama-logs-secret
            name: ama-logs-secret
            readOnly: true
          - mountPath: C:\etc\omsagent-secret
            name: ama-logs-secret
            readOnly: true
          - mountPath: C:\etc\config\adx
            name: ama-logs-adx-secret
            readOnly: true
          - mountPath: C:\etc\kubernetes\host
            name: azure-json-path
            readOnly: true
          - mountPath: C:\etc\IMDS-access-token
            name: imds-token
            readOnly: true
        - args:
          - --secret-namespace=kube-system
          - --secret-name=aad-msi-auth-token
          - --token-server-listening-port=8888
          - --health-server-listening-port=9999
          - --restart-pod-waiting-minutes-on-broken-connection=240
          command:
          - addon-token-adapter-win
          env:
          - name: AZMON_COLLECT_ENV
            value: "false"
          image: mcr.microsoft.com/aks/msi/addon-token-adapter:master.250604.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 9999
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 1
          name: addon-token-adapter-win
          resources:
            limits:
              cpu: 400m
              memory: 400Mi
            requests:
              cpu: 100m
              memory: 100Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsConfig:
          options:
          - name: ndots
            value: "3"
        dnsPolicy: ClusterFirst
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: ama-logs
        serviceAccountName: ama-logs
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - effect: PreferNoSchedule
          operator: Exists
        volumes:
        - hostPath:
            path: C:\var
            type: ""
          name: docker-windows-kuberenetes-container-logs
        - hostPath:
            path: C:\k
            type: ""
          name: azure-json-path
        - hostPath:
            path: C:\ProgramData\docker\containers
            type: DirectoryOrCreate
          name: docker-windows-containers
        - configMap:
            defaultMode: 420
            name: container-azm-ms-agentconfig
            optional: true
          name: settings-vol-config
        - name: ama-logs-secret
          secret:
            defaultMode: 420
            secretName: ama-logs-secret
        - name: ama-logs-adx-secret
          secret:
            defaultMode: 420
            optional: true
            secretName: ama-logs-adx-secret
        - name: imds-token
          secret:
            defaultMode: 420
            secretName: aad-msi-auth-token
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 50%
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-09-03T17:06:18Z"
    generation: 1
    labels:
      app: azure-cns
      app.kubernetes.io/managed-by: Eno
      kubernetes.azure.com/managedby: aks
    name: azure-cns
    namespace: kube-system
    resourceVersion: "1679"
    uid: 72763280-03af-49cc-9477-048b9d44fa5c
  spec:
    minReadySeconds: 10
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: azure-cns
    template:
      metadata:
        annotations:
          cluster-autoscaler.kubernetes.io/daemonset-pod: "true"
          kubernetes.azure.com/azure-cns-configmap-checksum: cd814b4ab38a0543dfe5b6c7d821775d7eb499823b3050b8da7a78b516c0b6ad
          prometheus.io/port: "10092"
        creationTimestamp: null
        labels:
          app.kubernetes.io/managed-by: Eno
          k8s-app: azure-cns
          kubernetes.azure.com/managedby: aks
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
        containers:
        - args:
          - -c
          - tcp://$(CNSIpAddress):$(CNSPort)
          - -t
          - $(CNSLogTarget)
          - -o
          - $(CNSLogDir)
          env:
          - name: CNSIpAddress
            value: 127.0.0.1
          - name: CNSPort
            value: "10090"
          - name: CNSLogTarget
            value: stdoutfile
          - name: CNSLogDir
            value: /var/log
          - name: CNS_CONFIGURATION_PATH
            value: /etc/azure-cns/cns_config.json
          - name: NODENAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_CIDRs
            value: 10.244.0.0/16
          - name: SERVICE_CIDRs
            value: 10.0.0.0/16
          - name: INFRA_VNET_CIDRs
            value: 10.224.0.0/12
          image: mcr.microsoft.com/containernetworking/azure-cns:v1.6.32
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: metrics
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: cns-container
          ports:
          - containerPort: 10090
            name: api
            protocol: TCP
          - containerPort: 10092
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 1
            httpGet:
              path: /readyz
              port: metrics
              scheme: HTTP
            periodSeconds: 1
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 40m
              memory: 250Mi
            requests:
              cpu: 40m
              memory: 250Mi
          startupProbe:
            failureThreshold: 30
            httpGet:
              path: /healthz
              port: metrics
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/log
            name: log
          - mountPath: /var/lib/azure-network
            name: cns-state
          - mountPath: /etc/azure-cns
            name: cns-config
          - mountPath: /opt/cni/bin
            name: cni-bin
          - mountPath: /var/run/azure-vnet
            name: azure-vnet
          - mountPath: /var/lock/azure-vnet
            name: cni-lock
          - mountPath: /var/run/azure-vnet.json
            name: legacy-cni-state
          - mountPath: /etc/cni/net.d
            name: cni-conflist
        dnsPolicy: ClusterFirst
        hostNetwork: true
        initContainers:
        - args:
          - deploy
          - --skip-verify
          - azure-vnet
          - -o
          - /opt/cni/bin/azure-vnet
          - azure-vnet-telemetry
          - -o
          - /opt/cni/bin/azure-vnet-telemetry
          command:
          - /dropgz
          image: mcr.microsoft.com/containernetworking/azure-cni:v1.6.32
          imagePullPolicy: IfNotPresent
          name: cni-installer
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /opt/cni/bin
            name: cni-bin
          - mountPath: /etc/cni/net.d
            name: cni-conflist
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: azure-cns
        serviceAccountName: azure-cns
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        volumes:
        - hostPath:
            path: /var/log/azure-cns
            type: DirectoryOrCreate
          name: log
        - hostPath:
            path: /var/lib/azure-network
            type: DirectoryOrCreate
          name: cns-state
        - hostPath:
            path: /opt/cni/bin
            type: Directory
          name: cni-bin
        - hostPath:
            path: /var/run/azure-vnet
            type: DirectoryOrCreate
          name: azure-vnet
        - hostPath:
            path: /var/lock/azure-vnet
            type: DirectoryOrCreate
          name: cni-lock
        - hostPath:
            path: /var/run/azure-vnet.json
            type: FileOrCreate
          name: legacy-cni-state
        - hostPath:
            path: /etc/cni/net.d
            type: Directory
          name: cni-conflist
        - configMap:
            defaultMode: 420
            name: cns-config
          name: cns-config
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 2%
      type: RollingUpdate
  status:
    currentNumberScheduled: 2
    desiredNumberScheduled: 2
    numberAvailable: 2
    numberMisscheduled: 0
    numberReady: 2
    observedGeneration: 1
    updatedNumberScheduled: 2
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-09-03T17:06:18Z"
    generation: 1
    labels:
      app: azure-cns-win
      app.kubernetes.io/managed-by: Eno
      kubernetes.azure.com/managedby: aks
    name: azure-cns-win
    namespace: kube-system
    resourceVersion: "438"
    uid: 5d369ed4-fa75-4cd7-932a-3f07a124f665
  spec:
    minReadySeconds: 10
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: azure-cns-win
    template:
      metadata:
        annotations:
          cluster-autoscaler.kubernetes.io/daemonset-pod: "true"
          kubernetes.azure.com/azure-cns-configmap-checksum: 7209f5e93924c4c84b7b462fea83e95da079cd237570b05246b1fcbab7031750
          prometheus.io/port: "10092"
        creationTimestamp: null
        labels:
          app.kubernetes.io/managed-by: Eno
          k8s-app: azure-cns-win
          kubernetes.azure.com/managedby: aks
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - windows
        containers:
        - args:
          - .\azure-cns.exe
          - -c
          - tcp://$(CNSIpAddress):$(CNSPort)
          - -t
          - $(CNSLogTarget)
          - -o
          - $(CNSLogDir)
          - -storefilepath
          - $(CNSStoreFilePath)
          - -config-path
          - '%CONTAINER_SANDBOX_MOUNT_POINT%\$(CNS_CONFIGURATION_PATH)'
          command:
          - powershell.exe
          env:
          - name: PATH
            value: '%CONTAINER_SANDBOX_MOUNT_POINT%\Windows\System32\WindowsPowershell\v1.0\'
          - name: CNSIpAddress
            value: 127.0.0.1
          - name: CNSPort
            value: "10090"
          - name: CNSLogTarget
            value: stdoutfile
          - name: CNSLogDir
            value: /k/azurecns
          - name: CNSStoreFilePath
            value: /k/azurecns/
          - name: CNS_CONFIGURATION_PATH
            value: /etc/azure-cns/cns_config.json
          - name: NODENAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_CIDRs
            value: 10.244.0.0/16
          - name: SERVICE_CIDRs
            value: 10.0.0.0/16
          - name: INFRA_VNET_CIDRs
            value: 10.224.0.0/12
          image: mcr.microsoft.com/containernetworking/azure-cns:v1.6.32
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: metrics
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: cns-container
          ports:
          - containerPort: 10090
            name: api
            protocol: TCP
          - containerPort: 10092
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 1
            httpGet:
              path: /readyz
              port: metrics
              scheme: HTTP
            periodSeconds: 1
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 250m
              memory: 250Mi
          securityContext:
            privileged: true
          startupProbe:
            failureThreshold: 30
            httpGet:
              path: /healthz
              port: metrics
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /k/azurecns
            name: log
          - mountPath: /etc/azure-cns
            name: cns-config
          - mountPath: /var/run/azure-vnet
            name: azure-vnet
          workingDir: $env:CONTAINER_SANDBOX_MOUNT_POINT
        dnsPolicy: ClusterFirst
        hostNetwork: true
        initContainers:
        - args:
          - '%CONTAINER_SANDBOX_MOUNT_POINT%/dropgz'
          - deploy
          - --skip-verify
          - azure-vnet-stateless
          - -o
          - /k/azurecni/bin/azure-vnet.exe
          command:
          - powershell.exe
          env:
          - name: PATHEXT
            value: .EXE;;
          image: mcr.microsoft.com/containernetworking/azure-cni:v1.6.32
          imagePullPolicy: IfNotPresent
          name: cni-installer
          resources: {}
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /k/azurecni/bin/
            name: cni-bin
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          windowsOptions:
            hostProcess: true
            runAsUserName: NT AUTHORITY\SYSTEM
        serviceAccount: azure-cns
        serviceAccountName: azure-cns
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        volumes:
        - hostPath:
            path: /k/azurecns
            type: DirectoryOrCreate
          name: log
        - configMap:
            defaultMode: 420
            name: cns-win-config
          name: cns-config
        - hostPath:
            path: /var/run/azure-vnet
            type: DirectoryOrCreate
          name: azure-vnet
        - hostPath:
            path: /k/azurecni/bin
            type: DirectoryOrCreate
          name: cni-bin
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 2%
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-09-03T17:06:17Z"
    generation: 1
    labels:
      app.kubernetes.io/managed-by: Eno
      component: azure-ip-masq-agent
      kubernetes.azure.com/managedby: aks
      tier: node
    name: azure-ip-masq-agent
    namespace: kube-system
    resourceVersion: "2067"
    uid: f511df7c-292d-4d0c-8928-8870a7858a41
  spec:
    minReadySeconds: 60
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: azure-ip-masq-agent
        tier: node
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/managed-by: Eno
          k8s-app: azure-ip-masq-agent
          kubernetes.azure.com/managedby: aks
          tier: node
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
        automountServiceAccountToken: false
        containers:
        - args:
          - --v=2
          - --resync-interval=60
          image: mcr.microsoft.com/oss/v2/azure/ip-masq-agent-v2:v0.1.15-2
          imagePullPolicy: IfNotPresent
          name: azure-ip-masq-agent
          resources:
            limits:
              cpu: 500m
              memory: 250Mi
            requests:
              cpu: 100m
              memory: 50Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/config
            name: azure-ip-masq-agent-config-volume
          - mountPath: /run/xtables.lock
            name: iptableslock
        dnsPolicy: ClusterFirst
        hostNetwork: true
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        volumes:
        - name: azure-ip-masq-agent-config-volume
          projected:
            defaultMode: 420
            sources:
            - configMap:
                items:
                - key: ip-masq-agent
                  mode: 444
                  path: ip-masq-agent
                name: azure-ip-masq-agent-config
                optional: true
            - configMap:
                items:
                - key: ip-masq-agent-reconciled
                  mode: 444
                  path: ip-masq-agent-reconciled
                name: azure-ip-masq-agent-config-reconciled
                optional: true
        - hostPath:
            path: /run/xtables.lock
            type: FileOrCreate
          name: iptableslock
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 25%
      type: RollingUpdate
  status:
    currentNumberScheduled: 2
    desiredNumberScheduled: 2
    numberAvailable: 2
    numberMisscheduled: 0
    numberReady: 2
    observedGeneration: 1
    updatedNumberScheduled: 2
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"DaemonSet","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","k8s-app":"cloud-node-manager","kubernetes.azure.com/managedby":"aks","kubernetes.io/cluster-service":"true"},"name":"cloud-node-manager","namespace":"kube-system"},"spec":{"selector":{"matchLabels":{"k8s-app":"cloud-node-manager"}},"template":{"metadata":{"annotations":{"cluster-autoscaler.kubernetes.io/daemonset-pod":"true"},"labels":{"k8s-app":"cloud-node-manager","kubernetes.azure.com/managedby":"aks"}},"spec":{"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchExpressions":[{"key":"kubernetes.azure.com/cluster","operator":"Exists"},{"key":"type","operator":"NotIn","values":["virtual-kubelet"]},{"key":"kubernetes.io/os","operator":"In","values":["linux"]}]}]}}},"containers":[{"command":["cloud-node-manager","--node-name=$(NODE_NAME)","--enable-deprecated-beta-topology-labels=true"],"env":[{"name":"NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}}],"image":"mcr.microsoft.com/oss/kubernetes/azure-cloud-node-manager:v1.32.5","imagePullPolicy":"IfNotPresent","name":"cloud-node-manager","resources":{"limits":{"memory":"512Mi"},"requests":{"cpu":"50m","memory":"50Mi"}},"securityContext":{"capabilities":{"drop":["ALL"]}}}],"hostNetwork":true,"priorityClassName":"system-node-critical","securityContext":{"seccompProfile":{"type":"RuntimeDefault"}},"serviceAccountName":"cloud-node-manager","tolerations":[{"key":"CriticalAddonsOnly","operator":"Exists"},{"effect":"NoSchedule","key":"node-role.kubernetes.io/master","operator":"Equal","value":"true"},{"effect":"NoExecute","operator":"Exists"},{"effect":"NoSchedule","operator":"Exists"}]}}}}
    creationTimestamp: "2025-09-03T17:07:05Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: cloud-node-manager
      kubernetes.azure.com/managedby: aks
      kubernetes.io/cluster-service: "true"
    name: cloud-node-manager
    namespace: kube-system
    resourceVersion: "1339"
    uid: 80fd53d4-275a-424b-a862-6edadcd085f5
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: cloud-node-manager
    template:
      metadata:
        annotations:
          cluster-autoscaler.kubernetes.io/daemonset-pod: "true"
        creationTimestamp: null
        labels:
          k8s-app: cloud-node-manager
          kubernetes.azure.com/managedby: aks
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
        containers:
        - command:
          - cloud-node-manager
          - --node-name=$(NODE_NAME)
          - --enable-deprecated-beta-topology-labels=true
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: mcr.microsoft.com/oss/kubernetes/azure-cloud-node-manager:v1.32.5
          imagePullPolicy: IfNotPresent
          name: cloud-node-manager
          resources:
            limits:
              memory: 512Mi
            requests:
              cpu: 50m
              memory: 50Mi
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        hostNetwork: true
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: cloud-node-manager
        serviceAccountName: cloud-node-manager
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Equal
          value: "true"
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 2
    desiredNumberScheduled: 2
    numberAvailable: 2
    numberMisscheduled: 0
    numberReady: 2
    observedGeneration: 1
    updatedNumberScheduled: 2
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"DaemonSet","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","k8s-app":"cloud-node-manager","kubernetes.azure.com/managedby":"aks","kubernetes.io/cluster-service":"true"},"name":"cloud-node-manager-windows","namespace":"kube-system"},"spec":{"selector":{"matchLabels":{"k8s-app":"cloud-node-manager-windows"}},"template":{"metadata":{"annotations":{"cluster-autoscaler.kubernetes.io/daemonset-pod":"true"},"labels":{"k8s-app":"cloud-node-manager-windows","kubernetes.azure.com/managedby":"aks"}},"spec":{"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchExpressions":[{"key":"kubernetes.azure.com/cluster","operator":"Exists"},{"key":"type","operator":"NotIn","values":["virtual-kubelet"]},{"key":"kubernetes.io/os","operator":"In","values":["windows"]}]}]}}},"containers":[{"command":["c:\\hpc\\cloud-node-manager.exe","--node-name=$(NODE_NAME)"],"env":[{"name":"NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}}],"image":"mcr.microsoft.com/oss/kubernetes/azure-cloud-node-manager:v1.32.5-windows-hpc","imagePullPolicy":"IfNotPresent","name":"cloud-node-manager","resources":{"limits":{"memory":"512Mi"},"requests":{"cpu":"50m","memory":"50Mi"}}}],"hostNetwork":true,"priorityClassName":"system-node-critical","securityContext":{"windowsOptions":{"hostProcess":true,"runAsUserName":"NT AUTHORITY\\SYSTEM"}},"serviceAccountName":"cloud-node-manager","tolerations":[{"key":"CriticalAddonsOnly","operator":"Exists"},{"effect":"NoSchedule","key":"node-role.kubernetes.io/master","operator":"Equal","value":"true"},{"effect":"NoExecute","operator":"Exists"},{"effect":"NoSchedule","operator":"Exists"}]}}}}
    creationTimestamp: "2025-09-03T17:07:05Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: cloud-node-manager
      kubernetes.azure.com/managedby: aks
      kubernetes.io/cluster-service: "true"
    name: cloud-node-manager-windows
    namespace: kube-system
    resourceVersion: "546"
    uid: ffab1881-59fe-453f-8221-ecb5a7f82421
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: cloud-node-manager-windows
    template:
      metadata:
        annotations:
          cluster-autoscaler.kubernetes.io/daemonset-pod: "true"
        creationTimestamp: null
        labels:
          k8s-app: cloud-node-manager-windows
          kubernetes.azure.com/managedby: aks
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - windows
        containers:
        - command:
          - c:\hpc\cloud-node-manager.exe
          - --node-name=$(NODE_NAME)
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: mcr.microsoft.com/oss/kubernetes/azure-cloud-node-manager:v1.32.5-windows-hpc
          imagePullPolicy: IfNotPresent
          name: cloud-node-manager
          resources:
            limits:
              memory: 512Mi
            requests:
              cpu: 50m
              memory: 50Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        hostNetwork: true
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          windowsOptions:
            hostProcess: true
            runAsUserName: NT AUTHORITY\SYSTEM
        serviceAccount: cloud-node-manager
        serviceAccountName: cloud-node-manager
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Equal
          value: "true"
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"DaemonSet","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","kubernetes.azure.com/managedby":"aks","kubernetes.io/cluster-service":"true"},"name":"csi-azuredisk-node","namespace":"kube-system"},"spec":{"selector":{"matchLabels":{"app":"csi-azuredisk-node"}},"template":{"metadata":{"labels":{"app":"csi-azuredisk-node","kubernetes.azure.com/managedby":"aks"}},"spec":{"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchExpressions":[{"key":"kubernetes.azure.com/cluster","operator":"Exists"},{"key":"type","operator":"NotIn","values":["virtual-kubelet"]},{"key":"kubernetes.io/os","operator":"In","values":["linux"]}]}]}}},"containers":[{"args":["--csi-address=/csi/csi.sock","--probe-timeout=10s","--health-port=29603","--v=2"],"image":"mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.15.0","imagePullPolicy":"IfNotPresent","name":"liveness-probe","resources":{"limits":{"memory":"100Mi"},"requests":{"cpu":"10m","memory":"20Mi"}},"securityContext":{"capabilities":{"drop":["ALL"]}},"volumeMounts":[{"mountPath":"/csi","name":"socket-dir"}]},{"args":["--csi-address=$(ADDRESS)","--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)","--v=2"],"env":[{"name":"ADDRESS","value":"/csi/csi.sock"},{"name":"DRIVER_REG_SOCK_PATH","value":"/var/lib/kubelet/plugins/disk.csi.azure.com/csi.sock"}],"image":"mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.13.0","imagePullPolicy":"IfNotPresent","name":"node-driver-registrar","resources":{"limits":{"memory":"100Mi"},"requests":{"cpu":"10m","memory":"20Mi"}},"securityContext":{"capabilities":{"drop":["ALL"]}},"volumeMounts":[{"mountPath":"/csi","name":"socket-dir"},{"mountPath":"/registration","name":"registration-dir"}]},{"args":["--v=5","--endpoint=$(CSI_ENDPOINT)","--nodeid=$(KUBE_NODE_NAME)","--enable-perf-optimization=true"],"env":[{"name":"AZURE_CREDENTIAL_FILE","value":"/etc/kubernetes/azure.json"},{"name":"CSI_ENDPOINT","value":"unix:///csi/csi.sock"},{"name":"KUBE_NODE_NAME","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"spec.nodeName"}}}],"image":"mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.32.9","imagePullPolicy":"IfNotPresent","livenessProbe":{"failureThreshold":5,"httpGet":{"path":"/healthz","port":"healthz"},"initialDelaySeconds":30,"periodSeconds":30,"timeoutSeconds":30},"name":"azuredisk","ports":[{"containerPort":29603,"name":"healthz","protocol":"TCP"}],"resources":{"limits":{"memory":"5600Mi"},"requests":{"cpu":"10m","memory":"20Mi"}},"securityContext":{"capabilities":{"drop":["ALL"]},"privileged":true},"volumeMounts":[{"mountPath":"/csi","name":"socket-dir"},{"mountPath":"/var/lib/kubelet/","mountPropagation":"Bidirectional","name":"mountpoint-dir"},{"mountPath":"/etc/kubernetes/","name":"azure-cred"},{"mountPath":"/dev","name":"device-dir"},{"mountPath":"/sys/bus/scsi/devices","name":"sys-devices-dir"},{"mountPath":"/sys/class/scsi_host/","name":"scsi-host-dir"}]}],"dnsPolicy":"Default","hostNetwork":true,"priorityClassName":"system-node-critical","securityContext":{"seccompProfile":{"type":"RuntimeDefault"}},"serviceAccountName":"csi-azuredisk-node-sa","tolerations":[{"key":"CriticalAddonsOnly","operator":"Exists"},{"effect":"NoExecute","operator":"Exists"},{"effect":"NoSchedule","operator":"Exists"}],"volumes":[{"hostPath":{"path":"/var/lib/kubelet/plugins/disk.csi.azure.com","type":"DirectoryOrCreate"},"name":"socket-dir"},{"hostPath":{"path":"/var/lib/kubelet/","type":"DirectoryOrCreate"},"name":"mountpoint-dir"},{"hostPath":{"path":"/var/lib/kubelet/plugins_registry/","type":"DirectoryOrCreate"},"name":"registration-dir"},{"hostPath":{"path":"/etc/kubernetes/","type":"DirectoryOrCreate"},"name":"azure-cred"},{"hostPath":{"path":"/dev","type":"Directory"},"name":"device-dir"},{"hostPath":{"path":"/sys/bus/scsi/devices","type":"Directory"},"name":"sys-devices-dir"},{"hostPath":{"path":"/sys/class/scsi_host/","type":"Directory"},"name":"scsi-host-dir"}]}}}}
    creationTimestamp: "2025-09-03T17:07:06Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      kubernetes.azure.com/managedby: aks
      kubernetes.io/cluster-service: "true"
    name: csi-azuredisk-node
    namespace: kube-system
    resourceVersion: "1378"
    uid: f43f1776-1717-48b2-ac37-225711f7447f
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: csi-azuredisk-node
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: csi-azuredisk-node
          kubernetes.azure.com/managedby: aks
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
        containers:
        - args:
          - --csi-address=/csi/csi.sock
          - --probe-timeout=10s
          - --health-port=29603
          - --v=2
          image: mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.15.0
          imagePullPolicy: IfNotPresent
          name: liveness-probe
          resources:
            limits:
              memory: 100Mi
            requests:
              cpu: 10m
              memory: 20Mi
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /csi
            name: socket-dir
        - args:
          - --csi-address=$(ADDRESS)
          - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
          - --v=2
          env:
          - name: ADDRESS
            value: /csi/csi.sock
          - name: DRIVER_REG_SOCK_PATH
            value: /var/lib/kubelet/plugins/disk.csi.azure.com/csi.sock
          image: mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.13.0
          imagePullPolicy: IfNotPresent
          name: node-driver-registrar
          resources:
            limits:
              memory: 100Mi
            requests:
              cpu: 10m
              memory: 20Mi
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /csi
            name: socket-dir
          - mountPath: /registration
            name: registration-dir
        - args:
          - --v=5
          - --endpoint=$(CSI_ENDPOINT)
          - --nodeid=$(KUBE_NODE_NAME)
          - --enable-perf-optimization=true
          env:
          - name: AZURE_CREDENTIAL_FILE
            value: /etc/kubernetes/azure.json
          - name: CSI_ENDPOINT
            value: unix:///csi/csi.sock
          - name: KUBE_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.32.9
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthz
              port: healthz
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 30
          name: azuredisk
          ports:
          - containerPort: 29603
            name: healthz
            protocol: TCP
          resources:
            limits:
              memory: 5600Mi
            requests:
              cpu: 10m
              memory: 20Mi
          securityContext:
            capabilities:
              drop:
              - ALL
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /csi
            name: socket-dir
          - mountPath: /var/lib/kubelet/
            mountPropagation: Bidirectional
            name: mountpoint-dir
          - mountPath: /etc/kubernetes/
            name: azure-cred
          - mountPath: /dev
            name: device-dir
          - mountPath: /sys/bus/scsi/devices
            name: sys-devices-dir
          - mountPath: /sys/class/scsi_host/
            name: scsi-host-dir
        dnsPolicy: Default
        hostNetwork: true
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: csi-azuredisk-node-sa
        serviceAccountName: csi-azuredisk-node-sa
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        volumes:
        - hostPath:
            path: /var/lib/kubelet/plugins/disk.csi.azure.com
            type: DirectoryOrCreate
          name: socket-dir
        - hostPath:
            path: /var/lib/kubelet/
            type: DirectoryOrCreate
          name: mountpoint-dir
        - hostPath:
            path: /var/lib/kubelet/plugins_registry/
            type: DirectoryOrCreate
          name: registration-dir
        - hostPath:
            path: /etc/kubernetes/
            type: DirectoryOrCreate
          name: azure-cred
        - hostPath:
            path: /dev
            type: Directory
          name: device-dir
        - hostPath:
            path: /sys/bus/scsi/devices
            type: Directory
          name: sys-devices-dir
        - hostPath:
            path: /sys/class/scsi_host/
            type: Directory
          name: scsi-host-dir
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 2
    desiredNumberScheduled: 2
    numberAvailable: 2
    numberMisscheduled: 0
    numberReady: 2
    observedGeneration: 1
    updatedNumberScheduled: 2
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"DaemonSet","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","kubernetes.azure.com/managedby":"aks","kubernetes.io/cluster-service":"true"},"name":"csi-azuredisk-node-win","namespace":"kube-system"},"spec":{"selector":{"matchLabels":{"app":"csi-azuredisk-node-win"}},"template":{"metadata":{"labels":{"app":"csi-azuredisk-node-win","kubernetes.azure.com/managedby":"aks"}},"spec":{"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchExpressions":[{"key":"kubernetes.azure.com/cluster","operator":"Exists"},{"key":"type","operator":"NotIn","values":["virtual-kubelet"]},{"key":"kubernetes.io/os","operator":"In","values":["windows"]}]}]}}},"containers":[{"args":["--v=2","--csi-address=$(CSI_ENDPOINT)","--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)","--plugin-registration-path=$(PLUGIN_REG_DIR)"],"command":["csi-node-driver-registrar.exe"],"env":[{"name":"CSI_ENDPOINT","value":"unix://C:\\\\var\\\\lib\\\\kubelet\\\\plugins\\\\disk.csi.azure.com\\\\csi.sock"},{"name":"DRIVER_REG_SOCK_PATH","value":"C:\\\\var\\\\lib\\\\kubelet\\\\plugins\\\\disk.csi.azure.com\\\\csi.sock"},{"name":"PLUGIN_REG_DIR","value":"C:\\\\var\\\\lib\\\\kubelet\\\\plugins_registry\\\\"},{"name":"KUBE_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}}],"image":"mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.13.0","imagePullPolicy":"IfNotPresent","name":"node-driver-registrar","resources":{"limits":{"memory":"150Mi"},"requests":{"cpu":"40m","memory":"40Mi"}},"securityContext":{"capabilities":{"drop":["ALL"]}}},{"args":["--v=5","--endpoint=$(CSI_ENDPOINT)","--nodeid=$(KUBE_NODE_NAME)","--enable-windows-host-process=true"],"command":["azurediskplugin.exe"],"env":[{"name":"AZURE_CREDENTIAL_FILE","value":"C:\\k\\azure.json"},{"name":"CSI_ENDPOINT","value":"unix://C:\\\\var\\\\lib\\\\kubelet\\\\plugins\\\\disk.csi.azure.com\\\\csi.sock"},{"name":"KUBE_NODE_NAME","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"spec.nodeName"}}}],"image":"mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.32.9-windows-hp","imagePullPolicy":"IfNotPresent","name":"azuredisk","securityContext":{"capabilities":{"drop":["ALL"]}}}],"hostNetwork":true,"initContainers":[{"command":["powershell.exe","-c","New-Item -ItemType Directory -Path C:\\var\\lib\\kubelet\\plugins\\disk.csi.azure.com\\ -Force"],"image":"mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.32.9-windows-hp","imagePullPolicy":"IfNotPresent","name":"init","securityContext":{"capabilities":{"drop":["ALL"]}}}],"priorityClassName":"system-node-critical","securityContext":{"seccompProfile":{"type":"RuntimeDefault"},"windowsOptions":{"hostProcess":true,"runAsUserName":"NT AUTHORITY\\SYSTEM"}},"serviceAccountName":"csi-azuredisk-node-sa","tolerations":[{"key":"CriticalAddonsOnly","operator":"Exists"},{"effect":"NoExecute","operator":"Exists"},{"effect":"NoSchedule","operator":"Exists"}]}}}}
    creationTimestamp: "2025-09-03T17:07:06Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      kubernetes.azure.com/managedby: aks
      kubernetes.io/cluster-service: "true"
    name: csi-azuredisk-node-win
    namespace: kube-system
    resourceVersion: "607"
    uid: c1f1830d-df7c-47b4-80c4-099e21f606d1
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: csi-azuredisk-node-win
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: csi-azuredisk-node-win
          kubernetes.azure.com/managedby: aks
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - windows
        containers:
        - args:
          - --v=2
          - --csi-address=$(CSI_ENDPOINT)
          - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
          - --plugin-registration-path=$(PLUGIN_REG_DIR)
          command:
          - csi-node-driver-registrar.exe
          env:
          - name: CSI_ENDPOINT
            value: unix://C:\\var\\lib\\kubelet\\plugins\\disk.csi.azure.com\\csi.sock
          - name: DRIVER_REG_SOCK_PATH
            value: C:\\var\\lib\\kubelet\\plugins\\disk.csi.azure.com\\csi.sock
          - name: PLUGIN_REG_DIR
            value: C:\\var\\lib\\kubelet\\plugins_registry\\
          - name: KUBE_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.13.0
          imagePullPolicy: IfNotPresent
          name: node-driver-registrar
          resources:
            limits:
              memory: 150Mi
            requests:
              cpu: 40m
              memory: 40Mi
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - args:
          - --v=5
          - --endpoint=$(CSI_ENDPOINT)
          - --nodeid=$(KUBE_NODE_NAME)
          - --enable-windows-host-process=true
          command:
          - azurediskplugin.exe
          env:
          - name: AZURE_CREDENTIAL_FILE
            value: C:\k\azure.json
          - name: CSI_ENDPOINT
            value: unix://C:\\var\\lib\\kubelet\\plugins\\disk.csi.azure.com\\csi.sock
          - name: KUBE_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.32.9-windows-hp
          imagePullPolicy: IfNotPresent
          name: azuredisk
          resources: {}
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        hostNetwork: true
        initContainers:
        - command:
          - powershell.exe
          - -c
          - New-Item -ItemType Directory -Path C:\var\lib\kubelet\plugins\disk.csi.azure.com\
            -Force
          image: mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.32.9-windows-hp
          imagePullPolicy: IfNotPresent
          name: init
          resources: {}
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
          windowsOptions:
            hostProcess: true
            runAsUserName: NT AUTHORITY\SYSTEM
        serviceAccount: csi-azuredisk-node-sa
        serviceAccountName: csi-azuredisk-node-sa
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"DaemonSet","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","kubernetes.azure.com/managedby":"aks","kubernetes.io/cluster-service":"true"},"name":"csi-azurefile-node","namespace":"kube-system"},"spec":{"selector":{"matchLabels":{"app":"csi-azurefile-node"}},"template":{"metadata":{"labels":{"app":"csi-azurefile-node","kubernetes.azure.com/managedby":"aks"}},"spec":{"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchExpressions":[{"key":"kubernetes.azure.com/cluster","operator":"Exists"},{"key":"type","operator":"NotIn","values":["virtual-kubelet"]},{"key":"kubernetes.io/os","operator":"In","values":["linux"]}]}]}}},"containers":[{"args":["--csi-address=/csi/csi.sock","--probe-timeout=10s","--health-port=29613","--v=2"],"image":"mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.15.0","imagePullPolicy":"IfNotPresent","name":"liveness-probe","resources":{"limits":{"memory":"100Mi"},"requests":{"cpu":"10m","memory":"20Mi"}},"securityContext":{"capabilities":{"drop":["ALL"]}},"volumeMounts":[{"mountPath":"/csi","name":"socket-dir"}]},{"args":["--csi-address=$(ADDRESS)","--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)","--v=2"],"env":[{"name":"ADDRESS","value":"/csi/csi.sock"},{"name":"DRIVER_REG_SOCK_PATH","value":"/var/lib/kubelet/plugins/file.csi.azure.com/csi.sock"}],"image":"mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.13.0","imagePullPolicy":"IfNotPresent","name":"node-driver-registrar","resources":{"limits":{"memory":"100Mi"},"requests":{"cpu":"10m","memory":"20Mi"}},"securityContext":{"capabilities":{"drop":["ALL"]}},"volumeMounts":[{"mountPath":"/csi","name":"socket-dir"},{"mountPath":"/registration","name":"registration-dir"}]},{"args":["--v=5","--endpoint=$(CSI_ENDPOINT)","--nodeid=$(KUBE_NODE_NAME)","--enable-get-volume-stats=true","--mount-permissions=0777","--metrics-address=0.0.0.0:29615","--enable-kata-cc-mount=true"],"env":[{"name":"AZURE_CREDENTIAL_FILE","value":"/etc/kubernetes/azure.json"},{"name":"CSI_ENDPOINT","value":"unix:///csi/csi.sock"},{"name":"KUBE_NODE_NAME","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"spec.nodeName"}}}],"image":"mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.32.5","imagePullPolicy":"IfNotPresent","livenessProbe":{"failureThreshold":5,"httpGet":{"path":"/healthz","port":"healthz"},"initialDelaySeconds":30,"periodSeconds":30,"timeoutSeconds":30},"name":"azurefile","ports":[{"containerPort":29613,"name":"healthz","protocol":"TCP"},{"containerPort":29615,"name":"metrics","protocol":"TCP"}],"resources":{"limits":{"memory":"400Mi"},"requests":{"cpu":"10m","memory":"20Mi"}},"securityContext":{"capabilities":{"drop":["ALL"]},"privileged":true},"volumeMounts":[{"mountPath":"/csi","name":"socket-dir"},{"mountPath":"/var/lib/kubelet/","mountPropagation":"Bidirectional","name":"mountpoint-dir"},{"mountPath":"/etc/kubernetes/","name":"azure-cred"},{"mountPath":"/dev","name":"device-dir"},{"mountPath":"/run/kata-containers/shared/direct-volumes","name":"kata-direct-volumes"}]}],"dnsPolicy":"Default","hostNetwork":true,"priorityClassName":"system-node-critical","securityContext":{"seccompProfile":{"type":"RuntimeDefault"}},"serviceAccountName":"csi-azurefile-node-sa","tolerations":[{"key":"CriticalAddonsOnly","operator":"Exists"},{"effect":"NoExecute","operator":"Exists"},{"effect":"NoSchedule","operator":"Exists"}],"volumes":[{"hostPath":{"path":"/var/lib/kubelet/plugins/file.csi.azure.com","type":"DirectoryOrCreate"},"name":"socket-dir"},{"hostPath":{"path":"/var/lib/kubelet/","type":"DirectoryOrCreate"},"name":"mountpoint-dir"},{"hostPath":{"path":"/var/lib/kubelet/plugins_registry/","type":"DirectoryOrCreate"},"name":"registration-dir"},{"hostPath":{"path":"/etc/kubernetes/","type":"DirectoryOrCreate"},"name":"azure-cred"},{"hostPath":{"path":"/dev","type":"Directory"},"name":"device-dir"},{"hostPath":{"path":"/run/kata-containers/shared/direct-volumes/","type":"DirectoryOrCreate"},"name":"kata-direct-volumes"}]}}}}
    creationTimestamp: "2025-09-03T17:07:06Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      kubernetes.azure.com/managedby: aks
      kubernetes.io/cluster-service: "true"
    name: csi-azurefile-node
    namespace: kube-system
    resourceVersion: "1375"
    uid: 2c209e55-7514-48ee-b9a5-d4ec95c3aba1
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: csi-azurefile-node
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: csi-azurefile-node
          kubernetes.azure.com/managedby: aks
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
        containers:
        - args:
          - --csi-address=/csi/csi.sock
          - --probe-timeout=10s
          - --health-port=29613
          - --v=2
          image: mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.15.0
          imagePullPolicy: IfNotPresent
          name: liveness-probe
          resources:
            limits:
              memory: 100Mi
            requests:
              cpu: 10m
              memory: 20Mi
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /csi
            name: socket-dir
        - args:
          - --csi-address=$(ADDRESS)
          - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
          - --v=2
          env:
          - name: ADDRESS
            value: /csi/csi.sock
          - name: DRIVER_REG_SOCK_PATH
            value: /var/lib/kubelet/plugins/file.csi.azure.com/csi.sock
          image: mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.13.0
          imagePullPolicy: IfNotPresent
          name: node-driver-registrar
          resources:
            limits:
              memory: 100Mi
            requests:
              cpu: 10m
              memory: 20Mi
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /csi
            name: socket-dir
          - mountPath: /registration
            name: registration-dir
        - args:
          - --v=5
          - --endpoint=$(CSI_ENDPOINT)
          - --nodeid=$(KUBE_NODE_NAME)
          - --enable-get-volume-stats=true
          - --mount-permissions=0777
          - --metrics-address=0.0.0.0:29615
          - --enable-kata-cc-mount=true
          env:
          - name: AZURE_CREDENTIAL_FILE
            value: /etc/kubernetes/azure.json
          - name: CSI_ENDPOINT
            value: unix:///csi/csi.sock
          - name: KUBE_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.32.5
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthz
              port: healthz
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 30
          name: azurefile
          ports:
          - containerPort: 29613
            name: healthz
            protocol: TCP
          - containerPort: 29615
            name: metrics
            protocol: TCP
          resources:
            limits:
              memory: 400Mi
            requests:
              cpu: 10m
              memory: 20Mi
          securityContext:
            capabilities:
              drop:
              - ALL
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /csi
            name: socket-dir
          - mountPath: /var/lib/kubelet/
            mountPropagation: Bidirectional
            name: mountpoint-dir
          - mountPath: /etc/kubernetes/
            name: azure-cred
          - mountPath: /dev
            name: device-dir
          - mountPath: /run/kata-containers/shared/direct-volumes
            name: kata-direct-volumes
        dnsPolicy: Default
        hostNetwork: true
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: csi-azurefile-node-sa
        serviceAccountName: csi-azurefile-node-sa
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        volumes:
        - hostPath:
            path: /var/lib/kubelet/plugins/file.csi.azure.com
            type: DirectoryOrCreate
          name: socket-dir
        - hostPath:
            path: /var/lib/kubelet/
            type: DirectoryOrCreate
          name: mountpoint-dir
        - hostPath:
            path: /var/lib/kubelet/plugins_registry/
            type: DirectoryOrCreate
          name: registration-dir
        - hostPath:
            path: /etc/kubernetes/
            type: DirectoryOrCreate
          name: azure-cred
        - hostPath:
            path: /dev
            type: Directory
          name: device-dir
        - hostPath:
            path: /run/kata-containers/shared/direct-volumes/
            type: DirectoryOrCreate
          name: kata-direct-volumes
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 2
    desiredNumberScheduled: 2
    numberAvailable: 2
    numberMisscheduled: 0
    numberReady: 2
    observedGeneration: 1
    updatedNumberScheduled: 2
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"DaemonSet","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","kubernetes.azure.com/managedby":"aks","kubernetes.io/cluster-service":"true"},"name":"csi-azurefile-node-win","namespace":"kube-system"},"spec":{"selector":{"matchLabels":{"app":"csi-azurefile-node-win"}},"template":{"metadata":{"labels":{"app":"csi-azurefile-node-win","kubernetes.azure.com/managedby":"aks"}},"spec":{"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchExpressions":[{"key":"kubernetes.azure.com/cluster","operator":"Exists"},{"key":"type","operator":"NotIn","values":["virtual-kubelet"]},{"key":"kubernetes.io/os","operator":"In","values":["windows"]}]}]}}},"containers":[{"args":["--csi-address=$(CSI_ENDPOINT)","--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)","--plugin-registration-path=$(PLUGIN_REG_DIR)","--v=2"],"command":["csi-node-driver-registrar.exe"],"env":[{"name":"CSI_ENDPOINT","value":"unix://C:\\\\var\\\\lib\\\\kubelet\\\\plugins\\\\file.csi.azure.com\\\\csi.sock"},{"name":"DRIVER_REG_SOCK_PATH","value":"C:\\\\var\\\\lib\\\\kubelet\\\\plugins\\\\file.csi.azure.com\\\\csi.sock"},{"name":"PLUGIN_REG_DIR","value":"C:\\\\var\\\\lib\\\\kubelet\\\\plugins_registry\\\\"},{"name":"KUBE_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}}],"image":"mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.13.0","imagePullPolicy":"IfNotPresent","name":"node-driver-registrar","resources":{"limits":{"memory":"150Mi"},"requests":{"cpu":"40m","memory":"40Mi"}},"securityContext":{"capabilities":{"drop":["ALL"]}}},{"args":["--v=5","--endpoint=$(CSI_ENDPOINT)","--nodeid=$(KUBE_NODE_NAME)","--enable-windows-host-process=true"],"command":["azurefileplugin.exe"],"env":[{"name":"AZURE_CREDENTIAL_FILE","value":"C:\\k\\azure.json"},{"name":"CSI_ENDPOINT","value":"unix://C:\\\\var\\\\lib\\\\kubelet\\\\plugins\\\\file.csi.azure.com\\\\csi.sock"},{"name":"KUBE_NODE_NAME","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"spec.nodeName"}}}],"image":"mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.32.5-windows-hp","imagePullPolicy":"IfNotPresent","name":"azurefile","securityContext":{"capabilities":{"drop":["ALL"]}}}],"hostNetwork":true,"initContainers":[{"command":["powershell.exe","-c","New-Item -ItemType Directory -Path C:\\var\\lib\\kubelet\\plugins\\file.csi.azure.com\\ -Force"],"image":"mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.32.5-windows-hp","imagePullPolicy":"IfNotPresent","name":"init","securityContext":{"capabilities":{"drop":["ALL"]}}}],"priorityClassName":"system-node-critical","securityContext":{"seccompProfile":{"type":"RuntimeDefault"},"windowsOptions":{"hostProcess":true,"runAsUserName":"NT AUTHORITY\\SYSTEM"}},"serviceAccountName":"csi-azurefile-node-sa","tolerations":[{"key":"CriticalAddonsOnly","operator":"Exists"},{"effect":"NoExecute","operator":"Exists"},{"effect":"NoSchedule","operator":"Exists"}]}}}}
    creationTimestamp: "2025-09-03T17:07:06Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      kubernetes.azure.com/managedby: aks
      kubernetes.io/cluster-service: "true"
    name: csi-azurefile-node-win
    namespace: kube-system
    resourceVersion: "617"
    uid: b5230d12-48fd-4abe-b097-e7251ab3c4e5
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: csi-azurefile-node-win
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: csi-azurefile-node-win
          kubernetes.azure.com/managedby: aks
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - windows
        containers:
        - args:
          - --csi-address=$(CSI_ENDPOINT)
          - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
          - --plugin-registration-path=$(PLUGIN_REG_DIR)
          - --v=2
          command:
          - csi-node-driver-registrar.exe
          env:
          - name: CSI_ENDPOINT
            value: unix://C:\\var\\lib\\kubelet\\plugins\\file.csi.azure.com\\csi.sock
          - name: DRIVER_REG_SOCK_PATH
            value: C:\\var\\lib\\kubelet\\plugins\\file.csi.azure.com\\csi.sock
          - name: PLUGIN_REG_DIR
            value: C:\\var\\lib\\kubelet\\plugins_registry\\
          - name: KUBE_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.13.0
          imagePullPolicy: IfNotPresent
          name: node-driver-registrar
          resources:
            limits:
              memory: 150Mi
            requests:
              cpu: 40m
              memory: 40Mi
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - args:
          - --v=5
          - --endpoint=$(CSI_ENDPOINT)
          - --nodeid=$(KUBE_NODE_NAME)
          - --enable-windows-host-process=true
          command:
          - azurefileplugin.exe
          env:
          - name: AZURE_CREDENTIAL_FILE
            value: C:\k\azure.json
          - name: CSI_ENDPOINT
            value: unix://C:\\var\\lib\\kubelet\\plugins\\file.csi.azure.com\\csi.sock
          - name: KUBE_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.32.5-windows-hp
          imagePullPolicy: IfNotPresent
          name: azurefile
          resources: {}
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        hostNetwork: true
        initContainers:
        - command:
          - powershell.exe
          - -c
          - New-Item -ItemType Directory -Path C:\var\lib\kubelet\plugins\file.csi.azure.com\
            -Force
          image: mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.32.5-windows-hp
          imagePullPolicy: IfNotPresent
          name: init
          resources: {}
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
          windowsOptions:
            hostProcess: true
            runAsUserName: NT AUTHORITY\SYSTEM
        serviceAccount: csi-azurefile-node-sa
        serviceAccountName: csi-azurefile-node-sa
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"DaemonSet","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","component":"kube-proxy","kubernetes.azure.com/managedby":"aks","tier":"node"},"name":"kube-proxy","namespace":"kube-system"},"spec":{"selector":{"matchLabels":{"component":"kube-proxy","tier":"node"}},"template":{"metadata":{"annotations":null,"labels":{"component":"kube-proxy","kubernetes.azure.com/managedby":"aks","tier":"node"}},"spec":{"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchExpressions":[{"key":"kubernetes.azure.com/cluster","operator":"Exists"},{"key":"type","operator":"NotIn","values":["virtual-kubelet"]},{"key":"kubernetes.io/os","operator":"In","values":["linux"]}]}]}}},"containers":[{"command":["kube-proxy","--conntrack-max-per-core=0","--metrics-bind-address=0.0.0.0:10249","--cluster-cidr=10.244.0.0/16","--detect-local-mode=InterfaceNamePrefix","--pod-interface-name-prefix=azv","--v=3"],"image":"mcr.microsoft.com/oss/kubernetes/kube-proxy:v1.32.6","imagePullPolicy":"IfNotPresent","name":"kube-proxy","resources":{"requests":{"cpu":"100m"}},"securityContext":{"privileged":true},"volumeMounts":[{"mountPath":"/run/xtables.lock","name":"iptableslock"},{"mountPath":"/lib/modules","name":"modules"}]}],"hostNetwork":true,"initContainers":[{"command":["/bin/sh","-c","get_num_cpu() {\n  # format is comma-separated list of CPU IDs or ranges of CPU IDs (examples: \"0-3\", \"0,1,2\", \"0-3,4\")\n  # see https://www.kernel.org/doc/html/latest/admin-guide/cputopology.html\n  sys_cpu_online=$(cat /sys/devices/system/cpu/online)\n  result=0\n  OLD_IFS=\"$IFS\"; IFS=\",\"\n  for rng in \"$sys_cpu_online\"; do\n    if echo \"$rng\" | grep -q -- \"-\"; then\n      min=${rng%-*}; max=${rng#*-}\n      if [ \"$min\" -le \"$max\" ]; then\n        result=$((result + (max - min + 1)))\n      fi\n    else\n      result=$((result + 1))\n    fi\n  done\n  IFS=\"$OLD_IFS\"\n  echo $result\n}\n\nSYSCTL=/proc/sys/net/netfilter/nf_conntrack_max\necho \"Current net.netfilter.nf_conntrack_max: $(cat $SYSCTL)\"\nDESIRED=$(grep -m 1 'net.netfilter.nf_conntrack_max' /etc/sysctl.d/999-sysctl-aks.conf | grep -oP '(?\u003c=net.netfilter.nf_conntrack_max=).*')\nif [ -z \"$DESIRED\" ]; then\n  NUM_CPU=$(get_num_cpu)\n  DESIRED=$((32768*$NUM_CPU))\n  if [ $DESIRED -lt 131072 ]; then\n    DESIRED=131072\n  fi\n\n  echo \"AKS custom config for net.netfilter.nf_conntrack_max not set.\"\n  echo \"Setting nf_conntrack_max to $DESIRED (32768 * $NUM_CPU cores, minimum 131072).\"\n  echo $DESIRED \u003e $SYSCTL\nelse\n  echo \"AKS custom config for net.netfilter.nf_conntrack_max set to $DESIRED.\"\n  echo \"Setting nf_conntrack_max to $DESIRED.\"\n  echo $DESIRED \u003e $SYSCTL\nfi\n"],"image":"mcr.microsoft.com/oss/kubernetes/kube-proxy:v1.32.6","imagePullPolicy":"IfNotPresent","name":"kube-proxy-bootstrap","resources":{"requests":{"cpu":"100m"}},"securityContext":{"privileged":true},"volumeMounts":[{"mountPath":"/etc/sysctl.d","name":"sysctls"},{"mountPath":"/lib/modules","name":"modules"}]}],"priorityClassName":"system-node-critical","serviceAccountName":"kube-proxy","tolerations":[{"key":"CriticalAddonsOnly","operator":"Exists"},{"effect":"NoExecute","operator":"Exists"},{"effect":"NoSchedule","operator":"Exists"}],"volumes":[{"hostPath":{"path":"/run/xtables.lock","type":"FileOrCreate"},"name":"iptableslock"},{"hostPath":{"path":"/etc/sysctl.d","type":"Directory"},"name":"sysctls"},{"hostPath":{"path":"/lib/modules","type":"Directory"},"name":"modules"}]}},"updateStrategy":{"rollingUpdate":{"maxUnavailable":1},"type":"RollingUpdate"}}}
    creationTimestamp: "2025-09-03T17:07:07Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      component: kube-proxy
      kubernetes.azure.com/managedby: aks
      tier: node
    name: kube-proxy
    namespace: kube-system
    resourceVersion: "1372"
    uid: 9344f7ec-483a-489c-89be-9f153bee81bd
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        component: kube-proxy
        tier: node
    template:
      metadata:
        creationTimestamp: null
        labels:
          component: kube-proxy
          kubernetes.azure.com/managedby: aks
          tier: node
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
        containers:
        - command:
          - kube-proxy
          - --conntrack-max-per-core=0
          - --metrics-bind-address=0.0.0.0:10249
          - --cluster-cidr=10.244.0.0/16
          - --detect-local-mode=InterfaceNamePrefix
          - --pod-interface-name-prefix=azv
          - --v=3
          image: mcr.microsoft.com/oss/kubernetes/kube-proxy:v1.32.6
          imagePullPolicy: IfNotPresent
          name: kube-proxy
          resources:
            requests:
              cpu: 100m
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /run/xtables.lock
            name: iptableslock
          - mountPath: /lib/modules
            name: modules
        dnsPolicy: ClusterFirst
        hostNetwork: true
        initContainers:
        - command:
          - /bin/sh
          - -c
          - |
            get_num_cpu() {
              # format is comma-separated list of CPU IDs or ranges of CPU IDs (examples: "0-3", "0,1,2", "0-3,4")
              # see https://www.kernel.org/doc/html/latest/admin-guide/cputopology.html
              sys_cpu_online=$(cat /sys/devices/system/cpu/online)
              result=0
              OLD_IFS="$IFS"; IFS=","
              for rng in "$sys_cpu_online"; do
                if echo "$rng" | grep -q -- "-"; then
                  min=${rng%-*}; max=${rng#*-}
                  if [ "$min" -le "$max" ]; then
                    result=$((result + (max - min + 1)))
                  fi
                else
                  result=$((result + 1))
                fi
              done
              IFS="$OLD_IFS"
              echo $result
            }

            SYSCTL=/proc/sys/net/netfilter/nf_conntrack_max
            echo "Current net.netfilter.nf_conntrack_max: $(cat $SYSCTL)"
            DESIRED=$(grep -m 1 'net.netfilter.nf_conntrack_max' /etc/sysctl.d/999-sysctl-aks.conf | grep -oP '(?<=net.netfilter.nf_conntrack_max=).*')
            if [ -z "$DESIRED" ]; then
              NUM_CPU=$(get_num_cpu)
              DESIRED=$((32768*$NUM_CPU))
              if [ $DESIRED -lt 131072 ]; then
                DESIRED=131072
              fi

              echo "AKS custom config for net.netfilter.nf_conntrack_max not set."
              echo "Setting nf_conntrack_max to $DESIRED (32768 * $NUM_CPU cores, minimum 131072)."
              echo $DESIRED > $SYSCTL
            else
              echo "AKS custom config for net.netfilter.nf_conntrack_max set to $DESIRED."
              echo "Setting nf_conntrack_max to $DESIRED."
              echo $DESIRED > $SYSCTL
            fi
          image: mcr.microsoft.com/oss/kubernetes/kube-proxy:v1.32.6
          imagePullPolicy: IfNotPresent
          name: kube-proxy-bootstrap
          resources:
            requests:
              cpu: 100m
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/sysctl.d
            name: sysctls
          - mountPath: /lib/modules
            name: modules
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: kube-proxy
        serviceAccountName: kube-proxy
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        volumes:
        - hostPath:
            path: /run/xtables.lock
            type: FileOrCreate
          name: iptableslock
        - hostPath:
            path: /etc/sysctl.d
            type: Directory
          name: sysctls
        - hostPath:
            path: /lib/modules
            type: Directory
          name: modules
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 2
    desiredNumberScheduled: 2
    numberAvailable: 2
    numberMisscheduled: 0
    numberReady: 2
    observedGeneration: 1
    updatedNumberScheduled: 2
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"DaemonSet","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","k8s-app":"windows-kube-proxy-initializer","kubernetes.azure.com/managedby":"aks","kubernetes.io/cluster-service":"true"},"name":"windows-kube-proxy-initializer","namespace":"kube-system"},"spec":{"selector":{"matchLabels":{"k8s-app":"windows-kube-proxy-initializer"}},"template":{"metadata":{"annotations":{"cluster-autoscaler.kubernetes.io/daemonset-pod":"true"},"labels":{"k8s-app":"windows-kube-proxy-initializer","kubernetes.azure.com/managedby":"aks"}},"spec":{"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchExpressions":[{"key":"kubernetes.azure.com/cluster","operator":"Exists"},{"key":"type","operator":"NotIn","values":["virtual-kubelet"]},{"key":"kubernetes.io/os","operator":"In","values":["windows"]}]}]}}},"containers":[{"image":"mcr.microsoft.com/oss/kubernetes/pause:3.9-hotfix-20230808","imagePullPolicy":"IfNotPresent","name":"pause"}],"priorityClassName":"system-node-critical","tolerations":[{"key":"CriticalAddonsOnly","operator":"Exists"},{"effect":"NoSchedule","key":"node-role.kubernetes.io/master","operator":"Equal","value":"true"},{"effect":"NoExecute","operator":"Exists"},{"effect":"NoSchedule","operator":"Exists"}]}}}}
    creationTimestamp: "2025-09-03T17:07:08Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: windows-kube-proxy-initializer
      kubernetes.azure.com/managedby: aks
      kubernetes.io/cluster-service: "true"
    name: windows-kube-proxy-initializer
    namespace: kube-system
    resourceVersion: "712"
    uid: 9f26a4d1-30f6-42e9-8d4d-29489fa84903
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: windows-kube-proxy-initializer
    template:
      metadata:
        annotations:
          cluster-autoscaler.kubernetes.io/daemonset-pod: "true"
        creationTimestamp: null
        labels:
          k8s-app: windows-kube-proxy-initializer
          kubernetes.azure.com/managedby: aks
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - windows
        containers:
        - image: mcr.microsoft.com/oss/kubernetes/pause:3.9-hotfix-20230808
          imagePullPolicy: IfNotPresent
          name: pause
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Equal
          value: "true"
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"elasticsearch-azure"},"name":"elasticsearch-azure","namespace":"elasticsearch"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"elasticsearch-azure"}},"template":{"metadata":{"labels":{"app":"elasticsearch-azure"}},"spec":{"containers":[{"env":[{"name":"discovery.type","value":"single-node"},{"name":"xpack.security.enabled","value":"false"},{"name":"ES_JAVA_OPTS","value":"-Xms1g -Xmx1g"}],"image":"docker.elastic.co/elasticsearch/elasticsearch:8.11.0","name":"elasticsearch","ports":[{"containerPort":9200},{"containerPort":9300}],"resources":{"limits":{"cpu":"1000m","memory":"2Gi"},"requests":{"cpu":"500m","memory":"1Gi"}}}]}}}}
    creationTimestamp: "2025-09-03T17:11:08Z"
    generation: 1
    labels:
      app: elasticsearch-azure
    name: elasticsearch-azure
    namespace: elasticsearch
    resourceVersion: "2707"
    uid: 86375fa6-6629-49ff-b2f1-d15e0b8987b7
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: elasticsearch-azure
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: elasticsearch-azure
      spec:
        containers:
        - env:
          - name: discovery.type
            value: single-node
          - name: xpack.security.enabled
            value: "false"
          - name: ES_JAVA_OPTS
            value: -Xms1g -Xmx1g
          image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
          imagePullPolicy: IfNotPresent
          name: elasticsearch
          ports:
          - containerPort: 9200
            protocol: TCP
          - containerPort: 9300
            protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 2Gi
            requests:
              cpu: 500m
              memory: 1Gi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-09-03T17:11:54Z"
      lastUpdateTime: "2025-09-03T17:11:54Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-09-03T17:11:08Z"
      lastUpdateTime: "2025-09-03T17:11:54Z"
      message: ReplicaSet "elasticsearch-azure-6b49cc647f" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"kibana-azure"},"name":"kibana-azure","namespace":"elasticsearch"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"kibana-azure"}},"template":{"metadata":{"labels":{"app":"kibana-azure"}},"spec":{"containers":[{"env":[{"name":"ELASTICSEARCH_HOSTS","value":"http://elasticsearch-azure-service:9200"},{"name":"xpack.security.enabled","value":"false"},{"name":"xpack.fleet.enabled","value":"false"},{"name":"xpack.ingestManager.enabled","value":"false"},{"name":"telemetry.enabled","value":"false"}],"image":"docker.elastic.co/kibana/kibana:8.11.0","name":"kibana","ports":[{"containerPort":5601}],"resources":{"limits":{"cpu":"500m","memory":"1Gi"},"requests":{"cpu":"250m","memory":"512Mi"}}}]}}}}
    creationTimestamp: "2025-09-03T17:11:09Z"
    generation: 1
    labels:
      app: kibana-azure
    name: kibana-azure
    namespace: elasticsearch
    resourceVersion: "2666"
    uid: c78cf92c-101d-4611-8512-b0c62c19aa82
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: kibana-azure
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: kibana-azure
      spec:
        containers:
        - env:
          - name: ELASTICSEARCH_HOSTS
            value: http://elasticsearch-azure-service:9200
          - name: xpack.security.enabled
            value: "false"
          - name: xpack.fleet.enabled
            value: "false"
          - name: xpack.ingestManager.enabled
            value: "false"
          - name: telemetry.enabled
            value: "false"
          image: docker.elastic.co/kibana/kibana:8.11.0
          imagePullPolicy: IfNotPresent
          name: kibana
          ports:
          - containerPort: 5601
            protocol: TCP
          resources:
            limits:
              cpu: 500m
              memory: 1Gi
            requests:
              cpu: 250m
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-09-03T17:11:45Z"
      lastUpdateTime: "2025-09-03T17:11:45Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-09-03T17:11:09Z"
      lastUpdateTime: "2025-09-03T17:11:45Z"
      message: ReplicaSet "kibana-azure-d8cff6d88" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: aks-managed-azure-monitor-logs
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2025-09-03T17:09:14Z"
    generation: 1
    labels:
      app.kubernetes.io/managed-by: Helm
      component: ama-logs-agent
      helm.toolkit.fluxcd.io/name: azure-monitor-logs-adapter-helmrelease
      helm.toolkit.fluxcd.io/namespace: 68b87514049939000198cc21
      kubernetes.azure.com/managedby: aks
      tier: node
    name: ama-logs-rs
    namespace: kube-system
    resourceVersion: "1879"
    uid: 30730270-70a6-48b5-be8c-2a4486da14ed
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 2
    selector:
      matchLabels:
        rsName: ama-logs-rs
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          WSID: ZWRlMzc2MjctNDFhOC00ZjdjLTg1YTAtMzkzNjQ4ODIyM2E5
          agentVersion: azure-mdsd-1.35.7
          cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
          dockerProviderVersion: 18.0.1-0
          kubernetes.azure.com/no-http-proxy-vars: "true"
          schema-versions: v1
        creationTimestamp: null
        labels:
          kubernetes.azure.com/managedby: aks
          rsName: ama-logs-rs
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: kubernetes.azure.com/mode
                  operator: In
                  values:
                  - system
              weight: 100
            - preference:
                matchExpressions:
                - key: storageprofile
                  operator: NotIn
                  values:
                  - managed
              weight: 1
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
        containers:
        - args:
          - --secret-namespace=kube-system
          - --secret-name=aad-msi-auth-token
          - --token-server-listening-port=8888
          - --health-server-listening-port=9999
          - --restart-pod-waiting-minutes-on-broken-connection=240
          command:
          - /addon-token-adapter
          env:
          - name: AZMON_COLLECT_ENV
            value: "false"
          image: mcr.microsoft.com/aks/msi/addon-token-adapter:master.250604.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 9999
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 1
          name: addon-token-adapter
          resources:
            limits:
              cpu: 500m
              memory: 500Mi
            requests:
              cpu: 100m
              memory: 100Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - env:
          - name: NODE_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: AKS_CLUSTER_NAME
            value: elasticsearch-cluster-azure
          - name: AKS_RESOURCE_ID
            value: /subscriptions/f0d02754-d8ca-4e7d-b010-ebac7cd463da/resourceGroups/multi-cloud-elastic-rg/providers/Microsoft.ContainerService/managedClusters/elasticsearch-cluster-azure
          - name: AKS_NODE_RESOURCE_GROUP
            value: MC_multi-cloud-elastic-rg_elasticsearch-cluster-azure_westus2
          - name: AKS_REGION
            value: westus2
          - name: CONTROLLER_TYPE
            value: ReplicaSet
          - name: USER_ASSIGNED_IDENTITY_CLIENT_ID
          - name: NUM_OF_FLUENTD_WORKERS
            valueFrom:
              resourceFieldRef:
                containerName: ama-logs
                divisor: "0"
                resource: limits.cpu
          - name: CONTAINER_MEMORY_LIMIT_IN_BYTES
            valueFrom:
              resourceFieldRef:
                containerName: ama-logs
                divisor: "0"
                resource: limits.memory
          - name: HOSTNAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: SIDECAR_SCRAPING_ENABLED
            value: "true"
          - name: USING_AAD_MSI_AUTH
            value: "true"
          - name: APPMONITORING_AUTOINSTRUMENTATION_ENABLED
            value: "false"
          - name: APPMONITORING_OPENTELEMETRYLOGS_ENABLED
            value: "false"
          - name: APPMONITORING_OPENTELEMETRYLOGS_PORT
            value: "28331"
          - name: PROMETHEUS_METRICS_SCRAPING_DISABLED
            value: "false"
          - name: AZMON_TELEGRAF_LIVENESSPROBE_ENABLED
            value: "false"
          - name: AZMON_WINDOWS_FLUENT_BIT_ENABLED
            value: "false"
          - name: CLUSTER_CLOUD_ENVIRONMENT
            value: azurepubliccloud
          image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod:3.1.28
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /bin/bash
              - -c
              - /opt/livenessprobe.sh
            failureThreshold: 3
            initialDelaySeconds: 60
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 15
          name: ama-logs
          ports:
          - containerPort: 25225
            protocol: TCP
          - containerPort: 25224
            protocol: UDP
          - containerPort: 25227
            name: in-rs-tcp
            protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 1536Mi
            requests:
              cpu: 150m
              memory: 250Mi
          securityContext:
            capabilities:
              add:
              - DAC_OVERRIDE
              drop:
              - ALL
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/log
            name: host-log
          - mountPath: /etc/kubernetes/host
            name: azure-json-path
          - mountPath: /etc/ama-logs-secret
            name: ama-logs-secret
            readOnly: true
          - mountPath: /etc/omsagent-secret
            name: ama-logs-secret
            readOnly: true
          - mountPath: /etc/config
            name: ama-logs-rs-config
          - mountPath: /etc/config/settings
            name: settings-vol-config
            readOnly: true
          - mountPath: /etc/config/settings/adx
            name: ama-logs-adx-secret
            readOnly: true
          - mountPath: /etc/config/osm-settings
            name: osm-settings-vol-config
            readOnly: true
        dnsPolicy: ClusterFirst
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: ama-logs
        serviceAccountName: ama-logs
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        volumes:
        - hostPath:
            path: /etc/hostname
            type: ""
          name: container-hostname
        - hostPath:
            path: /var/log
            type: ""
          name: host-log
        - hostPath:
            path: /etc/kubernetes
            type: ""
          name: azure-json-path
        - name: ama-logs-secret
          secret:
            defaultMode: 420
            secretName: ama-logs-secret
        - configMap:
            defaultMode: 420
            name: ama-logs-rs-config
          name: ama-logs-rs-config
        - configMap:
            defaultMode: 420
            name: container-azm-ms-agentconfig
            optional: true
          name: settings-vol-config
        - name: ama-logs-adx-secret
          secret:
            defaultMode: 420
            optional: true
            secretName: ama-logs-adx-secret
        - configMap:
            defaultMode: 420
            name: container-azm-ms-osmconfig
            optional: true
          name: osm-settings-vol-config
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-09-03T17:09:21Z"
      lastUpdateTime: "2025-09-03T17:09:21Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-09-03T17:09:14Z"
      lastUpdateTime: "2025-09-03T17:09:21Z"
      message: ReplicaSet "ama-logs-rs-58665b6498" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","k8s-app":"kube-dns","kubernetes.azure.com/managedby":"aks","kubernetes.io/cluster-service":"true","kubernetes.io/name":"CoreDNS","version":"v20"},"name":"coredns","namespace":"kube-system"},"spec":{"paused":false,"revisionHistoryLimit":2,"selector":{"matchLabels":{"k8s-app":"kube-dns","version":"v20"}},"strategy":{"rollingUpdate":{"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"annotations":{"prometheus.io/port":"9153"},"labels":{"k8s-app":"kube-dns","kubernetes.azure.com/managedby":"aks","kubernetes.io/cluster-service":"true","version":"v20"}},"spec":{"affinity":{"nodeAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"preference":{"matchExpressions":[{"key":"kubernetes.azure.com/mode","operator":"In","values":["system"]}]},"weight":100}],"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchExpressions":[{"key":"kubernetes.azure.com/cluster","operator":"Exists"},{"key":"type","operator":"NotIn","values":["virtual-kubelet"]},{"key":"kubernetes.io/os","operator":"In","values":["linux"]}]}]}},"podAntiAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"podAffinityTerm":{"labelSelector":{"matchExpressions":[{"key":"k8s-app","operator":"In","values":["kube-dns"]}]},"topologyKey":"topology.kubernetes.io/zone"},"weight":10},{"podAffinityTerm":{"labelSelector":{"matchExpressions":[{"key":"k8s-app","operator":"In","values":["kube-dns"]}]},"topologyKey":"kubernetes.io/hostname"},"weight":5}]}},"containers":[{"args":["-conf","/etc/coredns/Corefile"],"env":[{"name":"GOMAXPROCS","valueFrom":{"resourceFieldRef":{"resource":"limits.cpu"}}}],"image":"mcr.microsoft.com/oss/v2/kubernetes/coredns:v1.11.3-8","imagePullPolicy":"IfNotPresent","livenessProbe":{"failureThreshold":5,"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":60,"successThreshold":1,"timeoutSeconds":5},"name":"coredns","ports":[{"containerPort":53,"name":"dns","protocol":"UDP"},{"containerPort":53,"name":"dns-tcp","protocol":"TCP"},{"containerPort":9153,"name":"metrics","protocol":"TCP"}],"readinessProbe":{"httpGet":{"path":"/ready","port":8181,"scheme":"HTTP"}},"resources":{"limits":{"cpu":3,"memory":"500Mi"},"requests":{"cpu":"100m","memory":"70Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"add":["NET_BIND_SERVICE"],"drop":["ALL"]},"procMount":"Default","readOnlyRootFilesystem":true},"volumeMounts":[{"mountPath":"/etc/coredns","name":"config-volume","readOnly":true},{"mountPath":"/etc/coredns/custom","name":"custom-config-volume","readOnly":true},{"mountPath":"/tmp","name":"tmp"}]}],"dnsPolicy":"Default","priorityClassName":"system-node-critical","securityContext":{"seccompProfile":{"type":"RuntimeDefault"}},"serviceAccountName":"coredns","tolerations":[{"effect":"NoSchedule","key":"node-role.kubernetes.io/master"},{"key":"CriticalAddonsOnly","operator":"Exists"},{"effect":"NoExecute","key":"node.kubernetes.io/unreachable","operator":"Exists","tolerationSeconds":30},{"effect":"NoExecute","key":"node.kubernetes.io/not-ready","operator":"Exists","tolerationSeconds":30}],"volumes":[{"configMap":{"items":[{"key":"Corefile","path":"Corefile"}],"name":"coredns"},"name":"config-volume"},{"configMap":{"name":"coredns-custom","optional":true},"name":"custom-config-volume"},{"emptyDir":{},"name":"tmp"}]}}}}
    creationTimestamp: "2025-09-03T17:07:06Z"
    generation: 2
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: kube-dns
      kubernetes.azure.com/managedby: aks
      kubernetes.io/cluster-service: "true"
      kubernetes.io/name: CoreDNS
      version: v20
    name: coredns
    namespace: kube-system
    resourceVersion: "1581"
    uid: 963937c0-2aa0-4c32-9aec-5f0fb72dae21
  spec:
    progressDeadlineSeconds: 600
    replicas: 2
    revisionHistoryLimit: 2
    selector:
      matchLabels:
        k8s-app: kube-dns
        version: v20
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        annotations:
          prometheus.io/port: "9153"
        creationTimestamp: null
        labels:
          k8s-app: kube-dns
          kubernetes.azure.com/managedby: aks
          kubernetes.io/cluster-service: "true"
          version: v20
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: kubernetes.azure.com/mode
                  operator: In
                  values:
                  - system
              weight: 100
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: k8s-app
                    operator: In
                    values:
                    - kube-dns
                topologyKey: topology.kubernetes.io/zone
              weight: 10
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: k8s-app
                    operator: In
                    values:
                    - kube-dns
                topologyKey: kubernetes.io/hostname
              weight: 5
        containers:
        - args:
          - -conf
          - /etc/coredns/Corefile
          env:
          - name: GOMAXPROCS
            valueFrom:
              resourceFieldRef:
                divisor: "0"
                resource: limits.cpu
          image: mcr.microsoft.com/oss/v2/kubernetes/coredns:v1.11.3-8
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: coredns
          ports:
          - containerPort: 53
            name: dns
            protocol: UDP
          - containerPort: 53
            name: dns-tcp
            protocol: TCP
          - containerPort: 9153
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8181
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: "3"
              memory: 500Mi
            requests:
              cpu: 100m
              memory: 70Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - ALL
            procMount: Default
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/coredns
            name: config-volume
            readOnly: true
          - mountPath: /etc/coredns/custom
            name: custom-config-volume
            readOnly: true
          - mountPath: /tmp
            name: tmp
        dnsPolicy: Default
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: coredns
        serviceAccountName: coredns
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 30
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: Corefile
              path: Corefile
            name: coredns
          name: config-volume
        - configMap:
            defaultMode: 420
            name: coredns-custom
            optional: true
          name: custom-config-volume
        - emptyDir: {}
          name: tmp
  status:
    availableReplicas: 2
    conditions:
    - lastTransitionTime: "2025-09-03T17:08:32Z"
      lastUpdateTime: "2025-09-03T17:08:32Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-09-03T17:07:06Z"
      lastUpdateTime: "2025-09-03T17:08:37Z"
      message: ReplicaSet "coredns-6f776c8fb5" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 2
    readyReplicas: 2
    replicas: 2
    updatedReplicas: 2
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","k8s-app":"coredns-autoscaler","kubernetes.azure.com/managedby":"aks","kubernetes.io/cluster-service":"true"},"name":"coredns-autoscaler","namespace":"kube-system"},"spec":{"paused":false,"revisionHistoryLimit":2,"selector":{"matchLabels":{"k8s-app":"coredns-autoscaler"}},"template":{"metadata":{"annotations":{"cluster-autoscaler.kubernetes.io/safe-to-evict":"true","seccomp.security.alpha.kubernetes.io/pod":"runtime/default"},"labels":{"k8s-app":"coredns-autoscaler","kubernetes.azure.com/managedby":"aks"}},"spec":{"affinity":{"nodeAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"preference":{"matchExpressions":[{"key":"kubernetes.azure.com/mode","operator":"In","values":["system"]}]},"weight":100}],"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchExpressions":[{"key":"kubernetes.azure.com/cluster","operator":"Exists"},{"key":"type","operator":"NotIn","values":["virtual-kubelet"]},{"key":"kubernetes.io/os","operator":"In","values":["linux"]}]}]}}},"containers":[{"command":["/cluster-proportional-autoscaler","--namespace=kube-system","--configmap=coredns-autoscaler","--target=deployment/coredns","--default-params={\"ladder\":{\"coresToReplicas\":[[1,2],[512,3],[1024,4],[2048,5]],\"nodesToReplicas\":[[1,2],[8,3],[16,4],[32,5]]}}","--logtostderr=true","--v=2"],"image":"mcr.microsoft.com/oss/v2/kubernetes/autoscaler/cluster-proportional-autoscaler:v1.9.0-2","imagePullPolicy":"IfNotPresent","livenessProbe":{"httpGet":{"path":"/last-poll","port":8080},"initialDelaySeconds":10,"periodSeconds":10},"name":"autoscaler","resources":{"limits":{"cpu":"200m","memory":"500Mi"},"requests":{"cpu":"20m","memory":"10Mi"}},"securityContext":{"capabilities":{"drop":["ALL"]}}}],"dnsPolicy":"Default","priorityClassName":"system-node-critical","securityContext":{"seccompProfile":{"type":"RuntimeDefault"}},"serviceAccountName":"coredns-autoscaler","tolerations":[{"key":"CriticalAddonsOnly","operator":"Exists"},{"effect":"NoExecute","key":"node.kubernetes.io/unreachable","operator":"Exists","tolerationSeconds":30},{"effect":"NoExecute","key":"node.kubernetes.io/not-ready","operator":"Exists","tolerationSeconds":30}]}}}}
    creationTimestamp: "2025-09-03T17:07:06Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: coredns-autoscaler
      kubernetes.azure.com/managedby: aks
      kubernetes.io/cluster-service: "true"
    name: coredns-autoscaler
    namespace: kube-system
    resourceVersion: "1440"
    uid: 1f416802-4c22-4106-a67e-907dee37bea7
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 2
    selector:
      matchLabels:
        k8s-app: coredns-autoscaler
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
          seccomp.security.alpha.kubernetes.io/pod: runtime/default
        creationTimestamp: null
        labels:
          k8s-app: coredns-autoscaler
          kubernetes.azure.com/managedby: aks
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: kubernetes.azure.com/mode
                  operator: In
                  values:
                  - system
              weight: 100
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
        containers:
        - command:
          - /cluster-proportional-autoscaler
          - --namespace=kube-system
          - --configmap=coredns-autoscaler
          - --target=deployment/coredns
          - --default-params={"ladder":{"coresToReplicas":[[1,2],[512,3],[1024,4],[2048,5]],"nodesToReplicas":[[1,2],[8,3],[16,4],[32,5]]}}
          - --logtostderr=true
          - --v=2
          image: mcr.microsoft.com/oss/v2/kubernetes/autoscaler/cluster-proportional-autoscaler:v1.9.0-2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /last-poll
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: autoscaler
          resources:
            limits:
              cpu: 200m
              memory: 500Mi
            requests:
              cpu: 20m
              memory: 10Mi
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: Default
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: coredns-autoscaler
        serviceAccountName: coredns-autoscaler
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 30
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-09-03T17:08:24Z"
      lastUpdateTime: "2025-09-03T17:08:24Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-09-03T17:07:06Z"
      lastUpdateTime: "2025-09-03T17:08:24Z"
      message: ReplicaSet "coredns-autoscaler-864c4496bf" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","app":"konnectivity-agent","kubernetes.azure.com/managedby":"aks","kubernetes.io/cluster-service":"true"},"name":"konnectivity-agent","namespace":"kube-system"},"spec":{"paused":false,"revisionHistoryLimit":2,"selector":{"matchLabels":{"app":"konnectivity-agent"}},"strategy":{"rollingUpdate":{"maxSurge":0,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"annotations":{"checksum/client-cert":"4bf8ed3295ba98bcc20f34566c2725f0628feb903df2d5ea81103a279dde0b16"},"labels":{"app":"konnectivity-agent","component":"tunnel","kubernetes.azure.com/managedby":"aks"}},"spec":{"affinity":{"nodeAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"preference":{"matchExpressions":[{"key":"kubernetes.azure.com/mode","operator":"In","values":["system"]}]},"weight":100}],"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchExpressions":[{"key":"kubernetes.azure.com/cluster","operator":"Exists"},{"key":"type","operator":"NotIn","values":["virtual-kubelet"]},{"key":"kubernetes.io/os","operator":"In","values":["linux"]}]}]}},"podAntiAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"podAffinityTerm":{"labelSelector":{"matchExpressions":[{"key":"app","operator":"In","values":["konnectivity-agent"]}]},"topologyKey":"topology.kubernetes.io/zone"},"weight":10},{"podAffinityTerm":{"labelSelector":{"matchExpressions":[{"key":"app","operator":"In","values":["konnectivity-agent"]}]},"topologyKey":"kubernetes.io/hostname"},"weight":5}]}},"automountServiceAccountToken":false,"containers":[{"args":["--proxy-server-host=elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io","--proxy-server-port=443","--health-server-port=8082","--keepalive-time=30s","--agent-key=/certs/client.key","--agent-cert=/certs/client.crt","--ca-cert=/certs/ca.crt","--agent-identifiers=default-route=true","--alpn-proto=konnectivity","-v=2"],"command":["/proxy-agent"],"image":"mcr.microsoft.com/oss/kubernetes/apiserver-network-proxy/agent:v0.30.3-hotfix.20240819","imagePullPolicy":"IfNotPresent","livenessProbe":{"httpGet":{"path":"/ready","port":8082,"scheme":"HTTP"},"initialDelaySeconds":30,"periodSeconds":60,"timeoutSeconds":60},"name":"konnectivity-agent","readinessProbe":{"httpGet":{"path":"/ready","port":8082,"scheme":"HTTP"}},"resources":{"limits":{"cpu":"1000m","memory":"1Gi"},"requests":{"cpu":"20m","memory":"20Mi"}},"securityContext":{"capabilities":{"drop":["ALL"]}},"volumeMounts":[{"mountPath":"/certs","name":"certs"}]}],"dnsPolicy":"Default","priorityClassName":"system-node-critical","serviceAccountName":"konnectivity-agent","tolerations":[{"key":"CriticalAddonsOnly","operator":"Exists"},{"effect":"NoExecute","key":"node.kubernetes.io/unreachable","operator":"Exists","tolerationSeconds":30},{"effect":"NoExecute","key":"node.kubernetes.io/not-ready","operator":"Exists","tolerationSeconds":30}],"volumes":[{"name":"certs","secret":{"secretName":"konnectivity-certs"}}]}}}}
    creationTimestamp: "2025-09-03T17:07:07Z"
    generation: 2
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      app: konnectivity-agent
      kubernetes.azure.com/managedby: aks
      kubernetes.io/cluster-service: "true"
    name: konnectivity-agent
    namespace: kube-system
    resourceVersion: "1468"
    uid: 7aa2fa25-b097-4196-9001-4e0497b6340b
  spec:
    progressDeadlineSeconds: 600
    replicas: 2
    revisionHistoryLimit: 2
    selector:
      matchLabels:
        app: konnectivity-agent
    strategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        annotations:
          checksum/client-cert: 4bf8ed3295ba98bcc20f34566c2725f0628feb903df2d5ea81103a279dde0b16
        creationTimestamp: null
        labels:
          app: konnectivity-agent
          component: tunnel
          kubernetes.azure.com/managedby: aks
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: kubernetes.azure.com/mode
                  operator: In
                  values:
                  - system
              weight: 100
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: app
                    operator: In
                    values:
                    - konnectivity-agent
                topologyKey: topology.kubernetes.io/zone
              weight: 10
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: app
                    operator: In
                    values:
                    - konnectivity-agent
                topologyKey: kubernetes.io/hostname
              weight: 5
        automountServiceAccountToken: false
        containers:
        - args:
          - --proxy-server-host=elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io
          - --proxy-server-port=443
          - --health-server-port=8082
          - --keepalive-time=30s
          - --agent-key=/certs/client.key
          - --agent-cert=/certs/client.crt
          - --ca-cert=/certs/ca.crt
          - --agent-identifiers=default-route=true
          - --alpn-proto=konnectivity
          - -v=2
          command:
          - /proxy-agent
          image: mcr.microsoft.com/oss/kubernetes/apiserver-network-proxy/agent:v0.30.3-hotfix.20240819
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8082
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 60
          name: konnectivity-agent
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8082
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 20m
              memory: 20Mi
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /certs
            name: certs
        dnsPolicy: Default
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: konnectivity-agent
        serviceAccountName: konnectivity-agent
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 30
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 30
        volumes:
        - name: certs
          secret:
            defaultMode: 420
            secretName: konnectivity-certs
  status:
    availableReplicas: 2
    conditions:
    - lastTransitionTime: "2025-09-03T17:07:07Z"
      lastUpdateTime: "2025-09-03T17:07:07Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-09-03T17:07:07Z"
      lastUpdateTime: "2025-09-03T17:08:23Z"
      message: ReplicaSet "konnectivity-agent-fd4bfb657" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 2
    readyReplicas: 2
    replicas: 2
    updatedReplicas: 2
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","app":"konnectivity-agent-autoscaler","kubernetes.azure.com/managedby":"aks","kubernetes.io/cluster-service":"true"},"name":"konnectivity-agent-autoscaler","namespace":"kube-system"},"spec":{"paused":false,"replicas":1,"revisionHistoryLimit":2,"selector":{"matchLabels":{"app":"konnectivity-agent-autoscaler"}},"template":{"metadata":{"annotations":{"cluster-autoscaler.kubernetes.io/safe-to-evict":"true","seccomp.security.alpha.kubernetes.io/pod":"runtime/default"},"labels":{"app":"konnectivity-agent-autoscaler","kubernetes.azure.com/managedby":"aks"}},"spec":{"affinity":{"nodeAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"preference":{"matchExpressions":[{"key":"kubernetes.azure.com/mode","operator":"In","values":["system"]}]},"weight":100}],"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchExpressions":[{"key":"kubernetes.azure.com/cluster","operator":"Exists"},{"key":"type","operator":"NotIn","values":["virtual-kubelet"]},{"key":"kubernetes.io/os","operator":"In","values":["linux"]}]}]}}},"containers":[{"command":["/cluster-proportional-autoscaler","--namespace=kube-system","--configmap=konnectivity-agent-autoscaler","--target=deployment/konnectivity-agent","--logtostderr=true","--v=2"],"image":"mcr.microsoft.com/oss/v2/kubernetes/autoscaler/cluster-proportional-autoscaler:v1.9.0-2","imagePullPolicy":"IfNotPresent","livenessProbe":{"httpGet":{"path":"/last-poll","port":8080},"initialDelaySeconds":10,"periodSeconds":10},"name":"autoscaler","resources":{"limits":{"cpu":"350m","memory":"512M"},"requests":{"cpu":"20m","memory":"10Mi"}},"securityContext":{"capabilities":{"drop":["ALL"]}}}],"dnsPolicy":"Default","priorityClassName":"system-node-critical","serviceAccountName":"konnectivity-agent-autoscaler","tolerations":[{"key":"CriticalAddonsOnly","operator":"Exists"},{"effect":"NoExecute","key":"node.kubernetes.io/unreachable","operator":"Exists","tolerationSeconds":30},{"effect":"NoExecute","key":"node.kubernetes.io/not-ready","operator":"Exists","tolerationSeconds":30}]}}}}
    creationTimestamp: "2025-09-03T17:07:07Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      app: konnectivity-agent-autoscaler
      kubernetes.azure.com/managedby: aks
      kubernetes.io/cluster-service: "true"
    name: konnectivity-agent-autoscaler
    namespace: kube-system
    resourceVersion: "1442"
    uid: 209079a3-51f2-4ba1-9215-a17f749926d4
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 2
    selector:
      matchLabels:
        app: konnectivity-agent-autoscaler
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
          seccomp.security.alpha.kubernetes.io/pod: runtime/default
        creationTimestamp: null
        labels:
          app: konnectivity-agent-autoscaler
          kubernetes.azure.com/managedby: aks
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: kubernetes.azure.com/mode
                  operator: In
                  values:
                  - system
              weight: 100
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
        containers:
        - command:
          - /cluster-proportional-autoscaler
          - --namespace=kube-system
          - --configmap=konnectivity-agent-autoscaler
          - --target=deployment/konnectivity-agent
          - --logtostderr=true
          - --v=2
          image: mcr.microsoft.com/oss/v2/kubernetes/autoscaler/cluster-proportional-autoscaler:v1.9.0-2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /last-poll
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: autoscaler
          resources:
            limits:
              cpu: 350m
              memory: 512M
            requests:
              cpu: 20m
              memory: 10Mi
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: Default
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: konnectivity-agent-autoscaler
        serviceAccountName: konnectivity-agent-autoscaler
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 30
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-09-03T17:08:24Z"
      lastUpdateTime: "2025-09-03T17:08:24Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-09-03T17:07:07Z"
      lastUpdateTime: "2025-09-03T17:08:24Z"
      message: ReplicaSet "konnectivity-agent-autoscaler-6ddd978bfc" has successfully
        progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "2"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","k8s-app":"metrics-server","kubernetes.azure.com/managedby":"aks","kubernetes.io/cluster-service":"true"},"name":"metrics-server","namespace":"kube-system"},"spec":{"paused":false,"replicas":2,"revisionHistoryLimit":2,"selector":{"matchLabels":{"k8s-app":"metrics-server"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"k8s-app":"metrics-server","kubernetes.azure.com/managedby":"aks"},"name":"metrics-server"},"spec":{"affinity":{"nodeAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"preference":{"matchExpressions":[{"key":"kubernetes.azure.com/mode","operator":"In","values":["system"]}]},"weight":100}],"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchExpressions":[{"key":"kubernetes.azure.com/cluster","operator":"Exists"},{"key":"type","operator":"NotIn","values":["virtual-kubelet"]},{"key":"kubernetes.io/os","operator":"In","values":["linux"]}]}]}},"podAntiAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"podAffinityTerm":{"labelSelector":{"matchExpressions":[{"key":"k8s-app","operator":"In","values":["metrics-server"]}]},"topologyKey":"topology.kubernetes.io/zone"},"weight":10},{"podAffinityTerm":{"labelSelector":{"matchExpressions":[{"key":"k8s-app","operator":"In","values":["metrics-server"]}]},"topologyKey":"kubernetes.io/hostname"},"weight":5}]}},"containers":[{"command":["/pod_nanny","--config-dir=/etc/config","--cpu=150m","--extra-cpu=0.5m","--memory=100Mi","--extra-memory=4Mi","--poll-period=180000","--threshold=5","--deployment=metrics-server","--container=metrics-server"],"env":[{"name":"MY_POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"MY_POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}}],"image":"mcr.microsoft.com/oss/v2/kubernetes/autoscaler/addon-resizer:v1.8.23-4","imagePullPolicy":"IfNotPresent","name":"metrics-server-vpa","resources":{"limits":{"cpu":"100m","memory":"300Mi"},"requests":{"cpu":"5m","memory":"30Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"readOnlyRootFilesystem":true,"runAsNonRoot":true,"runAsUser":65532},"volumeMounts":[{"mountPath":"/etc/config","name":"metrics-server-config-volume"}]},{"command":["/metrics-server","--kubelet-insecure-tls","--kubelet-preferred-address-types=InternalIP","--tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384","--cert-dir=/tmp","--secure-port=4443"],"image":"mcr.microsoft.com/oss/v2/kubernetes/metrics-server:v0.7.2-7","imagePullPolicy":"IfNotPresent","livenessProbe":{"failureThreshold":3,"httpGet":{"path":"/livez","port":"ms-https","scheme":"HTTPS"},"initialDelaySeconds":20,"periodSeconds":10,"successThreshold":1,"timeoutSeconds":10},"name":"metrics-server","ports":[{"containerPort":4443,"name":"ms-https","protocol":"TCP"}],"readinessProbe":{"failureThreshold":3,"httpGet":{"path":"/readyz","port":"ms-https","scheme":"HTTPS"},"initialDelaySeconds":60,"periodSeconds":10,"successThreshold":1,"timeoutSeconds":10},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"readOnlyRootFilesystem":true,"runAsNonRoot":true,"runAsUser":65532},"volumeMounts":[{"mountPath":"/tmp","name":"tmp-dir"}]}],"priorityClassName":"system-node-critical","securityContext":{"seccompProfile":{"type":"RuntimeDefault"}},"serviceAccountName":"metrics-server","tolerations":[{"key":"CriticalAddonsOnly","operator":"Exists"},{"effect":"NoExecute","key":"node.kubernetes.io/unreachable","operator":"Exists","tolerationSeconds":30},{"effect":"NoExecute","key":"node.kubernetes.io/not-ready","operator":"Exists","tolerationSeconds":30}],"volumes":[{"emptyDir":{},"name":"tmp-dir"},{"configMap":{"name":"metrics-server-config","optional":true},"name":"metrics-server-config-volume"}]}}}}
    creationTimestamp: "2025-09-03T17:07:07Z"
    generation: 2
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: metrics-server
      kubernetes.azure.com/managedby: aks
      kubernetes.io/cluster-service: "true"
    name: metrics-server
    namespace: kube-system
    resourceVersion: "2001"
    uid: 9866c0ad-1db0-4cef-a8dc-3bf5b90aa4aa
  spec:
    progressDeadlineSeconds: 600
    replicas: 2
    revisionHistoryLimit: 2
    selector:
      matchLabels:
        k8s-app: metrics-server
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: metrics-server
          kubernetes.azure.com/managedby: aks
        name: metrics-server
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: kubernetes.azure.com/mode
                  operator: In
                  values:
                  - system
              weight: 100
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: k8s-app
                    operator: In
                    values:
                    - metrics-server
                topologyKey: topology.kubernetes.io/zone
              weight: 10
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: k8s-app
                    operator: In
                    values:
                    - metrics-server
                topologyKey: kubernetes.io/hostname
              weight: 5
        containers:
        - command:
          - /pod_nanny
          - --config-dir=/etc/config
          - --cpu=150m
          - --extra-cpu=0.5m
          - --memory=100Mi
          - --extra-memory=4Mi
          - --poll-period=180000
          - --threshold=5
          - --deployment=metrics-server
          - --container=metrics-server
          env:
          - name: MY_POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: MY_POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: mcr.microsoft.com/oss/v2/kubernetes/autoscaler/addon-resizer:v1.8.23-4
          imagePullPolicy: IfNotPresent
          name: metrics-server-vpa
          resources:
            limits:
              cpu: 100m
              memory: 300Mi
            requests:
              cpu: 5m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 65532
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/config
            name: metrics-server-config-volume
        - command:
          - /metrics-server
          - --kubelet-insecure-tls
          - --kubelet-preferred-address-types=InternalIP
          - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
          - --cert-dir=/tmp
          - --secure-port=4443
          image: mcr.microsoft.com/oss/v2/kubernetes/metrics-server:v0.7.2-7
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /livez
              port: ms-https
              scheme: HTTPS
            initialDelaySeconds: 20
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: metrics-server
          ports:
          - containerPort: 4443
            name: ms-https
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: ms-https
              scheme: HTTPS
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          resources:
            limits:
              cpu: 151m
              memory: 108Mi
            requests:
              cpu: 151m
              memory: 108Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 65532
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp-dir
        dnsPolicy: ClusterFirst
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: metrics-server
        serviceAccountName: metrics-server
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 30
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 30
        volumes:
        - emptyDir: {}
          name: tmp-dir
        - configMap:
            defaultMode: 420
            name: metrics-server-config
            optional: true
          name: metrics-server-config-volume
  status:
    availableReplicas: 2
    conditions:
    - lastTransitionTime: "2025-09-03T17:09:28Z"
      lastUpdateTime: "2025-09-03T17:09:28Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-09-03T17:07:07Z"
      lastUpdateTime: "2025-09-03T17:09:42Z"
      message: ReplicaSet "metrics-server-6c4cb48ddc" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 2
    readyReplicas: 2
    replicas: 2
    updatedReplicas: 2
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-09-03T17:11:08Z"
    generation: 1
    labels:
      app: elasticsearch-azure
      pod-template-hash: 6b49cc647f
    name: elasticsearch-azure-6b49cc647f
    namespace: elasticsearch
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: elasticsearch-azure
      uid: 86375fa6-6629-49ff-b2f1-d15e0b8987b7
    resourceVersion: "2706"
    uid: 0085d173-106a-4950-8163-83c50337a826
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: elasticsearch-azure
        pod-template-hash: 6b49cc647f
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: elasticsearch-azure
          pod-template-hash: 6b49cc647f
      spec:
        containers:
        - env:
          - name: discovery.type
            value: single-node
          - name: xpack.security.enabled
            value: "false"
          - name: ES_JAVA_OPTS
            value: -Xms1g -Xmx1g
          image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
          imagePullPolicy: IfNotPresent
          name: elasticsearch
          ports:
          - containerPort: 9200
            protocol: TCP
          - containerPort: 9300
            protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 2Gi
            requests:
              cpu: 500m
              memory: 1Gi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-09-03T17:11:09Z"
    generation: 1
    labels:
      app: kibana-azure
      pod-template-hash: d8cff6d88
    name: kibana-azure-d8cff6d88
    namespace: elasticsearch
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: kibana-azure
      uid: c78cf92c-101d-4611-8512-b0c62c19aa82
    resourceVersion: "2665"
    uid: 2a6d91d6-0d6f-4785-a2a9-3641bffe6a11
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: kibana-azure
        pod-template-hash: d8cff6d88
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: kibana-azure
          pod-template-hash: d8cff6d88
      spec:
        containers:
        - env:
          - name: ELASTICSEARCH_HOSTS
            value: http://elasticsearch-azure-service:9200
          - name: xpack.security.enabled
            value: "false"
          - name: xpack.fleet.enabled
            value: "false"
          - name: xpack.ingestManager.enabled
            value: "false"
          - name: telemetry.enabled
            value: "false"
          image: docker.elastic.co/kibana/kibana:8.11.0
          imagePullPolicy: IfNotPresent
          name: kibana
          ports:
          - containerPort: 5601
            protocol: TCP
          resources:
            limits:
              cpu: 500m
              memory: 1Gi
            requests:
              cpu: 250m
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: aks-managed-azure-monitor-logs
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2025-09-03T17:09:14Z"
    generation: 1
    labels:
      kubernetes.azure.com/managedby: aks
      pod-template-hash: 58665b6498
      rsName: ama-logs-rs
    name: ama-logs-rs-58665b6498
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: ama-logs-rs
      uid: 30730270-70a6-48b5-be8c-2a4486da14ed
    resourceVersion: "1877"
    uid: 3e441aa7-edeb-479d-a3ba-f47bd3824ab8
  spec:
    replicas: 1
    selector:
      matchLabels:
        pod-template-hash: 58665b6498
        rsName: ama-logs-rs
    template:
      metadata:
        annotations:
          WSID: ZWRlMzc2MjctNDFhOC00ZjdjLTg1YTAtMzkzNjQ4ODIyM2E5
          agentVersion: azure-mdsd-1.35.7
          cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
          dockerProviderVersion: 18.0.1-0
          kubernetes.azure.com/no-http-proxy-vars: "true"
          schema-versions: v1
        creationTimestamp: null
        labels:
          kubernetes.azure.com/managedby: aks
          pod-template-hash: 58665b6498
          rsName: ama-logs-rs
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: kubernetes.azure.com/mode
                  operator: In
                  values:
                  - system
              weight: 100
            - preference:
                matchExpressions:
                - key: storageprofile
                  operator: NotIn
                  values:
                  - managed
              weight: 1
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
        containers:
        - args:
          - --secret-namespace=kube-system
          - --secret-name=aad-msi-auth-token
          - --token-server-listening-port=8888
          - --health-server-listening-port=9999
          - --restart-pod-waiting-minutes-on-broken-connection=240
          command:
          - /addon-token-adapter
          env:
          - name: AZMON_COLLECT_ENV
            value: "false"
          image: mcr.microsoft.com/aks/msi/addon-token-adapter:master.250604.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 9999
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 1
          name: addon-token-adapter
          resources:
            limits:
              cpu: 500m
              memory: 500Mi
            requests:
              cpu: 100m
              memory: 100Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - env:
          - name: NODE_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: AKS_CLUSTER_NAME
            value: elasticsearch-cluster-azure
          - name: AKS_RESOURCE_ID
            value: /subscriptions/f0d02754-d8ca-4e7d-b010-ebac7cd463da/resourceGroups/multi-cloud-elastic-rg/providers/Microsoft.ContainerService/managedClusters/elasticsearch-cluster-azure
          - name: AKS_NODE_RESOURCE_GROUP
            value: MC_multi-cloud-elastic-rg_elasticsearch-cluster-azure_westus2
          - name: AKS_REGION
            value: westus2
          - name: CONTROLLER_TYPE
            value: ReplicaSet
          - name: USER_ASSIGNED_IDENTITY_CLIENT_ID
          - name: NUM_OF_FLUENTD_WORKERS
            valueFrom:
              resourceFieldRef:
                containerName: ama-logs
                divisor: "0"
                resource: limits.cpu
          - name: CONTAINER_MEMORY_LIMIT_IN_BYTES
            valueFrom:
              resourceFieldRef:
                containerName: ama-logs
                divisor: "0"
                resource: limits.memory
          - name: HOSTNAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: SIDECAR_SCRAPING_ENABLED
            value: "true"
          - name: USING_AAD_MSI_AUTH
            value: "true"
          - name: APPMONITORING_AUTOINSTRUMENTATION_ENABLED
            value: "false"
          - name: APPMONITORING_OPENTELEMETRYLOGS_ENABLED
            value: "false"
          - name: APPMONITORING_OPENTELEMETRYLOGS_PORT
            value: "28331"
          - name: PROMETHEUS_METRICS_SCRAPING_DISABLED
            value: "false"
          - name: AZMON_TELEGRAF_LIVENESSPROBE_ENABLED
            value: "false"
          - name: AZMON_WINDOWS_FLUENT_BIT_ENABLED
            value: "false"
          - name: CLUSTER_CLOUD_ENVIRONMENT
            value: azurepubliccloud
          image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod:3.1.28
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /bin/bash
              - -c
              - /opt/livenessprobe.sh
            failureThreshold: 3
            initialDelaySeconds: 60
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 15
          name: ama-logs
          ports:
          - containerPort: 25225
            protocol: TCP
          - containerPort: 25224
            protocol: UDP
          - containerPort: 25227
            name: in-rs-tcp
            protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 1536Mi
            requests:
              cpu: 150m
              memory: 250Mi
          securityContext:
            capabilities:
              add:
              - DAC_OVERRIDE
              drop:
              - ALL
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/log
            name: host-log
          - mountPath: /etc/kubernetes/host
            name: azure-json-path
          - mountPath: /etc/ama-logs-secret
            name: ama-logs-secret
            readOnly: true
          - mountPath: /etc/omsagent-secret
            name: ama-logs-secret
            readOnly: true
          - mountPath: /etc/config
            name: ama-logs-rs-config
          - mountPath: /etc/config/settings
            name: settings-vol-config
            readOnly: true
          - mountPath: /etc/config/settings/adx
            name: ama-logs-adx-secret
            readOnly: true
          - mountPath: /etc/config/osm-settings
            name: osm-settings-vol-config
            readOnly: true
        dnsPolicy: ClusterFirst
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: ama-logs
        serviceAccountName: ama-logs
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        volumes:
        - hostPath:
            path: /etc/hostname
            type: ""
          name: container-hostname
        - hostPath:
            path: /var/log
            type: ""
          name: host-log
        - hostPath:
            path: /etc/kubernetes
            type: ""
          name: azure-json-path
        - name: ama-logs-secret
          secret:
            defaultMode: 420
            secretName: ama-logs-secret
        - configMap:
            defaultMode: 420
            name: ama-logs-rs-config
          name: ama-logs-rs-config
        - configMap:
            defaultMode: 420
            name: container-azm-ms-agentconfig
            optional: true
          name: settings-vol-config
        - name: ama-logs-adx-secret
          secret:
            defaultMode: 420
            optional: true
            secretName: ama-logs-adx-secret
        - configMap:
            defaultMode: 420
            name: container-azm-ms-osmconfig
            optional: true
          name: osm-settings-vol-config
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-09-03T17:07:06Z"
    generation: 2
    labels:
      k8s-app: kube-dns
      kubernetes.azure.com/managedby: aks
      kubernetes.io/cluster-service: "true"
      pod-template-hash: 6f776c8fb5
      version: v20
    name: coredns-6f776c8fb5
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: coredns
      uid: 963937c0-2aa0-4c32-9aec-5f0fb72dae21
    resourceVersion: "1579"
    uid: febb2e27-6d46-4cd0-b520-5c36ee2b8cac
  spec:
    replicas: 2
    selector:
      matchLabels:
        k8s-app: kube-dns
        pod-template-hash: 6f776c8fb5
        version: v20
    template:
      metadata:
        annotations:
          prometheus.io/port: "9153"
        creationTimestamp: null
        labels:
          k8s-app: kube-dns
          kubernetes.azure.com/managedby: aks
          kubernetes.io/cluster-service: "true"
          pod-template-hash: 6f776c8fb5
          version: v20
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: kubernetes.azure.com/mode
                  operator: In
                  values:
                  - system
              weight: 100
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: k8s-app
                    operator: In
                    values:
                    - kube-dns
                topologyKey: topology.kubernetes.io/zone
              weight: 10
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: k8s-app
                    operator: In
                    values:
                    - kube-dns
                topologyKey: kubernetes.io/hostname
              weight: 5
        containers:
        - args:
          - -conf
          - /etc/coredns/Corefile
          env:
          - name: GOMAXPROCS
            valueFrom:
              resourceFieldRef:
                divisor: "0"
                resource: limits.cpu
          image: mcr.microsoft.com/oss/v2/kubernetes/coredns:v1.11.3-8
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: coredns
          ports:
          - containerPort: 53
            name: dns
            protocol: UDP
          - containerPort: 53
            name: dns-tcp
            protocol: TCP
          - containerPort: 9153
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8181
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: "3"
              memory: 500Mi
            requests:
              cpu: 100m
              memory: 70Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - ALL
            procMount: Default
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/coredns
            name: config-volume
            readOnly: true
          - mountPath: /etc/coredns/custom
            name: custom-config-volume
            readOnly: true
          - mountPath: /tmp
            name: tmp
        dnsPolicy: Default
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: coredns
        serviceAccountName: coredns
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 30
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: Corefile
              path: Corefile
            name: coredns
          name: config-volume
        - configMap:
            defaultMode: 420
            name: coredns-custom
            optional: true
          name: custom-config-volume
        - emptyDir: {}
          name: tmp
  status:
    availableReplicas: 2
    fullyLabeledReplicas: 2
    observedGeneration: 2
    readyReplicas: 2
    replicas: 2
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-09-03T17:07:06Z"
    generation: 1
    labels:
      k8s-app: coredns-autoscaler
      kubernetes.azure.com/managedby: aks
      pod-template-hash: 864c4496bf
    name: coredns-autoscaler-864c4496bf
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: coredns-autoscaler
      uid: 1f416802-4c22-4106-a67e-907dee37bea7
    resourceVersion: "1437"
    uid: a6e7f77e-2a71-4d73-aaea-705795782c7f
  spec:
    replicas: 1
    selector:
      matchLabels:
        k8s-app: coredns-autoscaler
        pod-template-hash: 864c4496bf
    template:
      metadata:
        annotations:
          cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
          seccomp.security.alpha.kubernetes.io/pod: runtime/default
        creationTimestamp: null
        labels:
          k8s-app: coredns-autoscaler
          kubernetes.azure.com/managedby: aks
          pod-template-hash: 864c4496bf
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: kubernetes.azure.com/mode
                  operator: In
                  values:
                  - system
              weight: 100
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
        containers:
        - command:
          - /cluster-proportional-autoscaler
          - --namespace=kube-system
          - --configmap=coredns-autoscaler
          - --target=deployment/coredns
          - --default-params={"ladder":{"coresToReplicas":[[1,2],[512,3],[1024,4],[2048,5]],"nodesToReplicas":[[1,2],[8,3],[16,4],[32,5]]}}
          - --logtostderr=true
          - --v=2
          image: mcr.microsoft.com/oss/v2/kubernetes/autoscaler/cluster-proportional-autoscaler:v1.9.0-2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /last-poll
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: autoscaler
          resources:
            limits:
              cpu: 200m
              memory: 500Mi
            requests:
              cpu: 20m
              memory: 10Mi
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: Default
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: coredns-autoscaler
        serviceAccountName: coredns-autoscaler
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 30
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-09-03T17:07:07Z"
    generation: 1
    labels:
      app: konnectivity-agent-autoscaler
      kubernetes.azure.com/managedby: aks
      pod-template-hash: 6ddd978bfc
    name: konnectivity-agent-autoscaler-6ddd978bfc
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: konnectivity-agent-autoscaler
      uid: 209079a3-51f2-4ba1-9215-a17f749926d4
    resourceVersion: "1441"
    uid: 768f1986-ac73-4c50-a638-fe81eac75407
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: konnectivity-agent-autoscaler
        pod-template-hash: 6ddd978bfc
    template:
      metadata:
        annotations:
          cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
          seccomp.security.alpha.kubernetes.io/pod: runtime/default
        creationTimestamp: null
        labels:
          app: konnectivity-agent-autoscaler
          kubernetes.azure.com/managedby: aks
          pod-template-hash: 6ddd978bfc
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: kubernetes.azure.com/mode
                  operator: In
                  values:
                  - system
              weight: 100
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
        containers:
        - command:
          - /cluster-proportional-autoscaler
          - --namespace=kube-system
          - --configmap=konnectivity-agent-autoscaler
          - --target=deployment/konnectivity-agent
          - --logtostderr=true
          - --v=2
          image: mcr.microsoft.com/oss/v2/kubernetes/autoscaler/cluster-proportional-autoscaler:v1.9.0-2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /last-poll
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: autoscaler
          resources:
            limits:
              cpu: 350m
              memory: 512M
            requests:
              cpu: 20m
              memory: 10Mi
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: Default
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: konnectivity-agent-autoscaler
        serviceAccountName: konnectivity-agent-autoscaler
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 30
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-09-03T17:07:07Z"
    generation: 2
    labels:
      app: konnectivity-agent
      component: tunnel
      kubernetes.azure.com/managedby: aks
      pod-template-hash: fd4bfb657
    name: konnectivity-agent-fd4bfb657
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: konnectivity-agent
      uid: 7aa2fa25-b097-4196-9001-4e0497b6340b
    resourceVersion: "1467"
    uid: 3f94ef4b-4197-4448-bc31-d7f06cbcf6cd
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: konnectivity-agent
        pod-template-hash: fd4bfb657
    template:
      metadata:
        annotations:
          checksum/client-cert: 4bf8ed3295ba98bcc20f34566c2725f0628feb903df2d5ea81103a279dde0b16
        creationTimestamp: null
        labels:
          app: konnectivity-agent
          component: tunnel
          kubernetes.azure.com/managedby: aks
          pod-template-hash: fd4bfb657
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: kubernetes.azure.com/mode
                  operator: In
                  values:
                  - system
              weight: 100
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: app
                    operator: In
                    values:
                    - konnectivity-agent
                topologyKey: topology.kubernetes.io/zone
              weight: 10
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: app
                    operator: In
                    values:
                    - konnectivity-agent
                topologyKey: kubernetes.io/hostname
              weight: 5
        automountServiceAccountToken: false
        containers:
        - args:
          - --proxy-server-host=elasticsea-multi-cloud-elas-f0d027-i2tdu2xq.hcp.westus2.azmk8s.io
          - --proxy-server-port=443
          - --health-server-port=8082
          - --keepalive-time=30s
          - --agent-key=/certs/client.key
          - --agent-cert=/certs/client.crt
          - --ca-cert=/certs/ca.crt
          - --agent-identifiers=default-route=true
          - --alpn-proto=konnectivity
          - -v=2
          command:
          - /proxy-agent
          image: mcr.microsoft.com/oss/kubernetes/apiserver-network-proxy/agent:v0.30.3-hotfix.20240819
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8082
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 60
          name: konnectivity-agent
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8082
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 20m
              memory: 20Mi
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /certs
            name: certs
        dnsPolicy: Default
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: konnectivity-agent
        serviceAccountName: konnectivity-agent
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 30
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 30
        volumes:
        - name: certs
          secret:
            defaultMode: 420
            secretName: konnectivity-certs
  status:
    availableReplicas: 2
    fullyLabeledReplicas: 2
    observedGeneration: 2
    readyReplicas: 2
    replicas: 2
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "2"
    creationTimestamp: "2025-09-03T17:08:35Z"
    generation: 2
    labels:
      k8s-app: metrics-server
      kubernetes.azure.com/managedby: aks
      pod-template-hash: 6c4cb48ddc
    name: metrics-server-6c4cb48ddc
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: metrics-server
      uid: 9866c0ad-1db0-4cef-a8dc-3bf5b90aa4aa
    resourceVersion: "1990"
    uid: ad947d04-b4bc-4c5a-85e3-d2d4a9ffa73b
  spec:
    replicas: 2
    selector:
      matchLabels:
        k8s-app: metrics-server
        pod-template-hash: 6c4cb48ddc
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: metrics-server
          kubernetes.azure.com/managedby: aks
          pod-template-hash: 6c4cb48ddc
        name: metrics-server
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: kubernetes.azure.com/mode
                  operator: In
                  values:
                  - system
              weight: 100
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: k8s-app
                    operator: In
                    values:
                    - metrics-server
                topologyKey: topology.kubernetes.io/zone
              weight: 10
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: k8s-app
                    operator: In
                    values:
                    - metrics-server
                topologyKey: kubernetes.io/hostname
              weight: 5
        containers:
        - command:
          - /pod_nanny
          - --config-dir=/etc/config
          - --cpu=150m
          - --extra-cpu=0.5m
          - --memory=100Mi
          - --extra-memory=4Mi
          - --poll-period=180000
          - --threshold=5
          - --deployment=metrics-server
          - --container=metrics-server
          env:
          - name: MY_POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: MY_POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: mcr.microsoft.com/oss/v2/kubernetes/autoscaler/addon-resizer:v1.8.23-4
          imagePullPolicy: IfNotPresent
          name: metrics-server-vpa
          resources:
            limits:
              cpu: 100m
              memory: 300Mi
            requests:
              cpu: 5m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 65532
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/config
            name: metrics-server-config-volume
        - command:
          - /metrics-server
          - --kubelet-insecure-tls
          - --kubelet-preferred-address-types=InternalIP
          - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
          - --cert-dir=/tmp
          - --secure-port=4443
          image: mcr.microsoft.com/oss/v2/kubernetes/metrics-server:v0.7.2-7
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /livez
              port: ms-https
              scheme: HTTPS
            initialDelaySeconds: 20
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: metrics-server
          ports:
          - containerPort: 4443
            name: ms-https
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: ms-https
              scheme: HTTPS
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          resources:
            limits:
              cpu: 151m
              memory: 108Mi
            requests:
              cpu: 151m
              memory: 108Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 65532
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp-dir
        dnsPolicy: ClusterFirst
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: metrics-server
        serviceAccountName: metrics-server
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 30
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 30
        volumes:
        - emptyDir: {}
          name: tmp-dir
        - configMap:
            defaultMode: 420
            name: metrics-server-config
            optional: true
          name: metrics-server-config-volume
  status:
    availableReplicas: 2
    fullyLabeledReplicas: 2
    observedGeneration: 2
    readyReplicas: 2
    replicas: 2
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-09-03T17:07:07Z"
    generation: 3
    labels:
      k8s-app: metrics-server
      kubernetes.azure.com/managedby: aks
      pod-template-hash: 867c8845b7
    name: metrics-server-867c8845b7
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: metrics-server
      uid: 9866c0ad-1db0-4cef-a8dc-3bf5b90aa4aa
    resourceVersion: "2000"
    uid: e1eb0d59-0f0f-48a7-9ae7-420484979558
  spec:
    replicas: 0
    selector:
      matchLabels:
        k8s-app: metrics-server
        pod-template-hash: 867c8845b7
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: metrics-server
          kubernetes.azure.com/managedby: aks
          pod-template-hash: 867c8845b7
        name: metrics-server
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: kubernetes.azure.com/mode
                  operator: In
                  values:
                  - system
              weight: 100
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: k8s-app
                    operator: In
                    values:
                    - metrics-server
                topologyKey: topology.kubernetes.io/zone
              weight: 10
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: k8s-app
                    operator: In
                    values:
                    - metrics-server
                topologyKey: kubernetes.io/hostname
              weight: 5
        containers:
        - command:
          - /pod_nanny
          - --config-dir=/etc/config
          - --cpu=150m
          - --extra-cpu=0.5m
          - --memory=100Mi
          - --extra-memory=4Mi
          - --poll-period=180000
          - --threshold=5
          - --deployment=metrics-server
          - --container=metrics-server
          env:
          - name: MY_POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: MY_POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: mcr.microsoft.com/oss/v2/kubernetes/autoscaler/addon-resizer:v1.8.23-4
          imagePullPolicy: IfNotPresent
          name: metrics-server-vpa
          resources:
            limits:
              cpu: 100m
              memory: 300Mi
            requests:
              cpu: 5m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 65532
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/config
            name: metrics-server-config-volume
        - command:
          - /metrics-server
          - --kubelet-insecure-tls
          - --kubelet-preferred-address-types=InternalIP
          - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
          - --cert-dir=/tmp
          - --secure-port=4443
          image: mcr.microsoft.com/oss/v2/kubernetes/metrics-server:v0.7.2-7
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /livez
              port: ms-https
              scheme: HTTPS
            initialDelaySeconds: 20
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: metrics-server
          ports:
          - containerPort: 4443
            name: ms-https
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: ms-https
              scheme: HTTPS
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 65532
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp-dir
        dnsPolicy: ClusterFirst
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: metrics-server
        serviceAccountName: metrics-server
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 30
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 30
        volumes:
        - emptyDir: {}
          name: tmp-dir
        - configMap:
            defaultMode: 420
            name: metrics-server-config
            optional: true
          name: metrics-server-config-volume
  status:
    observedGeneration: 3
    replicas: 0
kind: List
metadata:
  resourceVersion: ""
