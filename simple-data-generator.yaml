apiVersion: batch/v1
kind: Job
metadata:
  name: simple-data-generator
  namespace: elasticsearch
spec:
  template:
    spec:
      containers:
      - name: data-generator
        image: curlimages/curl:latest
        command:
        - /bin/sh
        - -c
        - |
          # Create sample index with simpler mapping
          curl -X PUT "elasticsearch-service:9200/sample-logs" -H 'Content-Type: application/json' -d '{
            "mappings": {
              "properties": {
                "timestamp": { "type": "date", "format": "yyyy-MM-dd HH:mm:ss" },
                "level": { "type": "keyword" },
                "message": { "type": "text" },
                "service": { "type": "keyword" },
                "response_time": { "type": "integer" }
              }
            }
          }'
          
          # Generate sample data with proper date format
          for i in {1..500}; do
            curl -X POST "elasticsearch-service:9200/sample-logs/_doc" -H 'Content-Type: application/json' -d "{
              \"timestamp\": \"$(date '+%Y-%m-%d %H:%M:%S')\",
              \"level\": \"$([ $((RANDOM % 3)) -eq 0 ] && echo 'ERROR' || [ $((RANDOM % 2)) -eq 0 ] && echo 'WARN' || echo 'INFO')\",
              \"message\": \"Sample log message number $i with some searchable content\",
              \"service\": \"$([ $((RANDOM % 4)) -eq 0 ] && echo 'web' || [ $((RANDOM % 3)) -eq 0 ] && echo 'api' || [ $((RANDOM % 2)) -eq 0 ] && echo 'db' || echo 'cache')\",
              \"response_time\": $((RANDOM % 1000 + 10))
            }"
            sleep 0.05
          done
          
          # Create some searches to generate metrics
          for i in {1..20}; do
            curl -X GET "elasticsearch-service:9200/sample-logs/_search" -H 'Content-Type: application/json' -d '{
              "query": {
                "match": {
                  "message": "sample"
                }
              },
              "size": 10
            }'
            sleep 0.1
          done
          
          echo "Data generation completed successfully!"
      restartPolicy: Never
  backoffLimit: 3
