apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-09-03T15:13:35Z"
    generateName: elasticsearch-6c9bbb6d75-
    generation: 1
    labels:
      app: elasticsearch
      pod-template-hash: 6c9bbb6d75
    name: elasticsearch-6c9bbb6d75-9q9cp
    namespace: elasticsearch
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: elasticsearch-6c9bbb6d75
      uid: eb576f1a-76dc-4a45-83fe-ff84fc46697a
    resourceVersion: "19396"
    uid: 750f3435-fb10-4728-ab9f-d2c1fff84a5a
  spec:
    containers:
    - env:
      - name: discovery.type
        value: single-node
      - name: xpack.security.enabled
        value: "false"
      - name: ES_JAVA_OPTS
        value: -Xms1g -Xmx1g
      image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
      imagePullPolicy: IfNotPresent
      name: elasticsearch
      ports:
      - containerPort: 9200
        protocol: TCP
      resources:
        limits:
          cpu: "1"
          memory: 2Gi
        requests:
          cpu: 500m
          memory: 1Gi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-g4chp
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-10-0-2-41.us-west-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-g4chp
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T15:13:37Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T15:13:35Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T15:13:37Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T15:13:37Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T15:13:35Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 500m
        memory: 1Gi
      containerID: containerd://a926c8b63728ebfafdc4bc55fa24ceaf13cfd17164f5e36e59990dc7258a52af
      image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
      imageID: docker.elastic.co/elasticsearch/elasticsearch@sha256:4cd9ce4ccb04618617114da1df8240473bbd004329c1bc0252cebeec089b629e
      lastState: {}
      name: elasticsearch
      ready: true
      resources:
        limits:
          cpu: "1"
          memory: 2Gi
        requests:
          cpu: 500m
          memory: 1Gi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-03T15:13:36Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-g4chp
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.0.2.41
    hostIPs:
    - ip: 10.0.2.41
    phase: Running
    podIP: 10.0.2.156
    podIPs:
    - ip: 10.0.2.156
    qosClass: Burstable
    startTime: "2025-09-03T15:13:35Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-09-03T16:59:50Z"
    generateName: elasticsearch-azure-6b49cc647f-
    generation: 1
    labels:
      app: elasticsearch-azure
      pod-template-hash: 6b49cc647f
    name: elasticsearch-azure-6b49cc647f-4pk54
    namespace: elasticsearch
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: elasticsearch-azure-6b49cc647f
      uid: 977ca846-bf7a-483a-b3a8-b9a0d2393f5e
    resourceVersion: "37074"
    uid: 2b58c653-ed71-4b7c-8b5a-49260e6e683d
  spec:
    containers:
    - env:
      - name: discovery.type
        value: single-node
      - name: xpack.security.enabled
        value: "false"
      - name: ES_JAVA_OPTS
        value: -Xms1g -Xmx1g
      image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
      imagePullPolicy: IfNotPresent
      name: elasticsearch
      ports:
      - containerPort: 9200
        protocol: TCP
      - containerPort: 9300
        protocol: TCP
      resources:
        limits:
          cpu: "1"
          memory: 2Gi
        requests:
          cpu: 500m
          memory: 1Gi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-kpv8h
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-10-0-2-41.us-west-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-kpv8h
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T16:59:52Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T16:59:50Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T16:59:52Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T16:59:52Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T16:59:50Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 500m
        memory: 1Gi
      containerID: containerd://4c64e0dc9619df3e571085cd2462041f7daec16611cfff1b8b28cbf9eec16a11
      image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
      imageID: docker.elastic.co/elasticsearch/elasticsearch@sha256:4cd9ce4ccb04618617114da1df8240473bbd004329c1bc0252cebeec089b629e
      lastState: {}
      name: elasticsearch
      ready: true
      resources:
        limits:
          cpu: "1"
          memory: 2Gi
        requests:
          cpu: 500m
          memory: 1Gi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-03T16:59:51Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-kpv8h
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.0.2.41
    hostIPs:
    - ip: 10.0.2.41
    phase: Running
    podIP: 10.0.2.119
    podIPs:
    - ip: 10.0.2.119
    qosClass: Burstable
    startTime: "2025-09-03T16:59:50Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-09-03T14:31:50Z"
    generateName: elasticsearch-data-generator-
    generation: 1
    labels:
      batch.kubernetes.io/controller-uid: 19732d98-c1e9-4681-9d92-70dede18db37
      batch.kubernetes.io/job-name: elasticsearch-data-generator
      controller-uid: 19732d98-c1e9-4681-9d92-70dede18db37
      job-name: elasticsearch-data-generator
    name: elasticsearch-data-generator-jjz9x
    namespace: elasticsearch
    ownerReferences:
    - apiVersion: batch/v1
      blockOwnerDeletion: true
      controller: true
      kind: Job
      name: elasticsearch-data-generator
      uid: 19732d98-c1e9-4681-9d92-70dede18db37
    resourceVersion: "11825"
    uid: 2477b9ab-4650-48a9-9ecc-737e92bb973d
  spec:
    containers:
    - command:
      - /bin/sh
      - -c
      - |
        # Create sample index
        curl -X PUT "elasticsearch-service:9200/sample-logs" -H 'Content-Type: application/json' -d '{
          "mappings": {
            "properties": {
              "timestamp": { "type": "date" },
              "level": { "type": "keyword" },
              "message": { "type": "text" },
              "service": { "type": "keyword" },
              "response_time": { "type": "integer" }
            }
          }
        }'

        # Generate sample data
        for i in {1..1000}; do
          curl -X POST "elasticsearch-service:9200/sample-logs/_doc" -H 'Content-Type: application/json' -d "{
            \"timestamp\": \"$(date -u +%Y-%m-%dT%H:%M:%S.%3NZ)\",
            \"level\": \"$([ $((RANDOM % 3)) -eq 0 ] && echo 'ERROR' || [ $((RANDOM % 2)) -eq 0 ] && echo 'WARN' || echo 'INFO')\",
            \"message\": \"Sample log message $i\",
            \"service\": \"$([ $((RANDOM % 4)) -eq 0 ] && echo 'web' || [ $((RANDOM % 3)) -eq 0 ] && echo 'api' || [ $((RANDOM % 2)) -eq 0 ] && echo 'db' || echo 'cache')\",
            \"response_time\": $((RANDOM % 1000 + 10))
          }"
          sleep 0.1
        done

        # Create some searches to generate metrics
        for i in {1..50}; do
          curl -X GET "elasticsearch-service:9200/sample-logs/_search" -H 'Content-Type: application/json' -d '{
            "query": {
              "match": {
                "message": "sample"
              }
            },
            "size": 10
          }'
          sleep 0.2
        done
      image: curlimages/curl:latest
      imagePullPolicy: Always
      name: data-generator
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-w7nxp
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-10-0-3-157.us-west-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-w7nxp
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T14:31:55Z"
      status: "False"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T14:31:50Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T14:31:54Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T14:31:54Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T14:31:50Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://0e6544836c366c82ee8838fa108ba741dd9758f314481fb690602137c81370d3
      image: docker.io/curlimages/curl:latest
      imageID: docker.io/curlimages/curl@sha256:4026b29997dc7c823b51c164b71e2b51e0fd95cce4601f78202c513d97da2922
      lastState: {}
      name: data-generator
      ready: false
      resources: {}
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://0e6544836c366c82ee8838fa108ba741dd9758f314481fb690602137c81370d3
          exitCode: 0
          finishedAt: "2025-09-03T14:31:54Z"
          reason: Completed
          startedAt: "2025-09-03T14:31:53Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-w7nxp
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.0.3.157
    hostIPs:
    - ip: 10.0.3.157
    phase: Succeeded
    podIP: 10.0.3.36
    podIPs:
    - ip: 10.0.3.36
    qosClass: BestEffort
    startTime: "2025-09-03T14:31:50Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-09-03T15:14:21Z"
    generateName: kibana-784545c5c9-
    generation: 1
    labels:
      app: kibana
      pod-template-hash: 784545c5c9
    name: kibana-784545c5c9-fjcqd
    namespace: elasticsearch
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: kibana-784545c5c9
      uid: 0ec54ae2-8b0b-416d-8a23-49716be42e1d
    resourceVersion: "19860"
    uid: 7339f47f-5bbe-4819-ae46-fb8ebf208ed7
  spec:
    containers:
    - env:
      - name: ELASTICSEARCH_HOSTS
        value: http://elasticsearch-service:9200
      - name: SERVER_NAME
        value: kibana
      - name: SERVER_HOST
        value: 0.0.0.0
      - name: XPACK_SECURITY_ENABLED
        value: "false"
      - name: XPACK_FLEET_ENABLED
        value: "false"
      - name: XPACK_INGEST_MANAGER_ENABLED
        value: "false"
      - name: TELEMETRY_ENABLED
        value: "false"
      - name: XPACK_TELEMETRY_ENABLED
        value: "false"
      - name: XPACK_CLOUD_ENABLED
        value: "false"
      - name: XPACK_CLOUD_SECURITY_POSTURE_ENABLED
        value: "false"
      - name: XPACK_CLOUD_DEFEND_ENABLED
        value: "false"
      - name: XPACK_CLOUD_EXPERIMENTS_ENABLED
        value: "false"
      - name: XPACK_CLOUD_INTEGRATIONS_ENABLED
        value: "false"
      - name: XPACK_ML_ENABLED
        value: "false"
      - name: XPACK_WATCHER_ENABLED
        value: "false"
      - name: XPACK_GRAPH_ENABLED
        value: "false"
      - name: XPACK_REPORTING_ENABLED
        value: "false"
      - name: XPACK_CANVAS_ENABLED
        value: "false"
      - name: XPACK_MAPS_ENABLED
        value: "false"
      - name: XPACK_UPTIME_ENABLED
        value: "false"
      - name: XPACK_APM_ENABLED
        value: "false"
      - name: XPACK_INFRA_ENABLED
        value: "false"
      - name: XPACK_LOGS_ENABLED
        value: "false"
      - name: XPACK_METRICS_ENABLED
        value: "false"
      - name: XPACK_SYNTHETICS_ENABLED
        value: "false"
      - name: XPACK_OBSERVABILITY_ENABLED
        value: "false"
      - name: XPACK_HOME_ENABLED
        value: "false"
      - name: NEWSFEED_ENABLED
        value: "false"
      - name: XPACK_ENCRYPTEDSAVEDOBJECTS_ENCRYPTIONKEY
        value: something_at_least_32_characters_long
      - name: XPACK_REPORTING_ENCRYPTIONKEY
        value: something_at_least_32_characters_long
      - name: XPACK_SECURITY_ENCRYPTIONKEY
        value: something_at_least_32_characters_long
      image: docker.elastic.co/kibana/kibana:8.11.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /api/status
          port: 5601
          scheme: HTTP
        initialDelaySeconds: 180
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      name: kibana
      ports:
      - containerPort: 5601
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /api/status
          port: 5601
          scheme: HTTP
        initialDelaySeconds: 90
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      resources:
        limits:
          cpu: 500m
          memory: 1Gi
        requests:
          cpu: 250m
          memory: 512Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-t6xjb
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-10-0-3-157.us-west-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-t6xjb
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T15:14:21Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T15:14:21Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T15:15:56Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T15:15:56Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T15:14:21Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 250m
        memory: 512Mi
      containerID: containerd://58465a2e8703f7f93d8816469d98f8e5bce926cca5d4543ba3b244da72ce8771
      image: docker.elastic.co/kibana/kibana:8.11.0
      imageID: docker.elastic.co/kibana/kibana@sha256:76773735fa086882909add84132a59d1765686d0fc170b35990acab814cf4a72
      lastState: {}
      name: kibana
      ready: true
      resources:
        limits:
          cpu: 500m
          memory: 1Gi
        requests:
          cpu: 250m
          memory: 512Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-03T15:14:21Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-t6xjb
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.0.3.157
    hostIPs:
    - ip: 10.0.3.157
    phase: Running
    podIP: 10.0.3.36
    podIPs:
    - ip: 10.0.3.36
    qosClass: Burstable
    startTime: "2025-09-03T15:14:21Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-09-03T16:59:58Z"
    generateName: kibana-azure-d8cff6d88-
    generation: 1
    labels:
      app: kibana-azure
      pod-template-hash: d8cff6d88
    name: kibana-azure-d8cff6d88-g8gq2
    namespace: elasticsearch
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: kibana-azure-d8cff6d88
      uid: be4ef2de-5380-4d60-858c-251d6ce5a59e
    resourceVersion: "37129"
    uid: 05134ff0-afe6-48bb-b3e0-918c8c5180e8
  spec:
    containers:
    - env:
      - name: ELASTICSEARCH_HOSTS
        value: http://elasticsearch-azure-service:9200
      - name: xpack.security.enabled
        value: "false"
      - name: xpack.fleet.enabled
        value: "false"
      - name: xpack.ingestManager.enabled
        value: "false"
      - name: telemetry.enabled
        value: "false"
      image: docker.elastic.co/kibana/kibana:8.11.0
      imagePullPolicy: IfNotPresent
      name: kibana
      ports:
      - containerPort: 5601
        protocol: TCP
      resources:
        limits:
          cpu: 500m
          memory: 1Gi
        requests:
          cpu: 250m
          memory: 512Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vlkjp
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-10-0-3-157.us-west-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-vlkjp
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T16:59:59Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T16:59:58Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T16:59:59Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T16:59:59Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T16:59:58Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 250m
        memory: 512Mi
      containerID: containerd://cf2520519bc2c15f1aed7f65a019a892e8413a0ab29c99cdd76375b9b438dad4
      image: docker.elastic.co/kibana/kibana:8.11.0
      imageID: docker.elastic.co/kibana/kibana@sha256:76773735fa086882909add84132a59d1765686d0fc170b35990acab814cf4a72
      lastState: {}
      name: kibana
      ready: true
      resources:
        limits:
          cpu: 500m
          memory: 1Gi
        requests:
          cpu: 250m
          memory: 512Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-03T16:59:59Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vlkjp
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.0.3.157
    hostIPs:
    - ip: 10.0.3.157
    phase: Running
    podIP: 10.0.3.86
    podIPs:
    - ip: 10.0.3.86
    qosClass: Burstable
    startTime: "2025-09-03T16:59:58Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-09-03T14:34:10Z"
    generateName: simple-data-generator-
    generation: 1
    labels:
      batch.kubernetes.io/controller-uid: e177b936-5ea1-4a00-9a42-5aa08f2e6196
      batch.kubernetes.io/job-name: simple-data-generator
      controller-uid: e177b936-5ea1-4a00-9a42-5aa08f2e6196
      job-name: simple-data-generator
    name: simple-data-generator-79rch
    namespace: elasticsearch
    ownerReferences:
    - apiVersion: batch/v1
      blockOwnerDeletion: true
      controller: true
      kind: Job
      name: simple-data-generator
      uid: e177b936-5ea1-4a00-9a42-5aa08f2e6196
    resourceVersion: "12261"
    uid: 9def2b39-b155-4755-8d6c-9593927009f7
  spec:
    containers:
    - command:
      - /bin/sh
      - -c
      - |
        # Create sample index with simpler mapping
        curl -X PUT "elasticsearch-service:9200/sample-logs" -H 'Content-Type: application/json' -d '{
          "mappings": {
            "properties": {
              "timestamp": { "type": "date", "format": "yyyy-MM-dd HH:mm:ss" },
              "level": { "type": "keyword" },
              "message": { "type": "text" },
              "service": { "type": "keyword" },
              "response_time": { "type": "integer" }
            }
          }
        }'

        # Generate sample data with proper date format
        for i in {1..500}; do
          curl -X POST "elasticsearch-service:9200/sample-logs/_doc" -H 'Content-Type: application/json' -d "{
            \"timestamp\": \"$(date '+%Y-%m-%d %H:%M:%S')\",
            \"level\": \"$([ $((RANDOM % 3)) -eq 0 ] && echo 'ERROR' || [ $((RANDOM % 2)) -eq 0 ] && echo 'WARN' || echo 'INFO')\",
            \"message\": \"Sample log message number $i with some searchable content\",
            \"service\": \"$([ $((RANDOM % 4)) -eq 0 ] && echo 'web' || [ $((RANDOM % 3)) -eq 0 ] && echo 'api' || [ $((RANDOM % 2)) -eq 0 ] && echo 'db' || echo 'cache')\",
            \"response_time\": $((RANDOM % 1000 + 10))
          }"
          sleep 0.05
        done

        # Create some searches to generate metrics
        for i in {1..20}; do
          curl -X GET "elasticsearch-service:9200/sample-logs/_search" -H 'Content-Type: application/json' -d '{
            "query": {
              "match": {
                "message": "sample"
              }
            },
            "size": 10
          }'
          sleep 0.1
        done

        echo "Data generation completed successfully!"
      image: curlimages/curl:latest
      imagePullPolicy: Always
      name: data-generator
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wvd8t
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-10-0-3-157.us-west-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-wvd8t
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T14:34:13Z"
      status: "False"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T14:34:10Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T14:34:10Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T14:34:10Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T14:34:10Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://30752d8ceadd85a7477355885f45f171f93d46b193d7c265ecc179a4f3ef5b7a
      image: docker.io/curlimages/curl:latest
      imageID: docker.io/curlimages/curl@sha256:4026b29997dc7c823b51c164b71e2b51e0fd95cce4601f78202c513d97da2922
      lastState: {}
      name: data-generator
      ready: false
      resources: {}
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://30752d8ceadd85a7477355885f45f171f93d46b193d7c265ecc179a4f3ef5b7a
          exitCode: 0
          finishedAt: "2025-09-03T14:34:11Z"
          reason: Completed
          startedAt: "2025-09-03T14:34:11Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wvd8t
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.0.3.157
    hostIPs:
    - ip: 10.0.3.157
    phase: Succeeded
    podIP: 10.0.3.36
    podIPs:
    - ip: 10.0.3.36
    qosClass: BestEffort
    startTime: "2025-09-03T14:34:10Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-09-03T14:04:48Z"
    generateName: aws-node-
    generation: 1
    labels:
      app.kubernetes.io/instance: aws-vpc-cni
      app.kubernetes.io/name: aws-node
      controller-revision-hash: 7bdc64db45
      k8s-app: aws-node
      pod-template-generation: "1"
    name: aws-node-hpxfb
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: aws-node
      uid: b77db2e1-f733-4768-986e-669756eeac4a
    resourceVersion: "7136"
    uid: 9a7e7e41-721b-47a5-bfee-8cf790a4521e
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ip-10-0-3-157.us-west-2.compute.internal
    containers:
    - env:
      - name: ADDITIONAL_ENI_TAGS
        value: '{}'
      - name: ANNOTATE_POD_IP
        value: "false"
      - name: AWS_VPC_CNI_NODE_PORT_SUPPORT
        value: "true"
      - name: AWS_VPC_ENI_MTU
        value: "9001"
      - name: AWS_VPC_K8S_CNI_CUSTOM_NETWORK_CFG
        value: "false"
      - name: AWS_VPC_K8S_CNI_EXTERNALSNAT
        value: "false"
      - name: AWS_VPC_K8S_CNI_LOGLEVEL
        value: DEBUG
      - name: AWS_VPC_K8S_CNI_LOG_FILE
        value: /host/var/log/aws-routed-eni/ipamd.log
      - name: AWS_VPC_K8S_CNI_RANDOMIZESNAT
        value: prng
      - name: AWS_VPC_K8S_CNI_VETHPREFIX
        value: eni
      - name: AWS_VPC_K8S_PLUGIN_LOG_FILE
        value: /var/log/aws-routed-eni/plugin.log
      - name: AWS_VPC_K8S_PLUGIN_LOG_LEVEL
        value: DEBUG
      - name: CLUSTER_NAME
        value: elasticsearch-dev
      - name: DISABLE_INTROSPECTION
        value: "false"
      - name: DISABLE_METRICS
        value: "false"
      - name: DISABLE_NETWORK_RESOURCE_PROVISIONING
        value: "false"
      - name: ENABLE_IPv4
        value: "true"
      - name: ENABLE_IPv6
        value: "false"
      - name: ENABLE_POD_ENI
        value: "false"
      - name: ENABLE_PREFIX_DELEGATION
        value: "false"
      - name: ENABLE_SUBNET_DISCOVERY
        value: "true"
      - name: NETWORK_POLICY_ENFORCING_MODE
        value: standard
      - name: VPC_CNI_VERSION
        value: v1.19.5
      - name: VPC_ID
        value: vpc-019a474c4bf3b10bf
      - name: WARM_ENI_TARGET
        value: "1"
      - name: WARM_PREFIX_TARGET
        value: "1"
      - name: MY_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: MY_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      image: 602401143452.dkr.ecr.us-west-2.amazonaws.com/amazon-k8s-cni:v1.19.5-eksbuild.1
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /app/grpc-health-probe
          - -addr=:50051
          - -connect-timeout=5s
          - -rpc-timeout=5s
        failureThreshold: 3
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      name: aws-node
      ports:
      - containerPort: 61678
        hostPort: 61678
        name: metrics
        protocol: TCP
      readinessProbe:
        exec:
          command:
          - /app/grpc-health-probe
          - -addr=:50051
          - -connect-timeout=5s
          - -rpc-timeout=5s
        failureThreshold: 3
        initialDelaySeconds: 1
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      resources:
        requests:
          cpu: 25m
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
          - NET_RAW
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cni-bin-dir
      - mountPath: /host/etc/cni/net.d
        name: cni-net-dir
      - mountPath: /host/var/log/aws-routed-eni
        name: log-dir
      - mountPath: /var/run/aws-node
        name: run-dir
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-r7ggl
        readOnly: true
    - args:
      - --enable-ipv6=false
      - --enable-network-policy=false
      - --enable-cloudwatch-logs=false
      - --enable-policy-event-logs=false
      - --log-file=/var/log/aws-routed-eni/network-policy-agent.log
      - --metrics-bind-addr=:8162
      - --health-probe-bind-addr=:8163
      - --conntrack-cache-cleanup-period=300
      env:
      - name: MY_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: 602401143452.dkr.ecr.us-west-2.amazonaws.com/amazon/aws-network-policy-agent:v1.2.1-eksbuild.1
      imagePullPolicy: Always
      name: aws-eks-nodeagent
      ports:
      - containerPort: 8162
        hostPort: 8162
        name: agentmetrics
        protocol: TCP
      resources:
        requests:
          cpu: 25m
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cni-bin-dir
      - mountPath: /sys/fs/bpf
        name: bpf-pin-path
      - mountPath: /var/log/aws-routed-eni
        name: log-dir
      - mountPath: /var/run/aws-node
        name: run-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-r7ggl
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - env:
      - name: DISABLE_TCP_EARLY_DEMUX
        value: "false"
      - name: ENABLE_IPv6
        value: "false"
      image: 602401143452.dkr.ecr.us-west-2.amazonaws.com/amazon-k8s-cni-init:v1.19.5-eksbuild.1
      imagePullPolicy: Always
      name: aws-vpc-cni-init
      resources:
        requests:
          cpu: 25m
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cni-bin-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-r7ggl
        readOnly: true
    nodeName: ip-10-0-3-157.us-west-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: aws-node
    serviceAccountName: aws-node
    terminationGracePeriodSeconds: 10
    tolerations:
    - operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - hostPath:
        path: /sys/fs/bpf
        type: ""
      name: bpf-pin-path
    - hostPath:
        path: /opt/cni/bin
        type: ""
      name: cni-bin-dir
    - hostPath:
        path: /etc/cni/net.d
        type: ""
      name: cni-net-dir
    - hostPath:
        path: /var/log/aws-routed-eni
        type: DirectoryOrCreate
      name: log-dir
    - hostPath:
        path: /var/run/aws-node
        type: DirectoryOrCreate
      name: run-dir
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: xtables-lock
    - name: kube-api-access-r7ggl
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T14:04:55Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T14:04:57Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T14:05:04Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T14:05:04Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T14:04:48Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 25m
      containerID: containerd://37a12411ce1c83f5bebbb1e4fc8ad2f28fd2d34e8a17707653e46431331c1f48
      image: 602401143452.dkr.ecr.us-west-2.amazonaws.com/amazon/aws-network-policy-agent:v1.2.1-eksbuild.1
      imageID: 602401143452.dkr.ecr.us-west-2.amazonaws.com/amazon/aws-network-policy-agent@sha256:cd2942d29e128e2b1028ba44567863e8473581684c8e2a701c88993bb6652ba3
      lastState: {}
      name: aws-eks-nodeagent
      ready: true
      resources:
        requests:
          cpu: 25m
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-03T14:05:03Z"
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cni-bin-dir
      - mountPath: /sys/fs/bpf
        name: bpf-pin-path
      - mountPath: /var/log/aws-routed-eni
        name: log-dir
      - mountPath: /var/run/aws-node
        name: run-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-r7ggl
        readOnly: true
        recursiveReadOnly: Disabled
    - allocatedResources:
        cpu: 25m
      containerID: containerd://4c0f388fe8cd0389a74c28d74f7e6536a5063301557c24db33634c0a23fdc9f2
      image: 602401143452.dkr.ecr.us-west-2.amazonaws.com/amazon-k8s-cni:v1.19.5-eksbuild.1
      imageID: 602401143452.dkr.ecr.us-west-2.amazonaws.com/amazon-k8s-cni@sha256:a1d7b4bb07c9c30b583858cec8a374ab1cdbbd0d83231004a740fef3eee53a6f
      lastState: {}
      name: aws-node
      ready: true
      resources:
        requests:
          cpu: 25m
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-03T14:04:59Z"
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cni-bin-dir
      - mountPath: /host/etc/cni/net.d
        name: cni-net-dir
      - mountPath: /host/var/log/aws-routed-eni
        name: log-dir
      - mountPath: /var/run/aws-node
        name: run-dir
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-r7ggl
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.0.3.157
    hostIPs:
    - ip: 10.0.3.157
    initContainerStatuses:
    - allocatedResources:
        cpu: 25m
      containerID: containerd://fad4ba9ee7415fd8e5dbf6d423df75d6160e37191831c21d2cf304c19e3f1274
      image: 602401143452.dkr.ecr.us-west-2.amazonaws.com/amazon-k8s-cni-init:v1.19.5-eksbuild.1
      imageID: 602401143452.dkr.ecr.us-west-2.amazonaws.com/amazon-k8s-cni-init@sha256:b39519ca70b1ba2346111609b0ad9f7e5bb64823de02ce8627ba05dc58f13b8e
      lastState: {}
      name: aws-vpc-cni-init
      ready: true
      resources:
        requests:
          cpu: 25m
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://fad4ba9ee7415fd8e5dbf6d423df75d6160e37191831c21d2cf304c19e3f1274
          exitCode: 0
          finishedAt: "2025-09-03T14:04:54Z"
          reason: Completed
          startedAt: "2025-09-03T14:04:54Z"
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cni-bin-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-r7ggl
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.0.3.157
    podIPs:
    - ip: 10.0.3.157
    qosClass: Burstable
    startTime: "2025-09-03T14:04:48Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-09-03T14:04:46Z"
    generateName: aws-node-
    generation: 1
    labels:
      app.kubernetes.io/instance: aws-vpc-cni
      app.kubernetes.io/name: aws-node
      controller-revision-hash: 7bdc64db45
      k8s-app: aws-node
      pod-template-generation: "1"
    name: aws-node-nd6dl
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: aws-node
      uid: b77db2e1-f733-4768-986e-669756eeac4a
    resourceVersion: "7088"
    uid: ef6d6792-9839-4ff5-92cf-c91cb87da9b5
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ip-10-0-2-41.us-west-2.compute.internal
    containers:
    - env:
      - name: ADDITIONAL_ENI_TAGS
        value: '{}'
      - name: ANNOTATE_POD_IP
        value: "false"
      - name: AWS_VPC_CNI_NODE_PORT_SUPPORT
        value: "true"
      - name: AWS_VPC_ENI_MTU
        value: "9001"
      - name: AWS_VPC_K8S_CNI_CUSTOM_NETWORK_CFG
        value: "false"
      - name: AWS_VPC_K8S_CNI_EXTERNALSNAT
        value: "false"
      - name: AWS_VPC_K8S_CNI_LOGLEVEL
        value: DEBUG
      - name: AWS_VPC_K8S_CNI_LOG_FILE
        value: /host/var/log/aws-routed-eni/ipamd.log
      - name: AWS_VPC_K8S_CNI_RANDOMIZESNAT
        value: prng
      - name: AWS_VPC_K8S_CNI_VETHPREFIX
        value: eni
      - name: AWS_VPC_K8S_PLUGIN_LOG_FILE
        value: /var/log/aws-routed-eni/plugin.log
      - name: AWS_VPC_K8S_PLUGIN_LOG_LEVEL
        value: DEBUG
      - name: CLUSTER_NAME
        value: elasticsearch-dev
      - name: DISABLE_INTROSPECTION
        value: "false"
      - name: DISABLE_METRICS
        value: "false"
      - name: DISABLE_NETWORK_RESOURCE_PROVISIONING
        value: "false"
      - name: ENABLE_IPv4
        value: "true"
      - name: ENABLE_IPv6
        value: "false"
      - name: ENABLE_POD_ENI
        value: "false"
      - name: ENABLE_PREFIX_DELEGATION
        value: "false"
      - name: ENABLE_SUBNET_DISCOVERY
        value: "true"
      - name: NETWORK_POLICY_ENFORCING_MODE
        value: standard
      - name: VPC_CNI_VERSION
        value: v1.19.5
      - name: VPC_ID
        value: vpc-019a474c4bf3b10bf
      - name: WARM_ENI_TARGET
        value: "1"
      - name: WARM_PREFIX_TARGET
        value: "1"
      - name: MY_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: MY_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      image: 602401143452.dkr.ecr.us-west-2.amazonaws.com/amazon-k8s-cni:v1.19.5-eksbuild.1
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /app/grpc-health-probe
          - -addr=:50051
          - -connect-timeout=5s
          - -rpc-timeout=5s
        failureThreshold: 3
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      name: aws-node
      ports:
      - containerPort: 61678
        hostPort: 61678
        name: metrics
        protocol: TCP
      readinessProbe:
        exec:
          command:
          - /app/grpc-health-probe
          - -addr=:50051
          - -connect-timeout=5s
          - -rpc-timeout=5s
        failureThreshold: 3
        initialDelaySeconds: 1
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      resources:
        requests:
          cpu: 25m
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
          - NET_RAW
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cni-bin-dir
      - mountPath: /host/etc/cni/net.d
        name: cni-net-dir
      - mountPath: /host/var/log/aws-routed-eni
        name: log-dir
      - mountPath: /var/run/aws-node
        name: run-dir
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vxwjx
        readOnly: true
    - args:
      - --enable-ipv6=false
      - --enable-network-policy=false
      - --enable-cloudwatch-logs=false
      - --enable-policy-event-logs=false
      - --log-file=/var/log/aws-routed-eni/network-policy-agent.log
      - --metrics-bind-addr=:8162
      - --health-probe-bind-addr=:8163
      - --conntrack-cache-cleanup-period=300
      env:
      - name: MY_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: 602401143452.dkr.ecr.us-west-2.amazonaws.com/amazon/aws-network-policy-agent:v1.2.1-eksbuild.1
      imagePullPolicy: Always
      name: aws-eks-nodeagent
      ports:
      - containerPort: 8162
        hostPort: 8162
        name: agentmetrics
        protocol: TCP
      resources:
        requests:
          cpu: 25m
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cni-bin-dir
      - mountPath: /sys/fs/bpf
        name: bpf-pin-path
      - mountPath: /var/log/aws-routed-eni
        name: log-dir
      - mountPath: /var/run/aws-node
        name: run-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vxwjx
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - env:
      - name: DISABLE_TCP_EARLY_DEMUX
        value: "false"
      - name: ENABLE_IPv6
        value: "false"
      image: 602401143452.dkr.ecr.us-west-2.amazonaws.com/amazon-k8s-cni-init:v1.19.5-eksbuild.1
      imagePullPolicy: Always
      name: aws-vpc-cni-init
      resources:
        requests:
          cpu: 25m
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cni-bin-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vxwjx
        readOnly: true
    nodeName: ip-10-0-2-41.us-west-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: aws-node
    serviceAccountName: aws-node
    terminationGracePeriodSeconds: 10
    tolerations:
    - operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - hostPath:
        path: /sys/fs/bpf
        type: ""
      name: bpf-pin-path
    - hostPath:
        path: /opt/cni/bin
        type: ""
      name: cni-bin-dir
    - hostPath:
        path: /etc/cni/net.d
        type: ""
      name: cni-net-dir
    - hostPath:
        path: /var/log/aws-routed-eni
        type: DirectoryOrCreate
      name: log-dir
    - hostPath:
        path: /var/run/aws-node
        type: DirectoryOrCreate
      name: run-dir
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: xtables-lock
    - name: kube-api-access-vxwjx
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T14:04:53Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T14:04:55Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T14:05:00Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T14:05:00Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T14:04:46Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 25m
      containerID: containerd://e48894bfc5c0253d1a753d02b127b1f31e252ec4ac8e8df6212bbc10018200ef
      image: 602401143452.dkr.ecr.us-west-2.amazonaws.com/amazon/aws-network-policy-agent:v1.2.1-eksbuild.1
      imageID: 602401143452.dkr.ecr.us-west-2.amazonaws.com/amazon/aws-network-policy-agent@sha256:cd2942d29e128e2b1028ba44567863e8473581684c8e2a701c88993bb6652ba3
      lastState: {}
      name: aws-eks-nodeagent
      ready: true
      resources:
        requests:
          cpu: 25m
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-03T14:04:59Z"
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cni-bin-dir
      - mountPath: /sys/fs/bpf
        name: bpf-pin-path
      - mountPath: /var/log/aws-routed-eni
        name: log-dir
      - mountPath: /var/run/aws-node
        name: run-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vxwjx
        readOnly: true
        recursiveReadOnly: Disabled
    - allocatedResources:
        cpu: 25m
      containerID: containerd://306d42ea80aa70eb7c4737cfdf08f5bcba66f4436d1cff201b4634e791d51514
      image: 602401143452.dkr.ecr.us-west-2.amazonaws.com/amazon-k8s-cni:v1.19.5-eksbuild.1
      imageID: 602401143452.dkr.ecr.us-west-2.amazonaws.com/amazon-k8s-cni@sha256:a1d7b4bb07c9c30b583858cec8a374ab1cdbbd0d83231004a740fef3eee53a6f
      lastState: {}
      name: aws-node
      ready: true
      resources:
        requests:
          cpu: 25m
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-03T14:04:57Z"
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cni-bin-dir
      - mountPath: /host/etc/cni/net.d
        name: cni-net-dir
      - mountPath: /host/var/log/aws-routed-eni
        name: log-dir
      - mountPath: /var/run/aws-node
        name: run-dir
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vxwjx
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.0.2.41
    hostIPs:
    - ip: 10.0.2.41
    initContainerStatuses:
    - allocatedResources:
        cpu: 25m
      containerID: containerd://ebe9ea84eea675338c34570f05e723310bfd1872d37e624e42ff3ea08888cebd
      image: 602401143452.dkr.ecr.us-west-2.amazonaws.com/amazon-k8s-cni-init:v1.19.5-eksbuild.1
      imageID: 602401143452.dkr.ecr.us-west-2.amazonaws.com/amazon-k8s-cni-init@sha256:b39519ca70b1ba2346111609b0ad9f7e5bb64823de02ce8627ba05dc58f13b8e
      lastState: {}
      name: aws-vpc-cni-init
      ready: true
      resources:
        requests:
          cpu: 25m
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://ebe9ea84eea675338c34570f05e723310bfd1872d37e624e42ff3ea08888cebd
          exitCode: 0
          finishedAt: "2025-09-03T14:04:52Z"
          reason: Completed
          startedAt: "2025-09-03T14:04:52Z"
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cni-bin-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vxwjx
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.0.2.41
    podIPs:
    - ip: 10.0.2.41
    qosClass: Burstable
    startTime: "2025-09-03T14:04:45Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-09-03T13:23:36Z"
    generateName: coredns-7bf648ff5d-
    generation: 1
    labels:
      eks.amazonaws.com/component: coredns
      k8s-app: kube-dns
      pod-template-hash: 7bf648ff5d
    name: coredns-7bf648ff5d-fwwff
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: coredns-7bf648ff5d
      uid: 9fbd1c31-7a77-4e2d-bb04-7d304c6d07b0
    resourceVersion: "7116"
    uid: c28cb51f-82a4-4111-bc65-c5c2df65afc8
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: kubernetes.io/os
              operator: In
              values:
              - linux
            - key: kubernetes.io/arch
              operator: In
              values:
              - amd64
              - arm64
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - kube-dns
            topologyKey: kubernetes.io/hostname
          weight: 100
    containers:
    - args:
      - -conf
      - /etc/coredns/Corefile
      image: 602401143452.dkr.ecr.us-west-2.amazonaws.com/eks/coredns:v1.12.1-eksbuild.2
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /health
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: coredns
      ports:
      - containerPort: 53
        name: dns
        protocol: UDP
      - containerPort: 53
        name: dns-tcp
        protocol: TCP
      - containerPort: 9153
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /ready
          port: 8181
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          memory: 170Mi
        requests:
          cpu: 100m
          memory: 70Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add:
          - NET_BIND_SERVICE
          drop:
          - ALL
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/coredns
        name: config-volume
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dksx5
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    nodeName: ip-10-0-2-41.us-west-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: coredns
    serviceAccountName: coredns
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    topologySpreadConstraints:
    - labelSelector:
        matchLabels:
          k8s-app: kube-dns
      maxSkew: 1
      topologyKey: topology.kubernetes.io/zone
      whenUnsatisfiable: ScheduleAnyway
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: Corefile
          path: Corefile
        name: coredns
      name: config-volume
    - name: kube-api-access-dksx5
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T14:05:04Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T14:04:59Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T14:05:04Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T14:05:04Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T14:04:59Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 100m
        memory: 70Mi
      containerID: containerd://617c2f82eeb75d7f9a777601856ce6b2b30d9689ed93465d486d81741bf2fe57
      image: 602401143452.dkr.ecr.us-west-2.amazonaws.com/eks/coredns:v1.12.1-eksbuild.2
      imageID: 602401143452.dkr.ecr.us-west-2.amazonaws.com/eks/coredns@sha256:0e6933e6d213752941bf9576656169915e79a7b555634da4b6deb1a0af86ec89
      lastState: {}
      name: coredns
      ready: true
      resources:
        limits:
          memory: 170Mi
        requests:
          cpu: 100m
          memory: 70Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-03T14:05:03Z"
      volumeMounts:
      - mountPath: /etc/coredns
        name: config-volume
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dksx5
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.0.2.41
    hostIPs:
    - ip: 10.0.2.41
    phase: Running
    podIP: 10.0.2.154
    podIPs:
    - ip: 10.0.2.154
    qosClass: Burstable
    startTime: "2025-09-03T14:04:59Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-09-03T13:23:36Z"
    generateName: coredns-7bf648ff5d-
    generation: 1
    labels:
      eks.amazonaws.com/component: coredns
      k8s-app: kube-dns
      pod-template-hash: 7bf648ff5d
    name: coredns-7bf648ff5d-hdhjz
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: coredns-7bf648ff5d
      uid: 9fbd1c31-7a77-4e2d-bb04-7d304c6d07b0
    resourceVersion: "7122"
    uid: a2282d56-83d9-4d86-804b-7373a110f92d
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: kubernetes.io/os
              operator: In
              values:
              - linux
            - key: kubernetes.io/arch
              operator: In
              values:
              - amd64
              - arm64
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - kube-dns
            topologyKey: kubernetes.io/hostname
          weight: 100
    containers:
    - args:
      - -conf
      - /etc/coredns/Corefile
      image: 602401143452.dkr.ecr.us-west-2.amazonaws.com/eks/coredns:v1.12.1-eksbuild.2
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /health
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: coredns
      ports:
      - containerPort: 53
        name: dns
        protocol: UDP
      - containerPort: 53
        name: dns-tcp
        protocol: TCP
      - containerPort: 9153
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /ready
          port: 8181
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          memory: 170Mi
        requests:
          cpu: 100m
          memory: 70Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add:
          - NET_BIND_SERVICE
          drop:
          - ALL
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/coredns
        name: config-volume
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-td9v7
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    nodeName: ip-10-0-2-41.us-west-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: coredns
    serviceAccountName: coredns
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    topologySpreadConstraints:
    - labelSelector:
        matchLabels:
          k8s-app: kube-dns
      maxSkew: 1
      topologyKey: topology.kubernetes.io/zone
      whenUnsatisfiable: ScheduleAnyway
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: Corefile
          path: Corefile
        name: coredns
      name: config-volume
    - name: kube-api-access-td9v7
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T14:05:04Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T14:04:59Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T14:05:04Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T14:05:04Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T14:04:59Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 100m
        memory: 70Mi
      containerID: containerd://1171358e44ee47e87d919663792c82cd2ff7b1d35e90ae6f0d7833a8c941275b
      image: 602401143452.dkr.ecr.us-west-2.amazonaws.com/eks/coredns:v1.12.1-eksbuild.2
      imageID: 602401143452.dkr.ecr.us-west-2.amazonaws.com/eks/coredns@sha256:0e6933e6d213752941bf9576656169915e79a7b555634da4b6deb1a0af86ec89
      lastState: {}
      name: coredns
      ready: true
      resources:
        limits:
          memory: 170Mi
        requests:
          cpu: 100m
          memory: 70Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-03T14:05:03Z"
      volumeMounts:
      - mountPath: /etc/coredns
        name: config-volume
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-td9v7
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.0.2.41
    hostIPs:
    - ip: 10.0.2.41
    phase: Running
    podIP: 10.0.2.165
    podIPs:
    - ip: 10.0.2.165
    qosClass: Burstable
    startTime: "2025-09-03T14:04:59Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-09-03T14:04:48Z"
    generateName: kube-proxy-
    generation: 1
    labels:
      controller-revision-hash: 56d9c68c99
      k8s-app: kube-proxy
      pod-template-generation: "1"
    name: kube-proxy-52kb4
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: kube-proxy
      uid: 929beffa-dbe6-4d12-9695-22e9f77be98e
    resourceVersion: "7037"
    uid: 4f3b8f0e-ba7d-495e-ad4a-309518b5fec5
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ip-10-0-3-157.us-west-2.compute.internal
    containers:
    - command:
      - kube-proxy
      - --v=2
      - --config=/var/lib/kube-proxy-config/config
      - --hostname-override=$(NODE_NAME)
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: 602401143452.dkr.ecr.us-west-2.amazonaws.com/eks/kube-proxy:v1.33.0-eksbuild.2
      imagePullPolicy: IfNotPresent
      name: kube-proxy
      resources:
        requests:
          cpu: 100m
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/log
        name: varlog
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /lib/modules
        name: lib-modules
        readOnly: true
      - mountPath: /var/lib/kube-proxy/
        name: kubeconfig
      - mountPath: /var/lib/kube-proxy-config/
        name: config
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7fkxd
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: ip-10-0-3-157.us-west-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: kube-proxy
    serviceAccountName: kube-proxy
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - hostPath:
        path: /var/log
        type: ""
      name: varlog
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: xtables-lock
    - hostPath:
        path: /lib/modules
        type: ""
      name: lib-modules
    - configMap:
        defaultMode: 420
        name: kube-proxy
      name: kubeconfig
    - configMap:
        defaultMode: 420
        name: kube-proxy-config
      name: config
    - name: kube-api-access-7fkxd
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T14:04:55Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T14:04:48Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T14:04:55Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T14:04:55Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T14:04:48Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 100m
      containerID: containerd://0928091ad6237f067a94b1258e621c2d1a6915503e171aebbc228af039ce9657
      image: 602401143452.dkr.ecr.us-west-2.amazonaws.com/eks/kube-proxy:v1.33.0-eksbuild.2
      imageID: 602401143452.dkr.ecr.us-west-2.amazonaws.com/eks/kube-proxy@sha256:c72783adb747a5f3222cb5b5c640b79b5df24d1922b15b94bb269bccf2a0880d
      lastState: {}
      name: kube-proxy
      ready: true
      resources:
        requests:
          cpu: 100m
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-03T14:04:55Z"
      volumeMounts:
      - mountPath: /var/log
        name: varlog
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /lib/modules
        name: lib-modules
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/lib/kube-proxy/
        name: kubeconfig
      - mountPath: /var/lib/kube-proxy-config/
        name: config
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7fkxd
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.0.3.157
    hostIPs:
    - ip: 10.0.3.157
    phase: Running
    podIP: 10.0.3.157
    podIPs:
    - ip: 10.0.3.157
    qosClass: Burstable
    startTime: "2025-09-03T14:04:48Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-09-03T14:04:46Z"
    generateName: kube-proxy-
    generation: 1
    labels:
      controller-revision-hash: 56d9c68c99
      k8s-app: kube-proxy
      pod-template-generation: "1"
    name: kube-proxy-7cskm
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: kube-proxy
      uid: 929beffa-dbe6-4d12-9695-22e9f77be98e
    resourceVersion: "7022"
    uid: 1ef42e2c-5679-4590-be3a-3ca43370d363
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ip-10-0-2-41.us-west-2.compute.internal
    containers:
    - command:
      - kube-proxy
      - --v=2
      - --config=/var/lib/kube-proxy-config/config
      - --hostname-override=$(NODE_NAME)
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: 602401143452.dkr.ecr.us-west-2.amazonaws.com/eks/kube-proxy:v1.33.0-eksbuild.2
      imagePullPolicy: IfNotPresent
      name: kube-proxy
      resources:
        requests:
          cpu: 100m
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/log
        name: varlog
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /lib/modules
        name: lib-modules
        readOnly: true
      - mountPath: /var/lib/kube-proxy/
        name: kubeconfig
      - mountPath: /var/lib/kube-proxy-config/
        name: config
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-j2lkj
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: ip-10-0-2-41.us-west-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: kube-proxy
    serviceAccountName: kube-proxy
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - hostPath:
        path: /var/log
        type: ""
      name: varlog
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: xtables-lock
    - hostPath:
        path: /lib/modules
        type: ""
      name: lib-modules
    - configMap:
        defaultMode: 420
        name: kube-proxy
      name: kubeconfig
    - configMap:
        defaultMode: 420
        name: kube-proxy-config
      name: config
    - name: kube-api-access-j2lkj
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T14:04:53Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T14:04:45Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T14:04:53Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T14:04:53Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T14:04:46Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 100m
      containerID: containerd://a1422886a5262178d69b9b1f585914db49888c6e7694ab7894007d7534587b78
      image: 602401143452.dkr.ecr.us-west-2.amazonaws.com/eks/kube-proxy:v1.33.0-eksbuild.2
      imageID: 602401143452.dkr.ecr.us-west-2.amazonaws.com/eks/kube-proxy@sha256:c72783adb747a5f3222cb5b5c640b79b5df24d1922b15b94bb269bccf2a0880d
      lastState: {}
      name: kube-proxy
      ready: true
      resources:
        requests:
          cpu: 100m
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-03T14:04:52Z"
      volumeMounts:
      - mountPath: /var/log
        name: varlog
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /lib/modules
        name: lib-modules
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/lib/kube-proxy/
        name: kubeconfig
      - mountPath: /var/lib/kube-proxy-config/
        name: config
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-j2lkj
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.0.2.41
    hostIPs:
    - ip: 10.0.2.41
    phase: Running
    podIP: 10.0.2.41
    podIPs:
    - ip: 10.0.2.41
    qosClass: Burstable
    startTime: "2025-09-03T14:04:45Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-09-03T14:17:58Z"
    generateName: elasticsearch-exporter-777466f6c5-
    generation: 1
    labels:
      app: elasticsearch-exporter
      pod-template-hash: 777466f6c5
      prometheus.io/port: "9114"
      prometheus.io/scrape: "true"
    name: elasticsearch-exporter-777466f6c5-hzbww
    namespace: monitoring
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: elasticsearch-exporter-777466f6c5
      uid: c698999c-64b8-4a84-8105-079fb6be6299
    resourceVersion: "9430"
    uid: b5abb22a-69e2-4d3c-8425-5eaeaee9a949
  spec:
    containers:
    - env:
      - name: ES_URI
        value: http://elasticsearch-service.elasticsearch.svc.cluster.local:9200
      - name: ES_ALL
        value: "true"
      - name: ES_INDICES
        value: "true"
      - name: ES_INDICES_SETTINGS
        value: "true"
      - name: ES_SNAPSHOTS
        value: "true"
      - name: ES_CLUSTERHEALTH
        value: "true"
      - name: ES_CLUSTERHEALTH_LEVEL
        value: indices
      image: justwatch/elasticsearch_exporter:1.1.0
      imagePullPolicy: IfNotPresent
      name: elasticsearch-exporter
      ports:
      - containerPort: 9114
        protocol: TCP
      resources:
        limits:
          cpu: 200m
          memory: 256Mi
        requests:
          cpu: 100m
          memory: 128Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-prs86
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-10-0-3-157.us-west-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-prs86
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T14:18:00Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T14:17:58Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T14:18:00Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T14:18:00Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T14:17:58Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 100m
        memory: 128Mi
      containerID: containerd://b20d1393a89d71e9de70472bc3526d5e959498652bda9e1f32163e18729933c6
      image: docker.io/justwatch/elasticsearch_exporter:1.1.0
      imageID: docker.io/justwatch/elasticsearch_exporter@sha256:0f94474f46a917d85657ee62ad6d01d30128198ed048014caf5471b9b7151b45
      lastState: {}
      name: elasticsearch-exporter
      ready: true
      resources:
        limits:
          cpu: 200m
          memory: 256Mi
        requests:
          cpu: 100m
          memory: 128Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-03T14:18:00Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-prs86
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.0.3.157
    hostIPs:
    - ip: 10.0.3.157
    phase: Running
    podIP: 10.0.3.74
    podIPs:
    - ip: 10.0.3.74
    qosClass: Burstable
    startTime: "2025-09-03T14:17:58Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-09-03T14:12:19Z"
    generateName: grafana-6f9897f555-
    generation: 1
    labels:
      app: grafana
      pod-template-hash: 6f9897f555
    name: grafana-6f9897f555-q2skt
    namespace: monitoring
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: grafana-6f9897f555
      uid: 0218243c-5647-4eae-be3a-6c290c4c378f
    resourceVersion: "8462"
    uid: 74372750-545d-4b86-8b55-992cf1bebd31
  spec:
    containers:
    - env:
      - name: GF_SECURITY_ADMIN_PASSWORD
        value: admin123
      - name: GF_USERS_ALLOW_SIGN_UP
        value: "false"
      image: grafana/grafana:latest
      imagePullPolicy: Always
      name: grafana
      ports:
      - containerPort: 3000
        protocol: TCP
      resources:
        limits:
          cpu: 200m
          memory: 512Mi
        requests:
          cpu: 100m
          memory: 256Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/grafana
        name: grafana-storage
      - mountPath: /etc/grafana/provisioning/datasources
        name: grafana-config
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-nxhhz
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-10-0-3-157.us-west-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: grafana-storage
    - configMap:
        defaultMode: 420
        name: grafana-datasources
      name: grafana-config
    - name: kube-api-access-nxhhz
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T14:12:33Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T14:12:19Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T14:12:33Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T14:12:33Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T14:12:19Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 100m
        memory: 256Mi
      containerID: containerd://b8af8e310b33c9dff5d228626cb2c3bc7e678cdfe60c322c00d88fc4508d842b
      image: docker.io/grafana/grafana:latest
      imageID: docker.io/grafana/grafana@sha256:a1701c2180249361737a99a01bc770db39381640e4d631825d38ff4535efa47d
      lastState: {}
      name: grafana
      ready: true
      resources:
        limits:
          cpu: 200m
          memory: 512Mi
        requests:
          cpu: 100m
          memory: 256Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-03T14:12:32Z"
      volumeMounts:
      - mountPath: /var/lib/grafana
        name: grafana-storage
      - mountPath: /etc/grafana/provisioning/datasources
        name: grafana-config
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-nxhhz
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.0.3.157
    hostIPs:
    - ip: 10.0.3.157
    phase: Running
    podIP: 10.0.3.19
    podIPs:
    - ip: 10.0.3.19
    qosClass: Burstable
    startTime: "2025-09-03T14:12:19Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/restartedAt: "2025-09-03T15:21:09+01:00"
    creationTimestamp: "2025-09-03T14:32:39Z"
    generateName: prometheus-86d5b77784-
    generation: 1
    labels:
      app: prometheus
      pod-template-hash: 86d5b77784
    name: prometheus-86d5b77784-6gx2n
    namespace: monitoring
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: prometheus-86d5b77784
      uid: 04f49848-e40b-45ce-9d49-23f50a32efe4
    resourceVersion: "11969"
    uid: 4a01749c-4ce7-44ff-83d1-3768bd8ab841
  spec:
    containers:
    - image: prom/prometheus:latest
      imagePullPolicy: Always
      name: prometheus
      ports:
      - containerPort: 9090
        protocol: TCP
      resources:
        limits:
          cpu: 500m
          memory: 1Gi
        requests:
          cpu: 250m
          memory: 512Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/prometheus
        name: prometheus-config
      - mountPath: /prometheus
        name: prometheus-storage
      - mountPath: /etc/prometheus/rules
        name: alert-rules
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rpfg4
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-10-0-3-157.us-west-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        name: prometheus-config
      name: prometheus-config
    - emptyDir: {}
      name: prometheus-storage
    - configMap:
        defaultMode: 420
        name: elasticsearch-monitoring-config
      name: alert-rules
    - name: kube-api-access-rpfg4
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T14:32:40Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T14:32:39Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T14:32:40Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T14:32:40Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-03T14:32:39Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 250m
        memory: 512Mi
      containerID: containerd://e4b494cf9a3dee4fee1c482427636909ffc38a72173a2c1ae3cf951f2bbc32ba
      image: docker.io/prom/prometheus:latest
      imageID: docker.io/prom/prometheus@sha256:63805ebb8d2b3920190daf1cb14a60871b16fd38bed42b857a3182bc621f4996
      lastState: {}
      name: prometheus
      ready: true
      resources:
        limits:
          cpu: 500m
          memory: 1Gi
        requests:
          cpu: 250m
          memory: 512Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-03T14:32:40Z"
      volumeMounts:
      - mountPath: /etc/prometheus
        name: prometheus-config
      - mountPath: /prometheus
        name: prometheus-storage
      - mountPath: /etc/prometheus/rules
        name: alert-rules
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rpfg4
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.0.3.157
    hostIPs:
    - ip: 10.0.3.157
    phase: Running
    podIP: 10.0.3.128
    podIPs:
    - ip: 10.0.3.128
    qosClass: Burstable
    startTime: "2025-09-03T14:32:39Z"
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2025-09-03T13:22:31Z"
    labels:
      component: apiserver
      provider: kubernetes
    name: kubernetes
    namespace: default
    resourceVersion: "212"
    uid: 9135a19f-6de1-4cb7-925d-00294da4937a
  spec:
    clusterIP: 172.20.0.1
    clusterIPs:
    - 172.20.0.1
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: https
      port: 443
      protocol: TCP
      targetPort: 443
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app":"elasticsearch-azure"},"name":"elasticsearch-azure-service","namespace":"elasticsearch"},"spec":{"ports":[{"port":9200,"protocol":"TCP","targetPort":9200}],"selector":{"app":"elasticsearch-azure"},"type":"LoadBalancer"}}
    creationTimestamp: "2025-09-03T16:59:51Z"
    finalizers:
    - service.kubernetes.io/load-balancer-cleanup
    labels:
      app: elasticsearch-azure
    name: elasticsearch-azure-service
    namespace: elasticsearch
    resourceVersion: "37086"
    uid: fca7599b-8f80-47b8-9644-824be164e487
  spec:
    allocateLoadBalancerNodePorts: true
    clusterIP: 172.20.27.92
    clusterIPs:
    - 172.20.27.92
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - nodePort: 30344
      port: 9200
      protocol: TCP
      targetPort: 9200
    selector:
      app: elasticsearch-azure
    sessionAffinity: None
    type: LoadBalancer
  status:
    loadBalancer:
      ingress:
      - hostname: afca7599b8f8047b89644824be164e48-336440138.us-west-2.elb.amazonaws.com
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"elasticsearch-service","namespace":"elasticsearch"},"spec":{"ports":[{"port":9200,"targetPort":9200}],"selector":{"app":"elasticsearch"},"type":"LoadBalancer"}}
    creationTimestamp: "2025-09-03T13:31:30Z"
    finalizers:
    - service.kubernetes.io/load-balancer-cleanup
    name: elasticsearch-service
    namespace: elasticsearch
    resourceVersion: "6456"
    uid: ba2ec55e-0e98-460e-8f55-e3a19b397187
  spec:
    allocateLoadBalancerNodePorts: true
    clusterIP: 172.20.136.12
    clusterIPs:
    - 172.20.136.12
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - nodePort: 30805
      port: 9200
      protocol: TCP
      targetPort: 9200
    selector:
      app: elasticsearch
    sessionAffinity: None
    type: LoadBalancer
  status:
    loadBalancer:
      ingress:
      - hostname: aba2ec55e0e98460e8f55e3a19b39718-980465324.us-west-2.elb.amazonaws.com
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app":"kibana-azure"},"name":"kibana-azure-service","namespace":"elasticsearch"},"spec":{"ports":[{"port":5601,"protocol":"TCP","targetPort":5601}],"selector":{"app":"kibana-azure"},"type":"LoadBalancer"}}
    creationTimestamp: "2025-09-03T16:59:58Z"
    finalizers:
    - service.kubernetes.io/load-balancer-cleanup
    labels:
      app: kibana-azure
    name: kibana-azure-service
    namespace: elasticsearch
    resourceVersion: "37138"
    uid: 94e05bc1-9717-4e3e-8438-a9b1806652e5
  spec:
    allocateLoadBalancerNodePorts: true
    clusterIP: 172.20.136.56
    clusterIPs:
    - 172.20.136.56
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - nodePort: 31612
      port: 5601
      protocol: TCP
      targetPort: 5601
    selector:
      app: kibana-azure
    sessionAffinity: None
    type: LoadBalancer
  status:
    loadBalancer:
      ingress:
      - hostname: a94e05bc197174e3e8438a9b1806652e-1962664903.us-west-2.elb.amazonaws.com
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app":"kibana"},"name":"kibana-service","namespace":"elasticsearch"},"spec":{"ports":[{"port":5601,"protocol":"TCP","targetPort":5601}],"selector":{"app":"kibana"},"type":"LoadBalancer"}}
    creationTimestamp: "2025-09-03T13:31:43Z"
    finalizers:
    - service.kubernetes.io/load-balancer-cleanup
    labels:
      app: kibana
    name: kibana-service
    namespace: elasticsearch
    resourceVersion: "13545"
    uid: 889eb058-5d62-49a5-aebc-367c2bd188be
  spec:
    allocateLoadBalancerNodePorts: true
    clusterIP: 172.20.238.148
    clusterIPs:
    - 172.20.238.148
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - nodePort: 30129
      port: 5601
      protocol: TCP
      targetPort: 5601
    selector:
      app: kibana
    sessionAffinity: None
    type: LoadBalancer
  status:
    loadBalancer:
      ingress:
      - hostname: a889eb0585d6249a5aebc367c2bd188b-264552843.us-west-2.elb.amazonaws.com
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2025-09-03T13:22:33Z"
    name: eks-extension-metrics-api
    namespace: kube-system
    resourceVersion: "278"
    uid: fdd8c04a-a4be-4248-80ee-9f0d518e417a
  spec:
    clusterIP: 172.20.199.175
    clusterIPs:
    - 172.20.199.175
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: metrics-api
      port: 443
      protocol: TCP
      targetPort: 10443
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      prometheus.io/port: "9153"
      prometheus.io/scrape: "true"
    creationTimestamp: "2025-09-03T13:23:35Z"
    labels:
      eks.amazonaws.com/component: kube-dns
      k8s-app: kube-dns
      kubernetes.io/cluster-service: "true"
      kubernetes.io/name: CoreDNS
    name: kube-dns
    namespace: kube-system
    resourceVersion: "539"
    uid: 8c686f51-cbaf-4052-b1f2-14c6def8215e
  spec:
    clusterIP: 172.20.0.10
    clusterIPs:
    - 172.20.0.10
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: dns
      port: 53
      protocol: UDP
      targetPort: 53
    - name: dns-tcp
      port: 53
      protocol: TCP
      targetPort: 53
    - name: metrics
      port: 9153
      protocol: TCP
      targetPort: 9153
    selector:
      k8s-app: kube-dns
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app":"elasticsearch-exporter"},"name":"elasticsearch-exporter-service","namespace":"monitoring"},"spec":{"ports":[{"port":9114,"protocol":"TCP","targetPort":9114}],"selector":{"app":"elasticsearch-exporter"},"type":"ClusterIP"}}
    creationTimestamp: "2025-09-03T14:17:58Z"
    labels:
      app: elasticsearch-exporter
    name: elasticsearch-exporter-service
    namespace: monitoring
    resourceVersion: "9417"
    uid: facadda6-4a96-4f54-9102-1120b621f44e
  spec:
    clusterIP: 172.20.125.170
    clusterIPs:
    - 172.20.125.170
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - port: 9114
      protocol: TCP
      targetPort: 9114
    selector:
      app: elasticsearch-exporter
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app":"grafana"},"name":"grafana-service","namespace":"monitoring"},"spec":{"ports":[{"port":3000,"protocol":"TCP","targetPort":3000}],"selector":{"app":"grafana"},"type":"LoadBalancer"}}
    creationTimestamp: "2025-09-03T14:12:20Z"
    finalizers:
    - service.kubernetes.io/load-balancer-cleanup
    labels:
      app: grafana
    name: grafana-service
    namespace: monitoring
    resourceVersion: "8425"
    uid: 007b9692-ccc5-43ae-a978-74996577ba7a
  spec:
    allocateLoadBalancerNodePorts: true
    clusterIP: 172.20.55.110
    clusterIPs:
    - 172.20.55.110
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - nodePort: 32533
      port: 3000
      protocol: TCP
      targetPort: 3000
    selector:
      app: grafana
    sessionAffinity: None
    type: LoadBalancer
  status:
    loadBalancer:
      ingress:
      - hostname: a007b9692ccc543aea97874996577ba7-103818889.us-west-2.elb.amazonaws.com
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app":"prometheus"},"name":"prometheus-service","namespace":"monitoring"},"spec":{"ports":[{"port":9090,"protocol":"TCP","targetPort":9090}],"selector":{"app":"prometheus"},"type":"LoadBalancer"}}
    creationTimestamp: "2025-09-03T14:09:05Z"
    finalizers:
    - service.kubernetes.io/load-balancer-cleanup
    labels:
      app: prometheus
    name: prometheus-service
    namespace: monitoring
    resourceVersion: "7858"
    uid: e2fd7b36-1e81-48e7-8902-5e77d418857e
  spec:
    allocateLoadBalancerNodePorts: true
    clusterIP: 172.20.142.228
    clusterIPs:
    - 172.20.142.228
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - nodePort: 31136
      port: 9090
      protocol: TCP
      targetPort: 9090
    selector:
      app: prometheus
    sessionAffinity: None
    type: LoadBalancer
  status:
    loadBalancer:
      ingress:
      - hostname: ae2fd7b361e8148e789025e77d418857-490492219.us-west-2.elb.amazonaws.com
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-09-03T13:23:36Z"
    generation: 1
    labels:
      app.kubernetes.io/instance: aws-vpc-cni
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: aws-node
      app.kubernetes.io/version: v1.19.5
      helm.sh/chart: aws-vpc-cni-1.19.5
      k8s-app: aws-node
    name: aws-node
    namespace: kube-system
    resourceVersion: "7137"
    uid: b77db2e1-f733-4768-986e-669756eeac4a
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: aws-node
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: aws-vpc-cni
          app.kubernetes.io/name: aws-node
          k8s-app: aws-node
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
                - key: kubernetes.io/arch
                  operator: In
                  values:
                  - amd64
                  - arm64
                - key: eks.amazonaws.com/compute-type
                  operator: NotIn
                  values:
                  - fargate
                  - hybrid
                  - auto
        containers:
        - env:
          - name: ADDITIONAL_ENI_TAGS
            value: '{}'
          - name: ANNOTATE_POD_IP
            value: "false"
          - name: AWS_VPC_CNI_NODE_PORT_SUPPORT
            value: "true"
          - name: AWS_VPC_ENI_MTU
            value: "9001"
          - name: AWS_VPC_K8S_CNI_CUSTOM_NETWORK_CFG
            value: "false"
          - name: AWS_VPC_K8S_CNI_EXTERNALSNAT
            value: "false"
          - name: AWS_VPC_K8S_CNI_LOGLEVEL
            value: DEBUG
          - name: AWS_VPC_K8S_CNI_LOG_FILE
            value: /host/var/log/aws-routed-eni/ipamd.log
          - name: AWS_VPC_K8S_CNI_RANDOMIZESNAT
            value: prng
          - name: AWS_VPC_K8S_CNI_VETHPREFIX
            value: eni
          - name: AWS_VPC_K8S_PLUGIN_LOG_FILE
            value: /var/log/aws-routed-eni/plugin.log
          - name: AWS_VPC_K8S_PLUGIN_LOG_LEVEL
            value: DEBUG
          - name: CLUSTER_NAME
            value: elasticsearch-dev
          - name: DISABLE_INTROSPECTION
            value: "false"
          - name: DISABLE_METRICS
            value: "false"
          - name: DISABLE_NETWORK_RESOURCE_PROVISIONING
            value: "false"
          - name: ENABLE_IPv4
            value: "true"
          - name: ENABLE_IPv6
            value: "false"
          - name: ENABLE_POD_ENI
            value: "false"
          - name: ENABLE_PREFIX_DELEGATION
            value: "false"
          - name: ENABLE_SUBNET_DISCOVERY
            value: "true"
          - name: NETWORK_POLICY_ENFORCING_MODE
            value: standard
          - name: VPC_CNI_VERSION
            value: v1.19.5
          - name: VPC_ID
            value: vpc-019a474c4bf3b10bf
          - name: WARM_ENI_TARGET
            value: "1"
          - name: WARM_PREFIX_TARGET
            value: "1"
          - name: MY_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: MY_POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          image: 602401143452.dkr.ecr.us-west-2.amazonaws.com/amazon-k8s-cni:v1.19.5-eksbuild.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /app/grpc-health-probe
              - -addr=:50051
              - -connect-timeout=5s
              - -rpc-timeout=5s
            failureThreshold: 3
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: aws-node
          ports:
          - containerPort: 61678
            name: metrics
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /app/grpc-health-probe
              - -addr=:50051
              - -connect-timeout=5s
              - -rpc-timeout=5s
            failureThreshold: 3
            initialDelaySeconds: 1
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          resources:
            requests:
              cpu: 25m
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /host/opt/cni/bin
            name: cni-bin-dir
          - mountPath: /host/etc/cni/net.d
            name: cni-net-dir
          - mountPath: /host/var/log/aws-routed-eni
            name: log-dir
          - mountPath: /var/run/aws-node
            name: run-dir
          - mountPath: /run/xtables.lock
            name: xtables-lock
        - args:
          - --enable-ipv6=false
          - --enable-network-policy=false
          - --enable-cloudwatch-logs=false
          - --enable-policy-event-logs=false
          - --log-file=/var/log/aws-routed-eni/network-policy-agent.log
          - --metrics-bind-addr=:8162
          - --health-probe-bind-addr=:8163
          - --conntrack-cache-cleanup-period=300
          env:
          - name: MY_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: 602401143452.dkr.ecr.us-west-2.amazonaws.com/amazon/aws-network-policy-agent:v1.2.1-eksbuild.1
          imagePullPolicy: Always
          name: aws-eks-nodeagent
          ports:
          - containerPort: 8162
            name: agentmetrics
            protocol: TCP
          resources:
            requests:
              cpu: 25m
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /host/opt/cni/bin
            name: cni-bin-dir
          - mountPath: /sys/fs/bpf
            name: bpf-pin-path
          - mountPath: /var/log/aws-routed-eni
            name: log-dir
          - mountPath: /var/run/aws-node
            name: run-dir
        dnsPolicy: ClusterFirst
        hostNetwork: true
        initContainers:
        - env:
          - name: DISABLE_TCP_EARLY_DEMUX
            value: "false"
          - name: ENABLE_IPv6
            value: "false"
          image: 602401143452.dkr.ecr.us-west-2.amazonaws.com/amazon-k8s-cni-init:v1.19.5-eksbuild.1
          imagePullPolicy: Always
          name: aws-vpc-cni-init
          resources:
            requests:
              cpu: 25m
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /host/opt/cni/bin
            name: cni-bin-dir
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: aws-node
        serviceAccountName: aws-node
        terminationGracePeriodSeconds: 10
        tolerations:
        - operator: Exists
        volumes:
        - hostPath:
            path: /sys/fs/bpf
            type: ""
          name: bpf-pin-path
        - hostPath:
            path: /opt/cni/bin
            type: ""
          name: cni-bin-dir
        - hostPath:
            path: /etc/cni/net.d
            type: ""
          name: cni-net-dir
        - hostPath:
            path: /var/log/aws-routed-eni
            type: DirectoryOrCreate
          name: log-dir
        - hostPath:
            path: /var/run/aws-node
            type: DirectoryOrCreate
          name: run-dir
        - hostPath:
            path: /run/xtables.lock
            type: FileOrCreate
          name: xtables-lock
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 10%
      type: RollingUpdate
  status:
    currentNumberScheduled: 2
    desiredNumberScheduled: 2
    numberAvailable: 2
    numberMisscheduled: 0
    numberReady: 2
    observedGeneration: 1
    updatedNumberScheduled: 2
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-09-03T13:23:35Z"
    generation: 1
    labels:
      eks.amazonaws.com/component: kube-proxy
      k8s-app: kube-proxy
    name: kube-proxy
    namespace: kube-system
    resourceVersion: "7038"
    uid: 929beffa-dbe6-4d12-9695-22e9f77be98e
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: kube-proxy
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: kube-proxy
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
                - key: kubernetes.io/arch
                  operator: In
                  values:
                  - amd64
                  - arm64
                - key: eks.amazonaws.com/compute-type
                  operator: NotIn
                  values:
                  - fargate
                  - auto
        containers:
        - command:
          - kube-proxy
          - --v=2
          - --config=/var/lib/kube-proxy-config/config
          - --hostname-override=$(NODE_NAME)
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: 602401143452.dkr.ecr.us-west-2.amazonaws.com/eks/kube-proxy:v1.33.0-eksbuild.2
          imagePullPolicy: IfNotPresent
          name: kube-proxy
          resources:
            requests:
              cpu: 100m
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/log
            name: varlog
          - mountPath: /run/xtables.lock
            name: xtables-lock
          - mountPath: /lib/modules
            name: lib-modules
            readOnly: true
          - mountPath: /var/lib/kube-proxy/
            name: kubeconfig
          - mountPath: /var/lib/kube-proxy-config/
            name: config
        dnsPolicy: ClusterFirst
        hostNetwork: true
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: kube-proxy
        serviceAccountName: kube-proxy
        terminationGracePeriodSeconds: 30
        tolerations:
        - operator: Exists
        volumes:
        - hostPath:
            path: /var/log
            type: ""
          name: varlog
        - hostPath:
            path: /run/xtables.lock
            type: FileOrCreate
          name: xtables-lock
        - hostPath:
            path: /lib/modules
            type: ""
          name: lib-modules
        - configMap:
            defaultMode: 420
            name: kube-proxy
          name: kubeconfig
        - configMap:
            defaultMode: 420
            name: kube-proxy-config
          name: config
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 10%
      type: RollingUpdate
  status:
    currentNumberScheduled: 2
    desiredNumberScheduled: 2
    numberAvailable: 2
    numberMisscheduled: 0
    numberReady: 2
    observedGeneration: 1
    updatedNumberScheduled: 2
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "3"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"elasticsearch"},"name":"elasticsearch","namespace":"elasticsearch"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"elasticsearch"}},"template":{"metadata":{"labels":{"app":"elasticsearch"}},"spec":{"containers":[{"env":[{"name":"discovery.type","value":"single-node"},{"name":"xpack.security.enabled","value":"false"},{"name":"ES_JAVA_OPTS","value":"-Xms1g -Xmx1g"}],"image":"docker.elastic.co/elasticsearch/elasticsearch:8.11.0","name":"elasticsearch","ports":[{"containerPort":9200}],"resources":{"limits":{"cpu":"1000m","memory":"2Gi"},"requests":{"cpu":"500m","memory":"1Gi"}}}]}}}}
    creationTimestamp: "2025-09-03T13:31:29Z"
    generation: 3
    labels:
      app: elasticsearch
    name: elasticsearch
    namespace: elasticsearch
    resourceVersion: "19411"
    uid: e45c0793-e0ac-4379-a7a2-22e4bf935381
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: elasticsearch
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: elasticsearch
      spec:
        containers:
        - env:
          - name: discovery.type
            value: single-node
          - name: xpack.security.enabled
            value: "false"
          - name: ES_JAVA_OPTS
            value: -Xms1g -Xmx1g
          image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
          imagePullPolicy: IfNotPresent
          name: elasticsearch
          ports:
          - containerPort: 9200
            protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 2Gi
            requests:
              cpu: 500m
              memory: 1Gi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-09-03T15:13:37Z"
      lastUpdateTime: "2025-09-03T15:13:37Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-09-03T14:05:46Z"
      lastUpdateTime: "2025-09-03T15:13:37Z"
      message: ReplicaSet "elasticsearch-6c9bbb6d75" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 3
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"elasticsearch-azure"},"name":"elasticsearch-azure","namespace":"elasticsearch"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"elasticsearch-azure"}},"template":{"metadata":{"labels":{"app":"elasticsearch-azure"}},"spec":{"containers":[{"env":[{"name":"discovery.type","value":"single-node"},{"name":"xpack.security.enabled","value":"false"},{"name":"ES_JAVA_OPTS","value":"-Xms1g -Xmx1g"}],"image":"docker.elastic.co/elasticsearch/elasticsearch:8.11.0","name":"elasticsearch","ports":[{"containerPort":9200},{"containerPort":9300}],"resources":{"limits":{"cpu":"1000m","memory":"2Gi"},"requests":{"cpu":"500m","memory":"1Gi"}}}]}}}}
    creationTimestamp: "2025-09-03T16:59:50Z"
    generation: 1
    labels:
      app: elasticsearch-azure
    name: elasticsearch-azure
    namespace: elasticsearch
    resourceVersion: "37078"
    uid: 1e84632c-2abf-4caf-8977-bf8a88338eb9
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: elasticsearch-azure
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: elasticsearch-azure
      spec:
        containers:
        - env:
          - name: discovery.type
            value: single-node
          - name: xpack.security.enabled
            value: "false"
          - name: ES_JAVA_OPTS
            value: -Xms1g -Xmx1g
          image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
          imagePullPolicy: IfNotPresent
          name: elasticsearch
          ports:
          - containerPort: 9200
            protocol: TCP
          - containerPort: 9300
            protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 2Gi
            requests:
              cpu: 500m
              memory: 1Gi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-09-03T16:59:52Z"
      lastUpdateTime: "2025-09-03T16:59:52Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-09-03T16:59:50Z"
      lastUpdateTime: "2025-09-03T16:59:52Z"
      message: ReplicaSet "elasticsearch-azure-6b49cc647f" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "8"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"kibana"},"name":"kibana","namespace":"elasticsearch"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"kibana"}},"template":{"metadata":{"labels":{"app":"kibana"}},"spec":{"containers":[{"env":[{"name":"ELASTICSEARCH_HOSTS","value":"http://elasticsearch-service:9200"},{"name":"SERVER_NAME","value":"kibana"},{"name":"SERVER_HOST","value":"0.0.0.0"},{"name":"XPACK_SECURITY_ENABLED","value":"false"},{"name":"XPACK_FLEET_ENABLED","value":"false"},{"name":"XPACK_INGEST_MANAGER_ENABLED","value":"false"},{"name":"TELEMETRY_ENABLED","value":"false"},{"name":"XPACK_TELEMETRY_ENABLED","value":"false"},{"name":"XPACK_CLOUD_ENABLED","value":"false"},{"name":"XPACK_CLOUD_SECURITY_POSTURE_ENABLED","value":"false"},{"name":"XPACK_CLOUD_DEFEND_ENABLED","value":"false"},{"name":"XPACK_CLOUD_EXPERIMENTS_ENABLED","value":"false"},{"name":"XPACK_CLOUD_INTEGRATIONS_ENABLED","value":"false"},{"name":"XPACK_ML_ENABLED","value":"false"},{"name":"XPACK_WATCHER_ENABLED","value":"false"},{"name":"XPACK_GRAPH_ENABLED","value":"false"},{"name":"XPACK_REPORTING_ENABLED","value":"false"},{"name":"XPACK_CANVAS_ENABLED","value":"false"},{"name":"XPACK_MAPS_ENABLED","value":"false"},{"name":"XPACK_UPTIME_ENABLED","value":"false"},{"name":"XPACK_APM_ENABLED","value":"false"},{"name":"XPACK_INFRA_ENABLED","value":"false"},{"name":"XPACK_LOGS_ENABLED","value":"false"},{"name":"XPACK_METRICS_ENABLED","value":"false"},{"name":"XPACK_SYNTHETICS_ENABLED","value":"false"},{"name":"XPACK_OBSERVABILITY_ENABLED","value":"false"},{"name":"XPACK_HOME_ENABLED","value":"false"},{"name":"NEWSFEED_ENABLED","value":"false"},{"name":"XPACK_ENCRYPTEDSAVEDOBJECTS_ENCRYPTIONKEY","value":"something_at_least_32_characters_long"},{"name":"XPACK_REPORTING_ENCRYPTIONKEY","value":"something_at_least_32_characters_long"},{"name":"XPACK_SECURITY_ENCRYPTIONKEY","value":"something_at_least_32_characters_long"}],"image":"docker.elastic.co/kibana/kibana:8.11.0","livenessProbe":{"httpGet":{"path":"/api/status","port":5601},"initialDelaySeconds":180,"timeoutSeconds":10},"name":"kibana","ports":[{"containerPort":5601}],"readinessProbe":{"httpGet":{"path":"/api/status","port":5601},"initialDelaySeconds":90,"timeoutSeconds":10},"resources":{"limits":{"cpu":"500m","memory":"1Gi"},"requests":{"cpu":"250m","memory":"512Mi"}}}]}}}}
    creationTimestamp: "2025-09-03T13:31:42Z"
    generation: 10
    labels:
      app: kibana
    name: kibana
    namespace: elasticsearch
    resourceVersion: "19877"
    uid: 3596351d-1163-49ab-88ec-bcbb1a58b8ba
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: kibana
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: kibana
      spec:
        containers:
        - env:
          - name: ELASTICSEARCH_HOSTS
            value: http://elasticsearch-service:9200
          - name: SERVER_NAME
            value: kibana
          - name: SERVER_HOST
            value: 0.0.0.0
          - name: XPACK_SECURITY_ENABLED
            value: "false"
          - name: XPACK_FLEET_ENABLED
            value: "false"
          - name: XPACK_INGEST_MANAGER_ENABLED
            value: "false"
          - name: TELEMETRY_ENABLED
            value: "false"
          - name: XPACK_TELEMETRY_ENABLED
            value: "false"
          - name: XPACK_CLOUD_ENABLED
            value: "false"
          - name: XPACK_CLOUD_SECURITY_POSTURE_ENABLED
            value: "false"
          - name: XPACK_CLOUD_DEFEND_ENABLED
            value: "false"
          - name: XPACK_CLOUD_EXPERIMENTS_ENABLED
            value: "false"
          - name: XPACK_CLOUD_INTEGRATIONS_ENABLED
            value: "false"
          - name: XPACK_ML_ENABLED
            value: "false"
          - name: XPACK_WATCHER_ENABLED
            value: "false"
          - name: XPACK_GRAPH_ENABLED
            value: "false"
          - name: XPACK_REPORTING_ENABLED
            value: "false"
          - name: XPACK_CANVAS_ENABLED
            value: "false"
          - name: XPACK_MAPS_ENABLED
            value: "false"
          - name: XPACK_UPTIME_ENABLED
            value: "false"
          - name: XPACK_APM_ENABLED
            value: "false"
          - name: XPACK_INFRA_ENABLED
            value: "false"
          - name: XPACK_LOGS_ENABLED
            value: "false"
          - name: XPACK_METRICS_ENABLED
            value: "false"
          - name: XPACK_SYNTHETICS_ENABLED
            value: "false"
          - name: XPACK_OBSERVABILITY_ENABLED
            value: "false"
          - name: XPACK_HOME_ENABLED
            value: "false"
          - name: NEWSFEED_ENABLED
            value: "false"
          - name: XPACK_ENCRYPTEDSAVEDOBJECTS_ENCRYPTIONKEY
            value: something_at_least_32_characters_long
          - name: XPACK_REPORTING_ENCRYPTIONKEY
            value: something_at_least_32_characters_long
          - name: XPACK_SECURITY_ENCRYPTIONKEY
            value: something_at_least_32_characters_long
          image: docker.elastic.co/kibana/kibana:8.11.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /api/status
              port: 5601
              scheme: HTTP
            initialDelaySeconds: 180
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: kibana
          ports:
          - containerPort: 5601
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /api/status
              port: 5601
              scheme: HTTP
            initialDelaySeconds: 90
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          resources:
            limits:
              cpu: 500m
              memory: 1Gi
            requests:
              cpu: 250m
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-09-03T15:15:56Z"
      lastUpdateTime: "2025-09-03T15:15:56Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-09-03T14:05:46Z"
      lastUpdateTime: "2025-09-03T15:15:56Z"
      message: ReplicaSet "kibana-784545c5c9" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 10
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"kibana-azure"},"name":"kibana-azure","namespace":"elasticsearch"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"kibana-azure"}},"template":{"metadata":{"labels":{"app":"kibana-azure"}},"spec":{"containers":[{"env":[{"name":"ELASTICSEARCH_HOSTS","value":"http://elasticsearch-azure-service:9200"},{"name":"xpack.security.enabled","value":"false"},{"name":"xpack.fleet.enabled","value":"false"},{"name":"xpack.ingestManager.enabled","value":"false"},{"name":"telemetry.enabled","value":"false"}],"image":"docker.elastic.co/kibana/kibana:8.11.0","name":"kibana","ports":[{"containerPort":5601}],"resources":{"limits":{"cpu":"500m","memory":"1Gi"},"requests":{"cpu":"250m","memory":"512Mi"}}}]}}}}
    creationTimestamp: "2025-09-03T16:59:58Z"
    generation: 1
    labels:
      app: kibana-azure
    name: kibana-azure
    namespace: elasticsearch
    resourceVersion: "37133"
    uid: 89e0a5ed-06d3-4ad1-9a85-21e462cc4ab5
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: kibana-azure
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: kibana-azure
      spec:
        containers:
        - env:
          - name: ELASTICSEARCH_HOSTS
            value: http://elasticsearch-azure-service:9200
          - name: xpack.security.enabled
            value: "false"
          - name: xpack.fleet.enabled
            value: "false"
          - name: xpack.ingestManager.enabled
            value: "false"
          - name: telemetry.enabled
            value: "false"
          image: docker.elastic.co/kibana/kibana:8.11.0
          imagePullPolicy: IfNotPresent
          name: kibana
          ports:
          - containerPort: 5601
            protocol: TCP
          resources:
            limits:
              cpu: 500m
              memory: 1Gi
            requests:
              cpu: 250m
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-09-03T16:59:59Z"
      lastUpdateTime: "2025-09-03T16:59:59Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-09-03T16:59:58Z"
      lastUpdateTime: "2025-09-03T16:59:59Z"
      message: ReplicaSet "kibana-azure-d8cff6d88" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-09-03T13:23:35Z"
    generation: 1
    labels:
      eks.amazonaws.com/component: coredns
      k8s-app: kube-dns
      kubernetes.io/name: CoreDNS
    name: coredns
    namespace: kube-system
    resourceVersion: "7127"
    uid: 8276a8a6-ec53-4f9a-8bac-2d71c7b8f6de
  spec:
    progressDeadlineSeconds: 600
    replicas: 2
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        eks.amazonaws.com/component: coredns
        k8s-app: kube-dns
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          eks.amazonaws.com/component: coredns
          k8s-app: kube-dns
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
                - key: kubernetes.io/arch
                  operator: In
                  values:
                  - amd64
                  - arm64
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: k8s-app
                    operator: In
                    values:
                    - kube-dns
                topologyKey: kubernetes.io/hostname
              weight: 100
        containers:
        - args:
          - -conf
          - /etc/coredns/Corefile
          image: 602401143452.dkr.ecr.us-west-2.amazonaws.com/eks/coredns:v1.12.1-eksbuild.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: coredns
          ports:
          - containerPort: 53
            name: dns
            protocol: UDP
          - containerPort: 53
            name: dns-tcp
            protocol: TCP
          - containerPort: 9153
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8181
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 170Mi
            requests:
              cpu: 100m
              memory: 70Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - ALL
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/coredns
            name: config-volume
            readOnly: true
        dnsPolicy: Default
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: coredns
        serviceAccountName: coredns
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
        - key: CriticalAddonsOnly
          operator: Exists
        topologySpreadConstraints:
        - labelSelector:
            matchLabels:
              k8s-app: kube-dns
          maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: ScheduleAnyway
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: Corefile
              path: Corefile
            name: coredns
          name: config-volume
  status:
    availableReplicas: 2
    conditions:
    - lastTransitionTime: "2025-09-03T14:05:04Z"
      lastUpdateTime: "2025-09-03T14:05:04Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-09-03T14:05:04Z"
      lastUpdateTime: "2025-09-03T14:05:04Z"
      message: ReplicaSet "coredns-7bf648ff5d" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 2
    replicas: 2
    updatedReplicas: 2
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"elasticsearch-exporter"},"name":"elasticsearch-exporter","namespace":"monitoring"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"elasticsearch-exporter"}},"template":{"metadata":{"labels":{"app":"elasticsearch-exporter","prometheus.io/port":"9114","prometheus.io/scrape":"true"}},"spec":{"containers":[{"env":[{"name":"ES_URI","value":"http://elasticsearch-service.elasticsearch.svc.cluster.local:9200"},{"name":"ES_ALL","value":"true"},{"name":"ES_INDICES","value":"true"},{"name":"ES_INDICES_SETTINGS","value":"true"},{"name":"ES_SNAPSHOTS","value":"true"},{"name":"ES_CLUSTERHEALTH","value":"true"},{"name":"ES_CLUSTERHEALTH_LEVEL","value":"indices"}],"image":"justwatch/elasticsearch_exporter:1.1.0","name":"elasticsearch-exporter","ports":[{"containerPort":9114}],"resources":{"limits":{"cpu":"200m","memory":"256Mi"},"requests":{"cpu":"100m","memory":"128Mi"}}}]}}}}
    creationTimestamp: "2025-09-03T14:17:58Z"
    generation: 1
    labels:
      app: elasticsearch-exporter
    name: elasticsearch-exporter
    namespace: monitoring
    resourceVersion: "9434"
    uid: 1bfbb78e-1261-4bf5-8b65-28cb82f81270
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: elasticsearch-exporter
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: elasticsearch-exporter
          prometheus.io/port: "9114"
          prometheus.io/scrape: "true"
      spec:
        containers:
        - env:
          - name: ES_URI
            value: http://elasticsearch-service.elasticsearch.svc.cluster.local:9200
          - name: ES_ALL
            value: "true"
          - name: ES_INDICES
            value: "true"
          - name: ES_INDICES_SETTINGS
            value: "true"
          - name: ES_SNAPSHOTS
            value: "true"
          - name: ES_CLUSTERHEALTH
            value: "true"
          - name: ES_CLUSTERHEALTH_LEVEL
            value: indices
          image: justwatch/elasticsearch_exporter:1.1.0
          imagePullPolicy: IfNotPresent
          name: elasticsearch-exporter
          ports:
          - containerPort: 9114
            protocol: TCP
          resources:
            limits:
              cpu: 200m
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 128Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-09-03T14:18:01Z"
      lastUpdateTime: "2025-09-03T14:18:01Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-09-03T14:17:58Z"
      lastUpdateTime: "2025-09-03T14:18:01Z"
      message: ReplicaSet "elasticsearch-exporter-777466f6c5" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"grafana"},"name":"grafana","namespace":"monitoring"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"grafana"}},"template":{"metadata":{"labels":{"app":"grafana"}},"spec":{"containers":[{"env":[{"name":"GF_SECURITY_ADMIN_PASSWORD","value":"admin123"},{"name":"GF_USERS_ALLOW_SIGN_UP","value":"false"}],"image":"grafana/grafana:latest","name":"grafana","ports":[{"containerPort":3000}],"resources":{"limits":{"cpu":"200m","memory":"512Mi"},"requests":{"cpu":"100m","memory":"256Mi"}},"volumeMounts":[{"mountPath":"/var/lib/grafana","name":"grafana-storage"},{"mountPath":"/etc/grafana/provisioning/datasources","name":"grafana-config"}]}],"volumes":[{"emptyDir":{},"name":"grafana-storage"},{"configMap":{"name":"grafana-datasources"},"name":"grafana-config"}]}}}}
    creationTimestamp: "2025-09-03T14:12:19Z"
    generation: 1
    labels:
      app: grafana
    name: grafana
    namespace: monitoring
    resourceVersion: "8466"
    uid: d0f07487-2021-4327-aad1-ec9af4711009
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: grafana
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: grafana
      spec:
        containers:
        - env:
          - name: GF_SECURITY_ADMIN_PASSWORD
            value: admin123
          - name: GF_USERS_ALLOW_SIGN_UP
            value: "false"
          image: grafana/grafana:latest
          imagePullPolicy: Always
          name: grafana
          ports:
          - containerPort: 3000
            protocol: TCP
          resources:
            limits:
              cpu: 200m
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/grafana
            name: grafana-storage
          - mountPath: /etc/grafana/provisioning/datasources
            name: grafana-config
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: grafana-storage
        - configMap:
            defaultMode: 420
            name: grafana-datasources
          name: grafana-config
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-09-03T14:12:33Z"
      lastUpdateTime: "2025-09-03T14:12:33Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-09-03T14:12:19Z"
      lastUpdateTime: "2025-09-03T14:12:33Z"
      message: ReplicaSet "grafana-6f9897f555" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "5"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"prometheus"},"name":"prometheus","namespace":"monitoring"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"prometheus"}},"template":{"metadata":{"labels":{"app":"prometheus"}},"spec":{"containers":[{"image":"prom/prometheus:latest","name":"prometheus","ports":[{"containerPort":9090}],"resources":{"limits":{"cpu":"500m","memory":"1Gi"},"requests":{"cpu":"250m","memory":"512Mi"}},"volumeMounts":[{"mountPath":"/etc/prometheus","name":"prometheus-config"},{"mountPath":"/prometheus","name":"prometheus-storage"},{"mountPath":"/etc/prometheus/rules","name":"alert-rules"}]}],"volumes":[{"configMap":{"name":"prometheus-config"},"name":"prometheus-config"},{"emptyDir":{},"name":"prometheus-storage"},{"configMap":{"name":"elasticsearch-monitoring-config"},"name":"alert-rules"}]}}}}
    creationTimestamp: "2025-09-03T14:09:05Z"
    generation: 5
    labels:
      app: prometheus
    name: prometheus
    namespace: monitoring
    resourceVersion: "11983"
    uid: 24f3b736-bfb2-4e8f-ab8d-53813209ccd2
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: prometheus
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-09-03T15:21:09+01:00"
        creationTimestamp: null
        labels:
          app: prometheus
      spec:
        containers:
        - image: prom/prometheus:latest
          imagePullPolicy: Always
          name: prometheus
          ports:
          - containerPort: 9090
            protocol: TCP
          resources:
            limits:
              cpu: 500m
              memory: 1Gi
            requests:
              cpu: 250m
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/prometheus
            name: prometheus-config
          - mountPath: /prometheus
            name: prometheus-storage
          - mountPath: /etc/prometheus/rules
            name: alert-rules
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: prometheus-config
          name: prometheus-config
        - emptyDir: {}
          name: prometheus-storage
        - configMap:
            defaultMode: 420
            name: elasticsearch-monitoring-config
          name: alert-rules
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-09-03T14:09:12Z"
      lastUpdateTime: "2025-09-03T14:09:12Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-09-03T14:09:05Z"
      lastUpdateTime: "2025-09-03T14:32:40Z"
      message: ReplicaSet "prometheus-86d5b77784" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 5
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "2"
    creationTimestamp: "2025-09-03T15:09:00Z"
    generation: 2
    labels:
      app: elasticsearch
      pod-template-hash: 69cc99bd76
    name: elasticsearch-69cc99bd76
    namespace: elasticsearch
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: elasticsearch
      uid: e45c0793-e0ac-4379-a7a2-22e4bf935381
    resourceVersion: "19410"
    uid: 794881e6-d387-4fdc-be9d-a558b9702998
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: elasticsearch
        pod-template-hash: 69cc99bd76
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: elasticsearch
          pod-template-hash: 69cc99bd76
      spec:
        containers:
        - env:
          - name: discovery.type
            value: single-node
          - name: xpack.security.enabled
            value: "false"
          - name: xpack.security.authc.anonymous.enabled
            value: "true"
          - name: xpack.security.authc.anonymous.roles
            value: superuser
          - name: xpack.security.authc.anonymous.authz_exception
            value: "false"
          - name: ES_JAVA_OPTS
            value: -Xms1g -Xmx1g
          image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
          imagePullPolicy: IfNotPresent
          name: elasticsearch
          ports:
          - containerPort: 9200
            protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 2Gi
            requests:
              cpu: 500m
              memory: 1Gi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "3"
      deployment.kubernetes.io/revision-history: "1"
    creationTimestamp: "2025-09-03T13:31:29Z"
    generation: 3
    labels:
      app: elasticsearch
      pod-template-hash: 6c9bbb6d75
    name: elasticsearch-6c9bbb6d75
    namespace: elasticsearch
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: elasticsearch
      uid: e45c0793-e0ac-4379-a7a2-22e4bf935381
    resourceVersion: "19397"
    uid: eb576f1a-76dc-4a45-83fe-ff84fc46697a
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: elasticsearch
        pod-template-hash: 6c9bbb6d75
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: elasticsearch
          pod-template-hash: 6c9bbb6d75
      spec:
        containers:
        - env:
          - name: discovery.type
            value: single-node
          - name: xpack.security.enabled
            value: "false"
          - name: ES_JAVA_OPTS
            value: -Xms1g -Xmx1g
          image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
          imagePullPolicy: IfNotPresent
          name: elasticsearch
          ports:
          - containerPort: 9200
            protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 2Gi
            requests:
              cpu: 500m
              memory: 1Gi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 3
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-09-03T16:59:50Z"
    generation: 1
    labels:
      app: elasticsearch-azure
      pod-template-hash: 6b49cc647f
    name: elasticsearch-azure-6b49cc647f
    namespace: elasticsearch
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: elasticsearch-azure
      uid: 1e84632c-2abf-4caf-8977-bf8a88338eb9
    resourceVersion: "37077"
    uid: 977ca846-bf7a-483a-b3a8-b9a0d2393f5e
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: elasticsearch-azure
        pod-template-hash: 6b49cc647f
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: elasticsearch-azure
          pod-template-hash: 6b49cc647f
      spec:
        containers:
        - env:
          - name: discovery.type
            value: single-node
          - name: xpack.security.enabled
            value: "false"
          - name: ES_JAVA_OPTS
            value: -Xms1g -Xmx1g
          image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
          imagePullPolicy: IfNotPresent
          name: elasticsearch
          ports:
          - containerPort: 9200
            protocol: TCP
          - containerPort: 9300
            protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 2Gi
            requests:
              cpu: 500m
              memory: 1Gi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "5"
    creationTimestamp: "2025-09-03T14:56:03Z"
    generation: 3
    labels:
      app: kibana
      pod-template-hash: 58879884d4
    name: kibana-58879884d4
    namespace: elasticsearch
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: kibana
      uid: 3596351d-1163-49ab-88ec-bcbb1a58b8ba
    resourceVersion: "16719"
    uid: f288f1e4-ef79-4dc1-af77-f71bfafe994c
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: kibana
        pod-template-hash: 58879884d4
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: kibana
          pod-template-hash: 58879884d4
      spec:
        containers:
        - env:
          - name: ELASTICSEARCH_HOSTS
            value: http://elasticsearch-service:9200
          - name: SERVER_NAME
            value: kibana
          - name: SERVER_HOST
            value: 0.0.0.0
          - name: XPACK_SECURITY_ENABLED
            value: "false"
          - name: XPACK_FLEET_ENABLED
            value: "false"
          - name: XPACK_INGEST_MANAGER_ENABLED
            value: "false"
          - name: TELEMETRY_ENABLED
            value: "false"
          - name: XPACK_TELEMETRY_ENABLED
            value: "false"
          - name: XPACK_ENCRYPTEDSAVEDOBJECTS_ENCRYPTIONKEY
            value: something_at_least_32_characters_long
          - name: XPACK_REPORTING_ENCRYPTIONKEY
            value: something_at_least_32_characters_long
          - name: XPACK_SECURITY_ENCRYPTIONKEY
            value: something_at_least_32_characters_long
          image: docker.elastic.co/kibana/kibana:7.17.9
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /api/status
              port: 5601
              scheme: HTTP
            initialDelaySeconds: 120
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: kibana
          ports:
          - containerPort: 5601
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /api/status
              port: 5601
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          resources:
            limits:
              cpu: 500m
              memory: 1Gi
            requests:
              cpu: 250m
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "0"
      deployment.kubernetes.io/max-replicas: "0"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-09-03T13:31:42Z"
    generation: 2
    labels:
      app: kibana
      pod-template-hash: 588d7489f7
    name: kibana-588d7489f7
    namespace: elasticsearch
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: kibana
      uid: 3596351d-1163-49ab-88ec-bcbb1a58b8ba
    resourceVersion: "14409"
    uid: 926d2371-faab-42ba-b5af-a30c1684b2e0
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: kibana
        pod-template-hash: 588d7489f7
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: kibana
          pod-template-hash: 588d7489f7
      spec:
        containers:
        - env:
          - name: ELASTICSEARCH_HOSTS
            value: http://elasticsearch-service:9200
          image: docker.elastic.co/kibana/kibana:8.11.0
          imagePullPolicy: IfNotPresent
          name: kibana
          ports:
          - containerPort: 5601
            protocol: TCP
          resources:
            limits:
              cpu: 500m
              memory: 1Gi
            requests:
              cpu: 250m
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "6"
    creationTimestamp: "2025-09-03T14:58:55Z"
    generation: 3
    labels:
      app: kibana
      pod-template-hash: 6487f96bcc
    name: kibana-6487f96bcc
    namespace: elasticsearch
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: kibana
      uid: 3596351d-1163-49ab-88ec-bcbb1a58b8ba
    resourceVersion: "19558"
    uid: 1f7b4a0f-b10f-4a92-82e0-a3642a19cdfe
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: kibana
        pod-template-hash: 6487f96bcc
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: kibana
          pod-template-hash: 6487f96bcc
      spec:
        containers:
        - env:
          - name: ELASTICSEARCH_HOSTS
            value: http://elasticsearch-service:9200
          - name: SERVER_NAME
            value: kibana
          - name: SERVER_HOST
            value: 0.0.0.0
          - name: XPACK_SECURITY_ENABLED
            value: "false"
          - name: XPACK_FLEET_ENABLED
            value: "false"
          - name: XPACK_INGEST_MANAGER_ENABLED
            value: "false"
          - name: TELEMETRY_ENABLED
            value: "false"
          - name: XPACK_TELEMETRY_ENABLED
            value: "false"
          - name: XPACK_ENCRYPTEDSAVEDOBJECTS_ENCRYPTIONKEY
            value: something_at_least_32_characters_long
          - name: XPACK_REPORTING_ENCRYPTIONKEY
            value: something_at_least_32_characters_long
          - name: XPACK_SECURITY_ENCRYPTIONKEY
            value: something_at_least_32_characters_long
          - name: XPACK_CLOUD_ENABLED
            value: "false"
          - name: XPACK_CLOUD_SECURITY_POSTURE_ENABLED
            value: "false"
          - name: XPACK_CLOUD_DEFEND_ENABLED
            value: "false"
          - name: XPACK_CLOUD_EXPERIMENTS_ENABLED
            value: "false"
          - name: XPACK_CLOUD_INTEGRATIONS_ENABLED
            value: "false"
          - name: XPACK_ML_ENABLED
            value: "false"
          - name: XPACK_WATCHER_ENABLED
            value: "false"
          - name: XPACK_GRAPH_ENABLED
            value: "false"
          - name: XPACK_REPORTING_ENABLED
            value: "false"
          - name: XPACK_CANVAS_ENABLED
            value: "false"
          - name: XPACK_MAPS_ENABLED
            value: "false"
          - name: XPACK_UPTIME_ENABLED
            value: "false"
          - name: XPACK_APM_ENABLED
            value: "false"
          - name: XPACK_INFRA_ENABLED
            value: "false"
          - name: XPACK_LOGS_ENABLED
            value: "false"
          - name: XPACK_METRICS_ENABLED
            value: "false"
          - name: XPACK_SYNTHETICS_ENABLED
            value: "false"
          - name: XPACK_OBSERVABILITY_ENABLED
            value: "false"
          - name: XPACK_HOME_ENABLED
            value: "false"
          - name: NEWSFEED_ENABLED
            value: "false"
          image: docker.elastic.co/kibana/kibana:8.11.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /api/status
              port: 5601
              scheme: HTTP
            initialDelaySeconds: 180
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: kibana
          ports:
          - containerPort: 5601
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /api/status
              port: 5601
              scheme: HTTP
            initialDelaySeconds: 90
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          resources:
            limits:
              cpu: 500m
              memory: 1Gi
            requests:
              cpu: 250m
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "7"
    creationTimestamp: "2025-09-03T15:09:43Z"
    generation: 2
    labels:
      app: kibana
      pod-template-hash: 64bf4f498b
    name: kibana-64bf4f498b
    namespace: elasticsearch
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: kibana
      uid: 3596351d-1163-49ab-88ec-bcbb1a58b8ba
    resourceVersion: "19876"
    uid: 67235f23-e139-46ef-b768-04cab3fe3b75
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: kibana
        pod-template-hash: 64bf4f498b
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: kibana
          pod-template-hash: 64bf4f498b
      spec:
        containers:
        - env:
          - name: ELASTICSEARCH_HOSTS
            value: http://elasticsearch-service:9200
          - name: SERVER_NAME
            value: kibana
          - name: SERVER_HOST
            value: 0.0.0.0
          - name: XPACK_SECURITY_ENABLED
            value: "false"
          - name: XPACK_FLEET_ENABLED
            value: "false"
          - name: XPACK_INGEST_MANAGER_ENABLED
            value: "false"
          - name: TELEMETRY_ENABLED
            value: "false"
          - name: XPACK_TELEMETRY_ENABLED
            value: "false"
          - name: XPACK_CLOUD_ENABLED
            value: "false"
          - name: XPACK_CLOUD_SECURITY_POSTURE_ENABLED
            value: "false"
          - name: XPACK_CLOUD_DEFEND_ENABLED
            value: "false"
          - name: XPACK_CLOUD_EXPERIMENTS_ENABLED
            value: "false"
          - name: XPACK_CLOUD_INTEGRATIONS_ENABLED
            value: "false"
          - name: XPACK_ML_ENABLED
            value: "false"
          - name: XPACK_WATCHER_ENABLED
            value: "false"
          - name: XPACK_GRAPH_ENABLED
            value: "false"
          - name: XPACK_REPORTING_ENABLED
            value: "false"
          - name: XPACK_CANVAS_ENABLED
            value: "false"
          - name: XPACK_MAPS_ENABLED
            value: "false"
          - name: XPACK_UPTIME_ENABLED
            value: "false"
          - name: XPACK_APM_ENABLED
            value: "false"
          - name: XPACK_INFRA_ENABLED
            value: "false"
          - name: XPACK_LOGS_ENABLED
            value: "false"
          - name: XPACK_METRICS_ENABLED
            value: "false"
          - name: XPACK_SYNTHETICS_ENABLED
            value: "false"
          - name: XPACK_OBSERVABILITY_ENABLED
            value: "false"
          - name: XPACK_HOME_ENABLED
            value: "false"
          - name: NEWSFEED_ENABLED
            value: "false"
          - name: XPACK_ENCRYPTEDSAVEDOBJECTS_ENCRYPTIONKEY
            value: something_at_least_32_characters_long
          - name: XPACK_REPORTING_ENCRYPTIONKEY
            value: something_at_least_32_characters_long
          - name: XPACK_SECURITY_ENCRYPTIONKEY
            value: something_at_least_32_characters_long
          - name: ELASTICSEARCH_USERNAME
          - name: ELASTICSEARCH_PASSWORD
          image: docker.elastic.co/kibana/kibana:8.11.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /api/status
              port: 5601
              scheme: HTTP
            initialDelaySeconds: 180
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: kibana
          ports:
          - containerPort: 5601
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /api/status
              port: 5601
              scheme: HTTP
            initialDelaySeconds: 90
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          resources:
            limits:
              cpu: 500m
              memory: 1Gi
            requests:
              cpu: 250m
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "4"
    creationTimestamp: "2025-09-03T14:53:14Z"
    generation: 2
    labels:
      app: kibana
      pod-template-hash: 685b6fbb6
    name: kibana-685b6fbb6
    namespace: elasticsearch
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: kibana
      uid: 3596351d-1163-49ab-88ec-bcbb1a58b8ba
    resourceVersion: "16131"
    uid: 1f01d702-efe3-44be-ac0c-f8be4b84e812
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: kibana
        pod-template-hash: 685b6fbb6
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: kibana
          pod-template-hash: 685b6fbb6
      spec:
        containers:
        - env:
          - name: ELASTICSEARCH_HOSTS
            value: http://elasticsearch-service:9200
          - name: SERVER_NAME
            value: kibana
          - name: SERVER_HOST
            value: 0.0.0.0
          - name: XPACK_SECURITY_ENABLED
            value: "false"
          - name: XPACK_FLEET_ENABLED
            value: "false"
          - name: XPACK_INGEST_MANAGER_ENABLED
            value: "false"
          - name: TELEMETRY_ENABLED
            value: "false"
          - name: XPACK_TELEMETRY_ENABLED
            value: "false"
          - name: XPACK_CLOUD_ENABLED
            value: "false"
          - name: XPACK_CLOUD_SECURITY_POSTURE_ENABLED
            value: "false"
          - name: XPACK_CLOUD_DEFEND_ENABLED
            value: "false"
          - name: XPACK_CLOUD_EXPERIMENTS_ENABLED
            value: "false"
          - name: XPACK_CLOUD_INTEGRATIONS_ENABLED
            value: "false"
          - name: XPACK_ML_ENABLED
            value: "false"
          - name: XPACK_WATCHER_ENABLED
            value: "false"
          - name: XPACK_GRAPH_ENABLED
            value: "false"
          - name: XPACK_REPORTING_ENABLED
            value: "false"
          - name: XPACK_CANVAS_ENABLED
            value: "false"
          - name: XPACK_MAPS_ENABLED
            value: "false"
          - name: XPACK_UPTIME_ENABLED
            value: "false"
          - name: XPACK_APM_ENABLED
            value: "false"
          - name: XPACK_INFRA_ENABLED
            value: "false"
          - name: XPACK_LOGS_ENABLED
            value: "false"
          - name: XPACK_METRICS_ENABLED
            value: "false"
          - name: XPACK_SYNTHETICS_ENABLED
            value: "false"
          - name: XPACK_OBSERVABILITY_ENABLED
            value: "false"
          - name: XPACK_HOME_ENABLED
            value: "false"
          - name: NEWSFEED_ENABLED
            value: "false"
          - name: XPACK_ENCRYPTEDSAVEDOBJECTS_ENCRYPTIONKEY
            value: something_at_least_32_characters_long
          - name: XPACK_REPORTING_ENCRYPTIONKEY
            value: something_at_least_32_characters_long
          - name: XPACK_SECURITY_ENCRYPTIONKEY
            value: something_at_least_32_characters_long
          image: docker.elastic.co/kibana/kibana:8.11.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /api/status
              port: 5601
              scheme: HTTP
            initialDelaySeconds: 180
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: kibana
          ports:
          - containerPort: 5601
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /api/status
              port: 5601
              scheme: HTTP
            initialDelaySeconds: 90
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          resources:
            limits:
              cpu: 500m
              memory: 1Gi
            requests:
              cpu: 250m
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/share/kibana/config/kibana.yml
            name: kibana-config
            subPath: kibana.yml
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: kibana-minimal-config
          name: kibana-config
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "8"
    creationTimestamp: "2025-09-03T15:14:21Z"
    generation: 2
    labels:
      app: kibana
      pod-template-hash: 784545c5c9
    name: kibana-784545c5c9
    namespace: elasticsearch
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: kibana
      uid: 3596351d-1163-49ab-88ec-bcbb1a58b8ba
    resourceVersion: "19864"
    uid: 0ec54ae2-8b0b-416d-8a23-49716be42e1d
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: kibana
        pod-template-hash: 784545c5c9
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: kibana
          pod-template-hash: 784545c5c9
      spec:
        containers:
        - env:
          - name: ELASTICSEARCH_HOSTS
            value: http://elasticsearch-service:9200
          - name: SERVER_NAME
            value: kibana
          - name: SERVER_HOST
            value: 0.0.0.0
          - name: XPACK_SECURITY_ENABLED
            value: "false"
          - name: XPACK_FLEET_ENABLED
            value: "false"
          - name: XPACK_INGEST_MANAGER_ENABLED
            value: "false"
          - name: TELEMETRY_ENABLED
            value: "false"
          - name: XPACK_TELEMETRY_ENABLED
            value: "false"
          - name: XPACK_CLOUD_ENABLED
            value: "false"
          - name: XPACK_CLOUD_SECURITY_POSTURE_ENABLED
            value: "false"
          - name: XPACK_CLOUD_DEFEND_ENABLED
            value: "false"
          - name: XPACK_CLOUD_EXPERIMENTS_ENABLED
            value: "false"
          - name: XPACK_CLOUD_INTEGRATIONS_ENABLED
            value: "false"
          - name: XPACK_ML_ENABLED
            value: "false"
          - name: XPACK_WATCHER_ENABLED
            value: "false"
          - name: XPACK_GRAPH_ENABLED
            value: "false"
          - name: XPACK_REPORTING_ENABLED
            value: "false"
          - name: XPACK_CANVAS_ENABLED
            value: "false"
          - name: XPACK_MAPS_ENABLED
            value: "false"
          - name: XPACK_UPTIME_ENABLED
            value: "false"
          - name: XPACK_APM_ENABLED
            value: "false"
          - name: XPACK_INFRA_ENABLED
            value: "false"
          - name: XPACK_LOGS_ENABLED
            value: "false"
          - name: XPACK_METRICS_ENABLED
            value: "false"
          - name: XPACK_SYNTHETICS_ENABLED
            value: "false"
          - name: XPACK_OBSERVABILITY_ENABLED
            value: "false"
          - name: XPACK_HOME_ENABLED
            value: "false"
          - name: NEWSFEED_ENABLED
            value: "false"
          - name: XPACK_ENCRYPTEDSAVEDOBJECTS_ENCRYPTIONKEY
            value: something_at_least_32_characters_long
          - name: XPACK_REPORTING_ENCRYPTIONKEY
            value: something_at_least_32_characters_long
          - name: XPACK_SECURITY_ENCRYPTIONKEY
            value: something_at_least_32_characters_long
          image: docker.elastic.co/kibana/kibana:8.11.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /api/status
              port: 5601
              scheme: HTTP
            initialDelaySeconds: 180
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: kibana
          ports:
          - containerPort: 5601
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /api/status
              port: 5601
              scheme: HTTP
            initialDelaySeconds: 90
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          resources:
            limits:
              cpu: 500m
              memory: 1Gi
            requests:
              cpu: 250m
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 2
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "3"
    creationTimestamp: "2025-09-03T14:45:51Z"
    generation: 5
    labels:
      app: kibana
      pod-template-hash: 78676d7cfd
    name: kibana-78676d7cfd
    namespace: elasticsearch
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: kibana
      uid: 3596351d-1163-49ab-88ec-bcbb1a58b8ba
    resourceVersion: "17018"
    uid: cc90651c-8aa2-4651-9b24-d710961d76b5
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: kibana
        pod-template-hash: 78676d7cfd
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: kibana
          pod-template-hash: 78676d7cfd
      spec:
        containers:
        - env:
          - name: ELASTICSEARCH_HOSTS
            value: http://elasticsearch-service:9200
          - name: SERVER_NAME
            value: kibana
          - name: SERVER_HOST
            value: 0.0.0.0
          - name: XPACK_SECURITY_ENABLED
            value: "false"
          - name: XPACK_FLEET_ENABLED
            value: "false"
          - name: XPACK_INGEST_MANAGER_ENABLED
            value: "false"
          - name: TELEMETRY_ENABLED
            value: "false"
          - name: XPACK_TELEMETRY_ENABLED
            value: "false"
          - name: XPACK_ENCRYPTEDSAVEDOBJECTS_ENCRYPTIONKEY
            value: something_at_least_32_characters_long
          - name: XPACK_REPORTING_ENCRYPTIONKEY
            value: something_at_least_32_characters_long
          - name: XPACK_SECURITY_ENCRYPTIONKEY
            value: something_at_least_32_characters_long
          image: docker.elastic.co/kibana/kibana:8.11.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /api/status
              port: 5601
              scheme: HTTP
            initialDelaySeconds: 120
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: kibana
          ports:
          - containerPort: 5601
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /api/status
              port: 5601
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          resources:
            limits:
              cpu: 500m
              memory: 1Gi
            requests:
              cpu: 250m
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 5
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "2"
    creationTimestamp: "2025-09-03T14:41:56Z"
    generation: 2
    labels:
      app: kibana
      pod-template-hash: 798c5c78cd
    name: kibana-798c5c78cd
    namespace: elasticsearch
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: kibana
      uid: 3596351d-1163-49ab-88ec-bcbb1a58b8ba
    resourceVersion: "14298"
    uid: f5cda821-83d8-4c11-8c32-39e33342da20
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: kibana
        pod-template-hash: 798c5c78cd
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: kibana
          pod-template-hash: 798c5c78cd
      spec:
        containers:
        - env:
          - name: ELASTICSEARCH_HOSTS
            value: http://elasticsearch-service:9200
          - name: SERVER_NAME
            value: kibana
          - name: SERVER_HOST
            value: 0.0.0.0
          - name: XPACK_SECURITY_ENABLED
            value: "false"
          - name: XPACK_FLEET_ENABLED
            value: "false"
          - name: XPACK_INGEST_MANAGER_ENABLED
            value: "false"
          - name: TELEMETRY_ENABLED
            value: "false"
          - name: XPACK_TELEMETRY_ENABLED
            value: "false"
          image: docker.elastic.co/kibana/kibana:8.11.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /api/status
              port: 5601
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: kibana
          ports:
          - containerPort: 5601
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /api/status
              port: 5601
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          resources:
            limits:
              cpu: 500m
              memory: 1Gi
            requests:
              cpu: 250m
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/share/kibana/config/kibana.yml
            name: kibana-config
            subPath: kibana.yml
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: kibana-config
          name: kibana-config
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-09-03T16:59:58Z"
    generation: 1
    labels:
      app: kibana-azure
      pod-template-hash: d8cff6d88
    name: kibana-azure-d8cff6d88
    namespace: elasticsearch
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: kibana-azure
      uid: 89e0a5ed-06d3-4ad1-9a85-21e462cc4ab5
    resourceVersion: "37130"
    uid: be4ef2de-5380-4d60-858c-251d6ce5a59e
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: kibana-azure
        pod-template-hash: d8cff6d88
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: kibana-azure
          pod-template-hash: d8cff6d88
      spec:
        containers:
        - env:
          - name: ELASTICSEARCH_HOSTS
            value: http://elasticsearch-azure-service:9200
          - name: xpack.security.enabled
            value: "false"
          - name: xpack.fleet.enabled
            value: "false"
          - name: xpack.ingestManager.enabled
            value: "false"
          - name: telemetry.enabled
            value: "false"
          image: docker.elastic.co/kibana/kibana:8.11.0
          imagePullPolicy: IfNotPresent
          name: kibana
          ports:
          - containerPort: 5601
            protocol: TCP
          resources:
            limits:
              cpu: 500m
              memory: 1Gi
            requests:
              cpu: 250m
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-09-03T13:23:35Z"
    generation: 1
    labels:
      eks.amazonaws.com/component: coredns
      k8s-app: kube-dns
      pod-template-hash: 7bf648ff5d
    name: coredns-7bf648ff5d
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: coredns
      uid: 8276a8a6-ec53-4f9a-8bac-2d71c7b8f6de
    resourceVersion: "7123"
    uid: 9fbd1c31-7a77-4e2d-bb04-7d304c6d07b0
  spec:
    replicas: 2
    selector:
      matchLabels:
        eks.amazonaws.com/component: coredns
        k8s-app: kube-dns
        pod-template-hash: 7bf648ff5d
    template:
      metadata:
        creationTimestamp: null
        labels:
          eks.amazonaws.com/component: coredns
          k8s-app: kube-dns
          pod-template-hash: 7bf648ff5d
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
                - key: kubernetes.io/arch
                  operator: In
                  values:
                  - amd64
                  - arm64
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: k8s-app
                    operator: In
                    values:
                    - kube-dns
                topologyKey: kubernetes.io/hostname
              weight: 100
        containers:
        - args:
          - -conf
          - /etc/coredns/Corefile
          image: 602401143452.dkr.ecr.us-west-2.amazonaws.com/eks/coredns:v1.12.1-eksbuild.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: coredns
          ports:
          - containerPort: 53
            name: dns
            protocol: UDP
          - containerPort: 53
            name: dns-tcp
            protocol: TCP
          - containerPort: 9153
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8181
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 170Mi
            requests:
              cpu: 100m
              memory: 70Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - ALL
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/coredns
            name: config-volume
            readOnly: true
        dnsPolicy: Default
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: coredns
        serviceAccountName: coredns
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
        - key: CriticalAddonsOnly
          operator: Exists
        topologySpreadConstraints:
        - labelSelector:
            matchLabels:
              k8s-app: kube-dns
          maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: ScheduleAnyway
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: Corefile
              path: Corefile
            name: coredns
          name: config-volume
  status:
    availableReplicas: 2
    fullyLabeledReplicas: 2
    observedGeneration: 1
    readyReplicas: 2
    replicas: 2
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-09-03T14:17:58Z"
    generation: 1
    labels:
      app: elasticsearch-exporter
      pod-template-hash: 777466f6c5
      prometheus.io/port: "9114"
      prometheus.io/scrape: "true"
    name: elasticsearch-exporter-777466f6c5
    namespace: monitoring
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: elasticsearch-exporter
      uid: 1bfbb78e-1261-4bf5-8b65-28cb82f81270
    resourceVersion: "9431"
    uid: c698999c-64b8-4a84-8105-079fb6be6299
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: elasticsearch-exporter
        pod-template-hash: 777466f6c5
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: elasticsearch-exporter
          pod-template-hash: 777466f6c5
          prometheus.io/port: "9114"
          prometheus.io/scrape: "true"
      spec:
        containers:
        - env:
          - name: ES_URI
            value: http://elasticsearch-service.elasticsearch.svc.cluster.local:9200
          - name: ES_ALL
            value: "true"
          - name: ES_INDICES
            value: "true"
          - name: ES_INDICES_SETTINGS
            value: "true"
          - name: ES_SNAPSHOTS
            value: "true"
          - name: ES_CLUSTERHEALTH
            value: "true"
          - name: ES_CLUSTERHEALTH_LEVEL
            value: indices
          image: justwatch/elasticsearch_exporter:1.1.0
          imagePullPolicy: IfNotPresent
          name: elasticsearch-exporter
          ports:
          - containerPort: 9114
            protocol: TCP
          resources:
            limits:
              cpu: 200m
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 128Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-09-03T14:12:19Z"
    generation: 1
    labels:
      app: grafana
      pod-template-hash: 6f9897f555
    name: grafana-6f9897f555
    namespace: monitoring
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: grafana
      uid: d0f07487-2021-4327-aad1-ec9af4711009
    resourceVersion: "8464"
    uid: 0218243c-5647-4eae-be3a-6c290c4c378f
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: grafana
        pod-template-hash: 6f9897f555
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: grafana
          pod-template-hash: 6f9897f555
      spec:
        containers:
        - env:
          - name: GF_SECURITY_ADMIN_PASSWORD
            value: admin123
          - name: GF_USERS_ALLOW_SIGN_UP
            value: "false"
          image: grafana/grafana:latest
          imagePullPolicy: Always
          name: grafana
          ports:
          - containerPort: 3000
            protocol: TCP
          resources:
            limits:
              cpu: 200m
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/grafana
            name: grafana-storage
          - mountPath: /etc/grafana/provisioning/datasources
            name: grafana-config
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: grafana-storage
        - configMap:
            defaultMode: 420
            name: grafana-datasources
          name: grafana-config
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "3"
    creationTimestamp: "2025-09-03T14:18:45Z"
    generation: 2
    labels:
      app: prometheus
      pod-template-hash: 575c954f7c
    name: prometheus-575c954f7c
    namespace: monitoring
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: prometheus
      uid: 24f3b736-bfb2-4e8f-ab8d-53813209ccd2
    resourceVersion: "10026"
    uid: c294de0f-52e3-4ea3-a33a-e97c38a77e64
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: prometheus
        pod-template-hash: 575c954f7c
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-09-03T15:18:45+01:00"
        creationTimestamp: null
        labels:
          app: prometheus
          pod-template-hash: 575c954f7c
      spec:
        containers:
        - image: prom/prometheus:latest
          imagePullPolicy: Always
          name: prometheus
          ports:
          - containerPort: 9090
            protocol: TCP
          resources:
            limits:
              cpu: 500m
              memory: 1Gi
            requests:
              cpu: 250m
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/prometheus
            name: prometheus-config
          - mountPath: /prometheus
            name: prometheus-storage
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: prometheus-config
          name: prometheus-config
        - emptyDir: {}
          name: prometheus-storage
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "2"
    creationTimestamp: "2025-09-03T14:16:49Z"
    generation: 2
    labels:
      app: prometheus
      pod-template-hash: 864898cb55
    name: prometheus-864898cb55
    namespace: monitoring
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: prometheus
      uid: 24f3b736-bfb2-4e8f-ab8d-53813209ccd2
    resourceVersion: "9597"
    uid: dd3dd617-b945-4530-bb76-0be443f31308
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: prometheus
        pod-template-hash: 864898cb55
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-09-03T15:16:49+01:00"
        creationTimestamp: null
        labels:
          app: prometheus
          pod-template-hash: 864898cb55
      spec:
        containers:
        - image: prom/prometheus:latest
          imagePullPolicy: Always
          name: prometheus
          ports:
          - containerPort: 9090
            protocol: TCP
          resources:
            limits:
              cpu: 500m
              memory: 1Gi
            requests:
              cpu: 250m
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/prometheus
            name: prometheus-config
          - mountPath: /prometheus
            name: prometheus-storage
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: prometheus-config
          name: prometheus-config
        - emptyDir: {}
          name: prometheus-storage
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "5"
    creationTimestamp: "2025-09-03T14:32:39Z"
    generation: 1
    labels:
      app: prometheus
      pod-template-hash: 86d5b77784
    name: prometheus-86d5b77784
    namespace: monitoring
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: prometheus
      uid: 24f3b736-bfb2-4e8f-ab8d-53813209ccd2
    resourceVersion: "11970"
    uid: 04f49848-e40b-45ce-9d49-23f50a32efe4
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: prometheus
        pod-template-hash: 86d5b77784
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-09-03T15:21:09+01:00"
        creationTimestamp: null
        labels:
          app: prometheus
          pod-template-hash: 86d5b77784
      spec:
        containers:
        - image: prom/prometheus:latest
          imagePullPolicy: Always
          name: prometheus
          ports:
          - containerPort: 9090
            protocol: TCP
          resources:
            limits:
              cpu: 500m
              memory: 1Gi
            requests:
              cpu: 250m
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/prometheus
            name: prometheus-config
          - mountPath: /prometheus
            name: prometheus-storage
          - mountPath: /etc/prometheus/rules
            name: alert-rules
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: prometheus-config
          name: prometheus-config
        - emptyDir: {}
          name: prometheus-storage
        - configMap:
            defaultMode: 420
            name: elasticsearch-monitoring-config
          name: alert-rules
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-09-03T14:09:05Z"
    generation: 2
    labels:
      app: prometheus
      pod-template-hash: 9455cfffc
    name: prometheus-9455cfffc
    namespace: monitoring
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: prometheus
      uid: 24f3b736-bfb2-4e8f-ab8d-53813209ccd2
    resourceVersion: "9210"
    uid: 470096a9-1dce-4314-8f19-6bb137ed9422
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: prometheus
        pod-template-hash: 9455cfffc
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: prometheus
          pod-template-hash: 9455cfffc
      spec:
        containers:
        - image: prom/prometheus:latest
          imagePullPolicy: Always
          name: prometheus
          ports:
          - containerPort: 9090
            protocol: TCP
          resources:
            limits:
              cpu: 500m
              memory: 1Gi
            requests:
              cpu: 250m
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/prometheus
            name: prometheus-config
          - mountPath: /prometheus
            name: prometheus-storage
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: prometheus-config
          name: prometheus-config
        - emptyDir: {}
          name: prometheus-storage
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "4"
    creationTimestamp: "2025-09-03T14:21:09Z"
    generation: 2
    labels:
      app: prometheus
      pod-template-hash: d5985dfb9
    name: prometheus-d5985dfb9
    namespace: monitoring
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: prometheus
      uid: 24f3b736-bfb2-4e8f-ab8d-53813209ccd2
    resourceVersion: "11982"
    uid: 2b426e24-ac8a-4daf-ae24-20fa401e9e08
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: prometheus
        pod-template-hash: d5985dfb9
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-09-03T15:21:09+01:00"
        creationTimestamp: null
        labels:
          app: prometheus
          pod-template-hash: d5985dfb9
      spec:
        containers:
        - image: prom/prometheus:latest
          imagePullPolicy: Always
          name: prometheus
          ports:
          - containerPort: 9090
            protocol: TCP
          resources:
            limits:
              cpu: 500m
              memory: 1Gi
            requests:
              cpu: 250m
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/prometheus
            name: prometheus-config
          - mountPath: /prometheus
            name: prometheus-storage
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: prometheus-config
          name: prometheus-config
        - emptyDir: {}
          name: prometheus-storage
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: batch/v1
  kind: Job
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"batch/v1","kind":"Job","metadata":{"annotations":{},"name":"elasticsearch-data-generator","namespace":"elasticsearch"},"spec":{"backoffLimit":3,"template":{"spec":{"containers":[{"command":["/bin/sh","-c","# Create sample index\ncurl -X PUT \"elasticsearch-service:9200/sample-logs\" -H 'Content-Type: application/json' -d '{\n  \"mappings\": {\n    \"properties\": {\n      \"timestamp\": { \"type\": \"date\" },\n      \"level\": { \"type\": \"keyword\" },\n      \"message\": { \"type\": \"text\" },\n      \"service\": { \"type\": \"keyword\" },\n      \"response_time\": { \"type\": \"integer\" }\n    }\n  }\n}'\n\n# Generate sample data\nfor i in {1..1000}; do\n  curl -X POST \"elasticsearch-service:9200/sample-logs/_doc\" -H 'Content-Type: application/json' -d \"{\n    \\\"timestamp\\\": \\\"$(date -u +%Y-%m-%dT%H:%M:%S.%3NZ)\\\",\n    \\\"level\\\": \\\"$([ $((RANDOM % 3)) -eq 0 ] \u0026\u0026 echo 'ERROR' || [ $((RANDOM % 2)) -eq 0 ] \u0026\u0026 echo 'WARN' || echo 'INFO')\\\",\n    \\\"message\\\": \\\"Sample log message $i\\\",\n    \\\"service\\\": \\\"$([ $((RANDOM % 4)) -eq 0 ] \u0026\u0026 echo 'web' || [ $((RANDOM % 3)) -eq 0 ] \u0026\u0026 echo 'api' || [ $((RANDOM % 2)) -eq 0 ] \u0026\u0026 echo 'db' || echo 'cache')\\\",\n    \\\"response_time\\\": $((RANDOM % 1000 + 10))\n  }\"\n  sleep 0.1\ndone\n\n# Create some searches to generate metrics\nfor i in {1..50}; do\n  curl -X GET \"elasticsearch-service:9200/sample-logs/_search\" -H 'Content-Type: application/json' -d '{\n    \"query\": {\n      \"match\": {\n        \"message\": \"sample\"\n      }\n    },\n    \"size\": 10\n  }'\n  sleep 0.2\ndone\n"],"image":"curlimages/curl:latest","name":"data-generator"}],"restartPolicy":"Never"}}}}
    creationTimestamp: "2025-09-03T14:31:50Z"
    generation: 1
    labels:
      batch.kubernetes.io/controller-uid: 19732d98-c1e9-4681-9d92-70dede18db37
      batch.kubernetes.io/job-name: elasticsearch-data-generator
      controller-uid: 19732d98-c1e9-4681-9d92-70dede18db37
      job-name: elasticsearch-data-generator
    name: elasticsearch-data-generator
    namespace: elasticsearch
    resourceVersion: "11826"
    uid: 19732d98-c1e9-4681-9d92-70dede18db37
  spec:
    backoffLimit: 3
    completionMode: NonIndexed
    completions: 1
    manualSelector: false
    parallelism: 1
    podReplacementPolicy: TerminatingOrFailed
    selector:
      matchLabels:
        batch.kubernetes.io/controller-uid: 19732d98-c1e9-4681-9d92-70dede18db37
    suspend: false
    template:
      metadata:
        creationTimestamp: null
        labels:
          batch.kubernetes.io/controller-uid: 19732d98-c1e9-4681-9d92-70dede18db37
          batch.kubernetes.io/job-name: elasticsearch-data-generator
          controller-uid: 19732d98-c1e9-4681-9d92-70dede18db37
          job-name: elasticsearch-data-generator
      spec:
        containers:
        - command:
          - /bin/sh
          - -c
          - |
            # Create sample index
            curl -X PUT "elasticsearch-service:9200/sample-logs" -H 'Content-Type: application/json' -d '{
              "mappings": {
                "properties": {
                  "timestamp": { "type": "date" },
                  "level": { "type": "keyword" },
                  "message": { "type": "text" },
                  "service": { "type": "keyword" },
                  "response_time": { "type": "integer" }
                }
              }
            }'

            # Generate sample data
            for i in {1..1000}; do
              curl -X POST "elasticsearch-service:9200/sample-logs/_doc" -H 'Content-Type: application/json' -d "{
                \"timestamp\": \"$(date -u +%Y-%m-%dT%H:%M:%S.%3NZ)\",
                \"level\": \"$([ $((RANDOM % 3)) -eq 0 ] && echo 'ERROR' || [ $((RANDOM % 2)) -eq 0 ] && echo 'WARN' || echo 'INFO')\",
                \"message\": \"Sample log message $i\",
                \"service\": \"$([ $((RANDOM % 4)) -eq 0 ] && echo 'web' || [ $((RANDOM % 3)) -eq 0 ] && echo 'api' || [ $((RANDOM % 2)) -eq 0 ] && echo 'db' || echo 'cache')\",
                \"response_time\": $((RANDOM % 1000 + 10))
              }"
              sleep 0.1
            done

            # Create some searches to generate metrics
            for i in {1..50}; do
              curl -X GET "elasticsearch-service:9200/sample-logs/_search" -H 'Content-Type: application/json' -d '{
                "query": {
                  "match": {
                    "message": "sample"
                  }
                },
                "size": 10
              }'
              sleep 0.2
            done
          image: curlimages/curl:latest
          imagePullPolicy: Always
          name: data-generator
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Never
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    completionTime: "2025-09-03T14:31:56Z"
    conditions:
    - lastProbeTime: "2025-09-03T14:31:56Z"
      lastTransitionTime: "2025-09-03T14:31:56Z"
      message: Reached expected number of succeeded pods
      reason: CompletionsReached
      status: "True"
      type: SuccessCriteriaMet
    - lastProbeTime: "2025-09-03T14:31:56Z"
      lastTransitionTime: "2025-09-03T14:31:56Z"
      message: Reached expected number of succeeded pods
      reason: CompletionsReached
      status: "True"
      type: Complete
    ready: 0
    startTime: "2025-09-03T14:31:50Z"
    succeeded: 1
    terminating: 0
    uncountedTerminatedPods: {}
- apiVersion: batch/v1
  kind: Job
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"batch/v1","kind":"Job","metadata":{"annotations":{},"name":"simple-data-generator","namespace":"elasticsearch"},"spec":{"backoffLimit":3,"template":{"spec":{"containers":[{"command":["/bin/sh","-c","# Create sample index with simpler mapping\ncurl -X PUT \"elasticsearch-service:9200/sample-logs\" -H 'Content-Type: application/json' -d '{\n  \"mappings\": {\n    \"properties\": {\n      \"timestamp\": { \"type\": \"date\", \"format\": \"yyyy-MM-dd HH:mm:ss\" },\n      \"level\": { \"type\": \"keyword\" },\n      \"message\": { \"type\": \"text\" },\n      \"service\": { \"type\": \"keyword\" },\n      \"response_time\": { \"type\": \"integer\" }\n    }\n  }\n}'\n\n# Generate sample data with proper date format\nfor i in {1..500}; do\n  curl -X POST \"elasticsearch-service:9200/sample-logs/_doc\" -H 'Content-Type: application/json' -d \"{\n    \\\"timestamp\\\": \\\"$(date '+%Y-%m-%d %H:%M:%S')\\\",\n    \\\"level\\\": \\\"$([ $((RANDOM % 3)) -eq 0 ] \u0026\u0026 echo 'ERROR' || [ $((RANDOM % 2)) -eq 0 ] \u0026\u0026 echo 'WARN' || echo 'INFO')\\\",\n    \\\"message\\\": \\\"Sample log message number $i with some searchable content\\\",\n    \\\"service\\\": \\\"$([ $((RANDOM % 4)) -eq 0 ] \u0026\u0026 echo 'web' || [ $((RANDOM % 3)) -eq 0 ] \u0026\u0026 echo 'api' || [ $((RANDOM % 2)) -eq 0 ] \u0026\u0026 echo 'db' || echo 'cache')\\\",\n    \\\"response_time\\\": $((RANDOM % 1000 + 10))\n  }\"\n  sleep 0.05\ndone\n\n# Create some searches to generate metrics\nfor i in {1..20}; do\n  curl -X GET \"elasticsearch-service:9200/sample-logs/_search\" -H 'Content-Type: application/json' -d '{\n    \"query\": {\n      \"match\": {\n        \"message\": \"sample\"\n      }\n    },\n    \"size\": 10\n  }'\n  sleep 0.1\ndone\n\necho \"Data generation completed successfully!\"\n"],"image":"curlimages/curl:latest","name":"data-generator"}],"restartPolicy":"Never"}}}}
    creationTimestamp: "2025-09-03T14:34:10Z"
    generation: 1
    labels:
      batch.kubernetes.io/controller-uid: e177b936-5ea1-4a00-9a42-5aa08f2e6196
      batch.kubernetes.io/job-name: simple-data-generator
      controller-uid: e177b936-5ea1-4a00-9a42-5aa08f2e6196
      job-name: simple-data-generator
    name: simple-data-generator
    namespace: elasticsearch
    resourceVersion: "12262"
    uid: e177b936-5ea1-4a00-9a42-5aa08f2e6196
  spec:
    backoffLimit: 3
    completionMode: NonIndexed
    completions: 1
    manualSelector: false
    parallelism: 1
    podReplacementPolicy: TerminatingOrFailed
    selector:
      matchLabels:
        batch.kubernetes.io/controller-uid: e177b936-5ea1-4a00-9a42-5aa08f2e6196
    suspend: false
    template:
      metadata:
        creationTimestamp: null
        labels:
          batch.kubernetes.io/controller-uid: e177b936-5ea1-4a00-9a42-5aa08f2e6196
          batch.kubernetes.io/job-name: simple-data-generator
          controller-uid: e177b936-5ea1-4a00-9a42-5aa08f2e6196
          job-name: simple-data-generator
      spec:
        containers:
        - command:
          - /bin/sh
          - -c
          - |
            # Create sample index with simpler mapping
            curl -X PUT "elasticsearch-service:9200/sample-logs" -H 'Content-Type: application/json' -d '{
              "mappings": {
                "properties": {
                  "timestamp": { "type": "date", "format": "yyyy-MM-dd HH:mm:ss" },
                  "level": { "type": "keyword" },
                  "message": { "type": "text" },
                  "service": { "type": "keyword" },
                  "response_time": { "type": "integer" }
                }
              }
            }'

            # Generate sample data with proper date format
            for i in {1..500}; do
              curl -X POST "elasticsearch-service:9200/sample-logs/_doc" -H 'Content-Type: application/json' -d "{
                \"timestamp\": \"$(date '+%Y-%m-%d %H:%M:%S')\",
                \"level\": \"$([ $((RANDOM % 3)) -eq 0 ] && echo 'ERROR' || [ $((RANDOM % 2)) -eq 0 ] && echo 'WARN' || echo 'INFO')\",
                \"message\": \"Sample log message number $i with some searchable content\",
                \"service\": \"$([ $((RANDOM % 4)) -eq 0 ] && echo 'web' || [ $((RANDOM % 3)) -eq 0 ] && echo 'api' || [ $((RANDOM % 2)) -eq 0 ] && echo 'db' || echo 'cache')\",
                \"response_time\": $((RANDOM % 1000 + 10))
              }"
              sleep 0.05
            done

            # Create some searches to generate metrics
            for i in {1..20}; do
              curl -X GET "elasticsearch-service:9200/sample-logs/_search" -H 'Content-Type: application/json' -d '{
                "query": {
                  "match": {
                    "message": "sample"
                  }
                },
                "size": 10
              }'
              sleep 0.1
            done

            echo "Data generation completed successfully!"
          image: curlimages/curl:latest
          imagePullPolicy: Always
          name: data-generator
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Never
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    completionTime: "2025-09-03T14:34:14Z"
    conditions:
    - lastProbeTime: "2025-09-03T14:34:14Z"
      lastTransitionTime: "2025-09-03T14:34:14Z"
      message: Reached expected number of succeeded pods
      reason: CompletionsReached
      status: "True"
      type: SuccessCriteriaMet
    - lastProbeTime: "2025-09-03T14:34:14Z"
      lastTransitionTime: "2025-09-03T14:34:14Z"
      message: Reached expected number of succeeded pods
      reason: CompletionsReached
      status: "True"
      type: Complete
    ready: 0
    startTime: "2025-09-03T14:34:10Z"
    succeeded: 1
    terminating: 0
    uncountedTerminatedPods: {}
kind: List
metadata:
  resourceVersion: ""
