name: Terraform Infrastructure Pipeline

on:
  push:
    branches: [main, develop, feature/*]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'development'
        type: choice
        options:
        - development
        - staging
        - production

env:
  TF_VERSION: "1.5.0"
  AWS_REGION: "us-east-1"

jobs:
  # Terraform Validation (Fixed)
  terraform-validate:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: ${{ env.TF_VERSION }}
        
    - name: Terraform Init
      run: |
        cd advanced-elastic-terraform
        terraform init
        
    - name: Terraform Format Check
      run: |
        cd advanced-elastic-terraform
        terraform fmt -check -recursive
        
    - name: Terraform Validate
      run: |
        cd advanced-elastic-terraform
        terraform validate

  # Development Environment Deployment
  deploy-development:
    runs-on: ubuntu-latest
    needs: [terraform-validate]
    if: github.ref == 'refs/heads/develop' || github.event.inputs.environment == 'development'
    environment: development
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_DEV }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_DEV }}
        aws-region: ${{ env.AWS_REGION }}
        
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: ${{ env.TF_VERSION }}
        
    - name: Terraform Init
      run: |
        cd advanced-elastic-terraform
        terraform init
        
    - name: Terraform Plan
      run: |
        cd advanced-elastic-terraform
        terraform plan -var-file="environments/development/terraform.tfvars" -out=tfplan-dev
        
    - name: Terraform Apply
      run: |
        cd advanced-elastic-terraform
        terraform apply tfplan-dev

  # Staging Environment Deployment
  deploy-staging:
    runs-on: ubuntu-latest
    needs: [terraform-validate]
    if: github.ref == 'refs/heads/develop' || github.event.inputs.environment == 'staging'
    environment: staging
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_STAGING }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_STAGING }}
        aws-region: ${{ env.AWS_REGION }}
        
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: ${{ env.TF_VERSION }}
        
    - name: Terraform Init
      run: |
        cd advanced-elastic-terraform
        terraform init
        
    - name: Terraform Plan
      run: |
        cd advanced-elastic-terraform
        terraform plan -var-file="environments/staging/terraform.tfvars" -out=tfplan-staging
        
    - name: Terraform Apply
      run: |
        cd advanced-elastic-terraform
        terraform apply tfplan-staging

  # Production Environment Deployment
  deploy-production:
    runs-on: ubuntu-latest
    needs: [terraform-validate]
    if: github.event.inputs.environment == 'production'
    environment: production
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_PROD }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_PROD }}
        aws-region: ${{ env.AWS_REGION }}
        
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: ${{ env.TF_VERSION }}
        
    - name: Terraform Init
      run: |
        cd advanced-elastic-terraform
        terraform init
        
    - name: Terraform Plan
      run: |
        cd advanced-elastic-terraform
        terraform plan -var-file="environments/production/terraform.tfvars" -out=tfplan-prod
        
    - name: Manual Approval Required
      uses: actions/github-script@v7
      with:
        script: |
          core.setFailed('Production deployment requires manual approval in GitHub')
          
    - name: Terraform Apply (After Approval)
      run: |
        cd advanced-elastic-terraform
        terraform apply tfplan-prod
